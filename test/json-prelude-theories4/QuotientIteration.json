{"tag":"module-with-hash","module":{"tag":"theory","id":"QuotientIteration","formals":[{"tag":"formal-type-decl","id":"X","theory":"QuotientIteration"}],"declarations":[{"tag":"var-decl","id":"S","type":{"typehash":"2264696478"}},{"tag":"var-decl","id":"x","type":{"typehash":"3192139499"}},{"tag":"var-decl","id":"y","type":{"typehash":"3192139499"}},{"tag":"formula-decl","id":"action_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}},{"tag":"variable","id":"x","type":{"typehash":"3192139499"}},{"tag":"variable","id":"y","type":{"typehash":"3192139499"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x_1","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x_1","type":{"typehash":"3192139499"}}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"action_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}},{"tag":"variable","id":"x","type":{"typehash":"3192139499"}},{"tag":"variable","id":"y","type":{"typehash":"3192139499"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"y","type":{"typehash":"3192139499"}}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"const-decl","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"const-def":{"tag":"apply","operator":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"y","type":{"typehash":"3192139499"}}}]}}},{"tag":"formula-decl","id":"action_equivalence_is_equivalence","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3199177740"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (typepred \"S!1\" \"R!1\")\n   ((\"\" (expand \"equivalence?\")\n     ((\"\" (flatten)\n       ((\"\" (expand \"reflexive?\")\n         ((\"\" (expand \"symmetric?\")\n           ((\"\" (expand \"transitive?\")\n             ((\"\" (expand \"action\")\n               ((\"\" (prop)\n                 ((\"1\" (skosimp*) ((\"1\" (inst? -4) nil nil)) nil)\n                  (\"2\" (skosimp*)\n                   ((\"2\"\n                     (inst -6 \"EquivClass(S!1)(x!1)\"\n                      \"EquivClass(S!1)(y!1)\")\n                     ((\"2\" (assert) nil nil)) nil))\n                   nil)\n                  (\"3\" (skosimp*)\n                   ((\"3\"\n                     (inst -8 \"EquivClass(S!1)(x!1)\"\n                      \"EquivClass(S!1)(y!1)\" \"EquivClass(S!1)(z!1)\")\n                     ((\"3\" (assert) nil nil)) nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"application-judgement","id":"action_equivalence_is_equivalence","type":[{"typehash":"2264696478"}],"name":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"formals":[[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}],[{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}]],"judgement-type":[{"typehash":"2379851802"}]},{"tag":"formula-decl","id":"QuotientAction_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"4272740387"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3191545724"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"\" (apply-extensionality :hide? t)\n   ((\"\" (lemma \"PreservesEq_quotient_map[X, X]\")\n     ((\"\" (inst?)\n       ((\"\" (expand \"PreservesEq\")\n         ((\"\" (expand \"subset?\")\n           ((\"\" (expand \"member\")\n             ((\"\" (rewrite \"restrict_full[[X, X], bool]\")\n               ((\"\" (inst?) ((\"\" (assert) nil nil)) nil)) nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"2614391051"}}],"type":{"typehash":"4016650181"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (expand \"PreservesEq\")\n   ((\"\" (expand \"subset?\")\n     ((\"\" (expand \"member\")\n       ((\"\" (expand \"EquivalenceKernel\")\n         ((\"\" (expand \"quotient_map\")\n           ((\"\"\n             (rewrite\n              \"restrict_full[[Quotient[X](S!1), Quotient[X](S!1)], bool]\")\n             ((\"\" (rewrite \"restrict_full[[X, X], bool]\")\n               ((\"\" (prop)\n                 ((\"1\" (skosimp*) ((\"1\" (assert) nil nil)) nil)\n                  (\"2\" (skosimp*)\n                   ((\"2\" (typepred \"x!1`1\" \"x!1`2\")\n                     ((\"2\" (expand \"lift\")\n                       ((\"2\" (lemma \"EquivClassEq[X]\")\n                         ((\"2\" (auto-rewrite \"EquivClassNonEmpty[X]\")\n                           ((\"2\" (skosimp*)\n                             ((\"2\" (replace -2)\n                               ((\"2\"\n                                 (replace -3)\n                                 ((\"2\"\n                                   (inst?)\n                                   ((\"1\"\n                                     (assert)\n                                     ((\"1\"\n                                       (hide 2)\n                                       ((\"1\"\n                                         (expand \"action\")\n                                         ((\"1\"\n                                           (rewrite\n                                            \"restrict_full[[X, X], bool]\")\n                                           ((\"1\"\n                                             (case\n                                              \"FORALL(x : X) :\n                   EquivClass(S!1)(choose(EquivClass[X](S!1)(x))) = EquivClass(S!1)(x)\")\n                                             ((\"1\"\n                                               (inst-cp -1 \"x!2\")\n                                               ((\"1\"\n                                                 (expand \"rep\")\n                                                 ((\"1\"\n                                                   (replace -2)\n                                                   ((\"1\"\n                                                     (inst -1 \"x!3\")\n                                                     ((\"1\"\n                                                       (assert)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"2\"\n                                               (hide -1 -2 -3 2)\n                                               ((\"2\"\n                                                 (skosimp*)\n                                                 ((\"2\"\n                                                   (lemma\n                                                    \"EquivClassEq[X]\")\n                                                   ((\"2\"\n                                                     (inst?)\n                                                     ((\"2\"\n                                                       (assert)\n                                                       ((\"2\"\n                                                         (use\n                                                          \"EquivClassChoose[X]\")\n                                                         ((\"2\"\n                                                           (hide 2)\n                                                           ((\"2\"\n                                                             (typepred\n                                                              \"S!1\")\n                                                             ((\"2\"\n                                                               (expand\n                                                                \"equivalence?\")\n                                                               ((\"2\"\n                                                                 (expand\n                                                                  \"symmetric?\")\n                                                                 ((\"2\"\n                                                                   (flatten)\n                                                                   ((\"2\"\n                                                                     (expand\n                                                                      \"repEC\")\n                                                                     ((\"2\"\n                                                                       (forward-chain\n                                                                        -2)\n                                                                       nil\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil)\n                                    (\"2\"\n                                     (rewrite\n                                      \"restrict_full[[X, X], bool]\")\n                                     ((\"2\" (inst 1 \"x!3\") nil nil))\n                                     nil)\n                                    (\"3\"\n                                     (rewrite\n                                      \"restrict_full[[X, X], bool]\")\n                                     ((\"3\" (assert) nil nil))\n                                     nil)\n                                    (\"4\"\n                                     (rewrite\n                                      \"restrict_full[[X, X], bool]\")\n                                     ((\"4\" (inst 1 \"x!2\") nil nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction_TCC3","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"4016427599"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"3133462658"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3191545724"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (expand \"PreservesEq\")\n   ((\"\" (expand \"subset?\")\n     ((\"\" (expand \"member\")\n       ((\"\" (skosimp*)\n         ((\"\"\n           (rewrite\n            \"restrict_full[[Quotient[X](S!1), Quotient[X](S!1)], bool]\")\n           ((\"\" (expand \"EquivalenceKernel\")\n             ((\"\" (expand \"quotient_map\")\n               ((\"\" (typepred \"x!1`1\" \"x!1`2\")\n                 ((\"\" (expand \"lift\")\n                   ((\"\" (lemma \"EquivClassEq[X]\")\n                     ((\"\" (auto-rewrite \"EquivClassNonEmpty[X]\")\n                       ((\"\" (skosimp*)\n                         ((\"\" (replace -2)\n                           ((\"\" (replace -3)\n                             ((\"\" (inst?)\n                               ((\"\"\n                                 (assert)\n                                 ((\"\"\n                                   (hide 2)\n                                   ((\"\"\n                                     (expand \"action\")\n                                     ((\"\"\n                                       (case\n                                        \"FORALL(x : X) :\n                            EquivClass(S!1)(choose(EquivClass[X](S!1)(x))) = EquivClass(S!1)(x)\")\n                                       ((\"1\"\n                                         (inst-cp -1 \"x!2\")\n                                         ((\"1\"\n                                           (expand \"rep\")\n                                           ((\"1\"\n                                             (replace -2)\n                                             ((\"1\"\n                                               (inst -1 \"x!3\")\n                                               ((\"1\" (assert) nil nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil)\n                                        (\"2\"\n                                         (hide -1 -2 -3 2)\n                                         ((\"2\"\n                                           (skosimp*)\n                                           ((\"2\"\n                                             (lemma \"EquivClassEq[X]\")\n                                             ((\"2\"\n                                               (inst?)\n                                               ((\"2\"\n                                                 (assert)\n                                                 ((\"2\"\n                                                   (hide 2)\n                                                   ((\"2\"\n                                                     (use\n                                                      \"rep_lemma[X]\")\n                                                     ((\"2\"\n                                                       (expand\n                                                        \"EquivClass\")\n                                                       ((\"2\"\n                                                         (expand \"rep\")\n                                                         ((\"2\"\n                                                           (typepred\n                                                            \"S!1\")\n                                                           ((\"2\"\n                                                             (expand\n                                                              \"equivalence?\")\n                                                             ((\"2\"\n                                                               (flatten)\n                                                               ((\"2\"\n                                                                 (expand\n                                                                  \"symmetric?\")\n                                                                 ((\"2\"\n                                                                   (forward-chain\n                                                                    -2)\n                                                                   ((\"2\"\n                                                                     (expand\n                                                                      \"nonempty?\")\n                                                                     ((\"2\"\n                                                                       (expand\n                                                                        \"empty?\")\n                                                                       ((\"2\"\n                                                                         (expand\n                                                                          \"member\")\n                                                                         ((\"2\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"x!4\")\n                                                                           ((\"2\"\n                                                                             (expand\n                                                                              \"reflexive?\")\n                                                                             ((\"2\"\n                                                                               (inst?)\n                                                                               nil\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction_TCC4","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2614391051"}}],"type":{"typehash":"3760337393"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"bijective?","theory":"functions","actuals":[{"tag":"type-actual","type":{"typehash":"2038151316"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"3366968262"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"2556758978"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"3133462658"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3191545724"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (typepred \"S!1\" \"R!1\")\n   ((\"\" (expand \"bijective?\")\n     ((\"\" (prop)\n       ((\"1\" (expand \"injective?\")\n         ((\"1\" (skosimp*)\n           ((\"1\" (expand \"lift\")\n             ((\"1\" (typepred \"x1!1\" \"x2!1\")\n               ((\"1\"\n                 (auto-rewrite-theories \"QuotientDefinition[X]\"\n                  \"QuotientDefinition[Quotient[X](S!1)]\")\n                 ((\"1\" (skosimp*)\n                   ((\"1\" (replace -1)\n                     ((\"1\" (replace -2)\n                       ((\"1\" (hide -1 -2)\n                         ((\"1\" (expand \"rep\")\n                           ((\"1\"\n                             (name-replace \"ch1\"\n                              \"choose(EquivClass[Quotient[X](S!1)](R!1)(x!1))\")\n                             ((\"1\"\n                               (name-replace\n                                \"ch2\"\n                                \"choose(EquivClass[Quotient[X](S!1)](R!1)(x!2))\")\n                               ((\"1\"\n                                 (typepred \"ch1\" \"ch2\")\n                                 ((\"1\"\n                                   (skosimp*)\n                                   ((\"1\"\n                                     (replace -1)\n                                     ((\"1\"\n                                       (replace -3)\n                                       ((\"1\"\n                                         (hide -1 -3)\n                                         ((\"1\"\n                                           (name-replace\n                                            \"ch3\"\n                                            \"choose(EquivClass[X](S!1)(x!3))\")\n                                           ((\"1\"\n                                             (name-replace\n                                              \"ch4\"\n                                              \"choose(EquivClass[X](S!1)(x!4))\")\n                                             ((\"1\"\n                                               (typepred \"ch3\" \"ch4\")\n                                               ((\"1\"\n                                                 (stop-rewrite\n                                                  \"EquivClassEq[X]\")\n                                                 ((\"1\"\n                                                   (assert)\n                                                   ((\"1\"\n                                                     (case\n                                                      \"EquivClass[X](action(S!1)(R!1))(ch3)(ch3)\")\n                                                     ((\"1\"\n                                                       (replace -6)\n                                                       ((\"1\"\n                                                         (hide -6)\n                                                         ((\"1\"\n                                                           (assert)\n                                                           ((\"1\"\n                                                             (expand\n                                                              \"action\")\n                                                             ((\"1\"\n                                                               (lemma\n                                                                \"EquivClassEq[X]\")\n                                                               ((\"1\"\n                                                                 (inst?)\n                                                                 ((\"1\"\n                                                                   (prop)\n                                                                   ((\"1\"\n                                                                     (replace\n                                                                      -1)\n                                                                     ((\"1\"\n                                                                       (hide\n                                                                        -1\n                                                                        -2)\n                                                                       ((\"1\"\n                                                                         (lemma\n                                                                          \"EquivClassEq[X]\")\n                                                                         ((\"1\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"S!1\"\n                                                                            \"ch4\"\n                                                                            \"x!4\")\n                                                                           ((\"1\"\n                                                                             (prop)\n                                                                             ((\"1\"\n                                                                               (replace\n                                                                                -1)\n                                                                               ((\"1\"\n                                                                                 (hide\n                                                                                  -1\n                                                                                  -2)\n                                                                                 ((\"1\"\n                                                                                   (hide\n                                                                                    -2\n                                                                                    -3)\n                                                                                   ((\"1\"\n                                                                                     (expand\n                                                                                      \"equivalence?\")\n                                                                                     ((\"1\"\n                                                                                       (flatten)\n                                                                                       ((\"1\"\n                                                                                         (expand\n                                                                                          \"symmetric?\")\n                                                                                         ((\"1\"\n                                                                                           (inst-cp\n                                                                                            -8\n                                                                                            \"EquivClass[X](S!1)(x!4)\"\n                                                                                            \"EquivClass(S!1)(ch3)\")\n                                                                                           ((\"1\"\n                                                                                             (prop)\n                                                                                             ((\"1\"\n                                                                                               (hide\n                                                                                                -2)\n                                                                                               ((\"1\"\n                                                                                                 (inst\n                                                                                                  -8\n                                                                                                  \"x!2\"\n                                                                                                  \"EquivClass[X](S!1)(x!4)\")\n                                                                                                 ((\"1\"\n                                                                                                   (expand\n                                                                                                    \"transitive?\")\n                                                                                                   ((\"1\"\n                                                                                                     (inst-cp\n                                                                                                      -9\n                                                                                                      \"x!1\"\n                                                                                                      \"EquivClass(S!1)(ch3)\"\n                                                                                                      \"EquivClass[X](S!1)(x!4)\")\n                                                                                                     ((\"1\"\n                                                                                                       (assert)\n                                                                                                       ((\"1\"\n                                                                                                         (inst-cp\n                                                                                                          -9\n                                                                                                          \"x!1\"\n                                                                                                          \"EquivClass[X](S!1)(x!4)\"\n                                                                                                          \"x!2\")\n                                                                                                         ((\"1\"\n                                                                                                           (assert)\n                                                                                                           nil\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil)\n                                                                              (\"2\"\n                                                                               (expand\n                                                                                \"equivalence?\")\n                                                                               ((\"2\"\n                                                                                 (expand\n                                                                                  \"symmetric?\")\n                                                                                 ((\"2\"\n                                                                                   (flatten)\n                                                                                   ((\"2\"\n                                                                                     (inst\n                                                                                      -7\n                                                                                      \"x!4\"\n                                                                                      \"ch4\")\n                                                                                     ((\"2\"\n                                                                                       (assert)\n                                                                                       nil\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil)\n                                                      (\"2\"\n                                                       (hide\n                                                        -1\n                                                        -2\n                                                        -3\n                                                        -4\n                                                        -5\n                                                        2)\n                                                       ((\"2\"\n                                                         (expand\n                                                          \"EquivClass\")\n                                                         ((\"2\"\n                                                           (expand\n                                                            \"action\")\n                                                           ((\"2\"\n                                                             (expand\n                                                              \"equivalence?\")\n                                                             ((\"2\"\n                                                               (expand\n                                                                \"reflexive?\")\n                                                               ((\"2\"\n                                                                 (flatten)\n                                                                 ((\"2\"\n                                                                   (inst\n                                                                    -4\n                                                                    \"EquivClass(S!1)(ch3)\")\n                                                                   nil\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil)\n        (\"2\" (expand \"surjective?\")\n         ((\"2\" (skosimp*)\n           ((\"2\" (typepred \"y!1\")\n             ((\"2\" (skosimp*)\n               ((\"2\" (inst 1 \"EquivClass(R!1)(EquivClass(S!1)(x!1))\")\n                 ((\"1\" (expand \"lift\")\n                   ((\"1\" (expand \"quotient_map\")\n                     ((\"1\" (replace -1)\n                       ((\"1\" (lemma \"EquivClassEq[X]\")\n                         ((\"1\" (inst -1 \"action(S!1)(R!1)\" \"_\" \"_\")\n                           ((\"1\"\n                             (case \"nonempty?(EquivClass(R!1)(EquivClass(S!1)(x!1)))\")\n                             ((\"1\" (expand \"rep\")\n                               ((\"1\"\n                                 (name-replace\n                                  \"ch1\"\n                                  \"choose(EquivClass(R!1)(EquivClass(S!1)(x!1)))\")\n                                 ((\"1\"\n                                   (typepred \"ch1\")\n                                   ((\"1\"\n                                     (skosimp*)\n                                     ((\"1\"\n                                       (case \"nonempty?(ch1)\")\n                                       ((\"1\"\n                                         (name-replace\n                                          \"ch2\"\n                                          \"choose(ch1)\")\n                                         ((\"1\"\n                                           (typepred \"ch2\")\n                                           ((\"1\"\n                                             (inst -6 \"ch2\" \"x!1\")\n                                             ((\"1\"\n                                               (assert)\n                                               ((\"1\"\n                                                 (hide 2)\n                                                 ((\"1\"\n                                                   (expand \"action\" 1)\n                                                   ((\"1\"\n                                                     (expand\n                                                      \"EquivClass\"\n                                                      -3)\n                                                     ((\"1\"\n                                                       (expand\n                                                        \"equivalence?\")\n                                                       ((\"1\"\n                                                         (flatten)\n                                                         ((\"1\"\n                                                           (expand\n                                                            \"symmetric?\")\n                                                           ((\"1\"\n                                                             (inst\n                                                              -11\n                                                              \"LAMBDA (z: X): S!1(x!1, z)\"\n                                                              \"ch1\")\n                                                             ((\"1\"\n                                                               (assert)\n                                                               ((\"1\"\n                                                                 (case-replace\n                                                                  \"EquivClass(S!1)(ch2) = ch1\")\n                                                                 ((\"1\"\n                                                                   (expand\n                                                                    \"EquivClass\"\n                                                                    1)\n                                                                   ((\"1\"\n                                                                     (replace\n                                                                      1)\n                                                                     ((\"1\"\n                                                                       (expand\n                                                                        \"EquivClass\"\n                                                                        -5)\n                                                                       ((\"1\"\n                                                                         (propax)\n                                                                         nil\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil)\n                                                                  (\"2\"\n                                                                   (hide\n                                                                    2)\n                                                                   ((\"2\"\n                                                                     (replace\n                                                                      -3)\n                                                                     ((\"2\"\n                                                                       (assert)\n                                                                       ((\"2\"\n                                                                         (lemma\n                                                                          \"EquivClassEq[X]\")\n                                                                         ((\"2\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"S!1\"\n                                                                            \"x!2\"\n                                                                            \"ch2\")\n                                                                           ((\"2\"\n                                                                             (assert)\n                                                                             nil\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil)\n                                                              (\"2\"\n                                                               (inst\n                                                                1\n                                                                \"x!1\")\n                                                               ((\"2\"\n                                                                 (apply-extensionality\n                                                                  :hide?\n                                                                  t)\n                                                                 ((\"2\"\n                                                                   (grind)\n                                                                   nil\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil)\n                                        (\"2\"\n                                         (replace -1)\n                                         ((\"2\"\n                                           (hide -1 -2 -3 -4 -5 2)\n                                           ((\"2\" (grind) nil nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"2\" (hide -1 -2 2)\n                               ((\"2\" (grind) nil nil)) nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil)\n                  (\"2\" (inst 1 \"EquivClass[X](S!1)(x!1)\")\n                   ((\"2\" (inst 1 \"x!1\") nil nil)) nil)\n                  (\"3\" (inst 1 \"x!1\") nil nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}}]},"type-hash":{"tag":"typelist","entries":{"3687953698":{"tag":"functiontype","domain":{"typehash":"2684264717"},"range":{"typehash":"2614391051"}},"3687953698":{"tag":"functiontype","domain":{"typehash":"2684264717"},"range":{"typehash":"2614391051"}},"3687953698":{"tag":"functiontype","domain":{"typehash":"2684264717"},"range":{"typehash":"2614391051"}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"}},"2556758978":{"tag":"functiontype","domain":{"typehash":2469710200},"range":{"typehash":"2555621130"}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"}},"2597866579":{"tag":"dep-binding","id":"S","type":{"typehash":"2597866579"}},"986484413":{"tag":"tupletype","types":[{"typehash":"3192139499"},{"typehash":"3192139499"}]},"2597866579":{"tag":"subtype","supertype":{"typehash":"2264696478"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"R","type":{"typehash":"2264696478"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"2614391051"}}],"type":{"typehash":"4016650181"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"2264696478"}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}}}}}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"}},"3192139499":{"tag":"typename","id":"X","theory":"QuotientIteration","actuals":[]},"2826522078":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2433969977"}},"4272740387":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3687953698"}},"4272740387":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3687953698"}},"4272740387":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3687953698"}},"1089517517":{"tag":"subtype","supertype":{"typehash":"504741969"},"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"4016427599"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2469710200"}}}},"3623875498":{"tag":"functiontype","domain":{"typehash":"504741969"},"range":{"typehash":"2614391051"}},"292393090":{"tag":"functiontype","domain":{"typehash":"986484413"},"range":{"typehash":"2614391051"}},"3623875498":{"tag":"functiontype","domain":{"typehash":"504741969"},"range":{"typehash":"2614391051"}},"2498048177":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"408735966"}},"771841076":{"tag":"functiontype","domain":{"typehash":"1226208406"},"range":{"typehash":"2614391051"}},"376288351":{"tag":"functiontype","domain":{"typehash":"2038151316"},"range":{"typehash":"594952506"}},"408735966":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"2614391051"}},"376585587":{"tag":"functiontype","domain":{"typehash":"2038299934"},"range":{"typehash":"594952506"}},"2469710200":{"tag":"dep-binding","id":"S","type":{"typehash":"2469710200"}},"2614391051":{"tag":"typename","id":"boolean","theory":"booleans","actuals":[]},"2469710200":{"tag":"subtype","supertype":{"typehash":"1174935104"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2102378125"}},{"tag":"type-actual","type":{"typehash":"2614391051"}}],"type":{"typehash":"3760337393"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}}}}}},"3277574760":{"tag":"tupletype","types":[{"typehash":"2524180514"},{"typehash":"2524180514"}]},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2597866579"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"4191690336":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"2102378125"}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"3082834866":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"2498048177"}},"2264696478":{"tag":"dep-binding","id":"S","type":{"typehash":"2264696478"}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2642263807":{"tag":"functiontype","domain":{"typehash":"1174935104"},"range":{"typehash":"292393090"}},"2264696478":{"tag":"dep-binding","id":"S","type":{"typehash":"2264696478"}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2264696478":{"tag":"dep-binding","id":"S","type":{"typehash":"2264696478"}},"2264696478":{"tag":"subtype","supertype":{"typehash":"292393090"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3199177740"}}},"3333118465":{"tag":"subtype","supertype":{"typehash":"2684264717"},"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"4272740387"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2597866579"}}}},"2433969977":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"2524180514"}},"3333118465":{"tag":"subtype","supertype":{"typehash":"2684264717"},"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"3192139499"}},{"tag":"type-actual","type":{"typehash":"594952506"}}],"type":{"typehash":"4272740387"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2597866579"}}}},"2684264717":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"594952506"}},"3760337393":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3367785292"}},"3760337393":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3367785292"}},"3199177740":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"2614391051"}},"2684264717":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"594952506"}},"2684264717":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"594952506"}},"594952506":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"594952506":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"594952506":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"408735966"}}],"type":{"typehash":"771841076"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"408735966"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"3192139499"}}],"type":{"typehash":"3082834866"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}}]}}}}},"2038299934":{"tag":"subtype","supertype":{"typehash":"2524180514"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"2524180514"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"2524180514"}}],"type":{"typehash":"579606488"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"2524180514"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"2826522078"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"2469710200"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}}]}}}}},"2555621130":{"tag":"functiontype","domain":{"typehash":"1089517517"},"range":{"typehash":"376585587"}},"319599899":{"tag":"functiontype","domain":{"typehash":"1174935104"},"range":{"typehash":"2264696478"}},"1226208406":{"tag":"tupletype","types":[{"typehash":"408735966"},{"typehash":"408735966"}]},"3366968262":{"tag":"functiontype","domain":{"typehash":"376288351"},"range":{"typehash":"2614391051"}},"3431863492":{"tag":"functiontype","domain":{"typehash":"408735966"},"range":{"typehash":"2614391051"}},"407548414":{"tag":"functiontype","domain":{"typehash":2264696478},"range":{"typehash":"2642263807"}},"2876012112":{"tag":"functiontype","domain":{"typehash":"3333118465"},"range":{"typehash":"504741969"}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"2876012112":{"tag":"functiontype","domain":{"typehash":"3333118465"},"range":{"typehash":"504741969"}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"3006943152"}}},"579606488":{"tag":"functiontype","domain":{"typehash":"3277574760"},"range":{"typehash":"2614391051"}},"3191545724":{"tag":"functiontype","domain":{"typehash":2264696478},"range":{"typehash":"4191690336"}},"4016650181":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3431863492"}},"3367785292":{"tag":"functiontype","domain":{"typehash":"2524180514"},"range":{"typehash":"2614391051"}},"3367785292":{"tag":"functiontype","domain":{"typehash":"2524180514"},"range":{"typehash":"2614391051"}},"3133462658":{"tag":"functiontype","domain":{"typehash":2597866579},"range":{"typehash":"2876012112"}},"4016427599":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3623875498"}},"2379851802":{"tag":"functiontype","domain":{"typehash":2264696478},"range":{"typehash":"319599899"}},"2524180514":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2524180514":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"3133462658":{"tag":"functiontype","domain":{"typehash":2597866579},"range":{"typehash":"2876012112"}},"4016427599":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3623875498"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125"},{"typehash":"2102378125"}]},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2038151316":{"tag":"subtype","supertype":{"typehash":"2524180514"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"2524180514"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"2524180514"}}],"type":{"typehash":"579606488"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"2524180514"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"2102378125"}}],"type":{"typehash":"2826522078"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}}]}}}}}}}}