{"tag":"module-with-hash","module":{"tag":"theory","id":"lex4","declarations":[{"tag":"var-decl","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"j","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"k","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"l","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"var-decl","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"formula-decl","id":"lex4_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"integer","integer-value":0}]}}},{"tag":"apply","operator":{"tag":"constant","id":">","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"integer","integer-value":0}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"lex4_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"integer","integer-value":0}]}}},{"tag":"apply","operator":{"tag":"constant","id":"ordinal?","theory":"ordinals","type":{"typehash":"c4e6693b6322ffd55383193669c43a908dcfb3e4"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":3},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":2},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":1},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"lex3","theory":"lex3","type":{"typehash":"962d4b49e46c59d35dad39e368bc56e843e5a417"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}}]}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skeep)\n ((\"\" (expand \"lex3\")\n   ((\"\" (lift-if)\n     ((\"\" (split)\n       ((\"1\" (flatten) ((\"1\" (grind) nil nil)) nil)\n        (\"2\" (flatten) ((\"2\" (grind) nil nil)) nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"const-decl","id":"lex4","theory":"lex4","type":{"typehash":"9bcfb98bd86733f1b40fde4c5418309c6091630d"},"parameters":[[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]],"const-def":{"tag":"if","test":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"integer","integer-value":0}]}},"then":{"tag":"apply","operator":{"tag":"constant","id":"lex3","theory":"lex3","type":{"typehash":"962d4b49e46c59d35dad39e368bc56e843e5a417"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}},"else":{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":3},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":2},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":1},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"lex3","theory":"lex3","type":{"typehash":"962d4b49e46c59d35dad39e368bc56e843e5a417"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}}]}}}},{"tag":"formula-decl","id":"wtf?","label":"lemma","definition":{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":3},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":2},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":1},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":1},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (case \"coef(add(1, zero, zero)) = 1\")\n ((\"1\"\n   (case \"coef(add(3, add(2, add(1, zero, zero), zero), zero)) = 3\")\n   ((\"1\" (replace -3 -2 RL)\n     ((\"1\" (replace -1 -2 LR) ((\"1\" (assert) nil nil)) nil)) nil)\n    (\"2\" (assert) nil nil))\n   nil)\n  (\"2\" (assert) nil nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"same_coefs","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"A","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}},{"tag":"variable","id":"B","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"nonzero?","theory":"ordstruct_adt","type":{"typehash":"c4e6693b6322ffd55383193669c43a908dcfb3e4"}},"argument":{"tag":"variable","id":"A","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}}},{"tag":"apply","operator":{"tag":"constant","id":"nonzero?","theory":"ordstruct_adt","type":{"typehash":"c4e6693b6322ffd55383193669c43a908dcfb3e4"}},"argument":{"tag":"variable","id":"B","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}}}]}},{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"A","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}},{"tag":"variable","id":"B","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"coef","theory":"ordstruct_adt","type":{"typehash":"93b77cb834b22dac0f7f30ef90a9719865b4640a"}},"argument":{"tag":"variable","id":"A","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}}},{"tag":"apply","operator":{"tag":"constant","id":"coef","theory":"ordstruct_adt","type":{"typehash":"93b77cb834b22dac0f7f30ef90a9719865b4640a"}},"argument":{"tag":"variable","id":"B","type":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}}}]}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skeep) ((\"\" (grind) nil nil)) nil)","status":"proved"}},{"tag":"formula-decl","id":"lex4_lt","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"j","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"k","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"l","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}],"type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"lex4","theory":"lex4","type":{"typehash":"9bcfb98bd86733f1b40fde4c5418309c6091630d"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"j","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"k","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"l","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"lex4","theory":"lex4","type":{"typehash":"9bcfb98bd86733f1b40fde4c5418309c6091630d"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"m","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"lex3","theory":"lex3","type":{"typehash":"962d4b49e46c59d35dad39e368bc56e843e5a417"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"j","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"k","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"l","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"lex3","theory":"lex3","type":{"typehash":"962d4b49e46c59d35dad39e368bc56e843e5a417"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"n","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"p","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"variable","id":"q","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}]}}]}}]}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skeep)\n ((\"\" (grind)\n   ((\"1\" (hide -1 -2 -3 -4 -5 -7 1 2 3 4 5)\n     ((\"1\" (name-replace \"B\" \"add(1, zero, zero)\")\n       ((\"1\" (name-replace \"A\" \"add(3, add(2, B, zero), zero)\")\n         ((\"1\" (case \"coef(A) = 3\")\n           ((\"1\" (case \"coef(B) = 1\")\n             ((\"1\" (replace -3 -2 LR) ((\"1\" (assert) nil nil)) nil)\n              (\"2\" (grind)\n               ((\"2\" (reveal -2)\n                 ((\"2\" (replace -1 1 RL) ((\"2\" (assert) nil nil)) nil))\n                 nil))\n               nil))\n             nil)\n            (\"2\" (reveal -1)\n             ((\"2\" (replace -1 1 RL) ((\"2\" (assert) nil nil)) nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"2\" (lemma \"same_coefs\")\n     ((\"2\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"2\" (assert) nil nil)) nil))\n     nil)\n    (\"3\" (lemma \"same_coefs\")\n     ((\"3\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"3\" (assert) nil nil)) nil))\n     nil)\n    (\"4\" (lemma \"same_coefs\")\n     ((\"4\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"4\" (assert) nil nil)) nil))\n     nil)\n    (\"5\" (lemma \"same_coefs\")\n     ((\"5\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"5\" (assert) nil nil)) nil))\n     nil)\n    (\"6\" (lemma \"same_coefs\")\n     ((\"6\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"6\" (assert) nil nil)) nil))\n     nil)\n    (\"7\" (lemma \"same_coefs\")\n     ((\"7\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"7\" (assert) nil nil)) nil))\n     nil)\n    (\"8\" (lemma \"same_coefs\")\n     ((\"8\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"8\" (assert) nil nil)) nil))\n     nil)\n    (\"9\" (lemma \"same_coefs\")\n     ((\"9\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"9\" (assert)\n         ((\"9\" (lemma \"same_coefs\")\n           ((\"9\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"9\" (assert)\n               ((\"9\" (lemma \"same_coefs\")\n                 ((\"9\"\n                   (inst -1\n                    \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                    \"add(1, zero, zero)\")\n                   ((\"9\" (assert)\n                     ((\"9\" (lemma \"same_coefs\")\n                       ((\"9\"\n                         (inst -1\n                          \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                          \"add(1, zero, zero)\")\n                         ((\"9\" (assert)\n                           ((\"9\" (lemma \"same_coefs\")\n                             ((\"9\"\n                               (inst\n                                -1\n                                \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                                \"add(1, zero, zero)\")\n                               ((\"9\"\n                                 (assert)\n                                 ((\"9\"\n                                   (lemma \"same_coefs\")\n                                   ((\"9\"\n                                     (inst\n                                      -1\n                                      \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                                      \"add(1, zero, zero)\")\n                                     ((\"9\"\n                                       (assert)\n                                       ((\"9\"\n                                         (lemma \"same_coefs\")\n                                         ((\"9\"\n                                           (inst\n                                            -1\n                                            \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                                            \"add(1, zero, zero)\")\n                                           ((\"9\"\n                                             (assert)\n                                             ((\"9\"\n                                               (lemma \"same_coefs\")\n                                               ((\"9\"\n                                                 (assert)\n                                                 ((\"9\"\n                                                   (lemma \"same_coefs\")\n                                                   ((\"9\"\n                                                     (inst\n                                                      -1\n                                                      \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                                                      \"add(2, add(2, zero, zero), zero)\")\n                                                     ((\"9\"\n                                                       (assert)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"10\" (lemma \"same_coefs\")\n     ((\"10\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"10\" (assert) nil nil)) nil))\n     nil)\n    (\"11\" (lemma \"same_coefs\")\n     ((\"11\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"11\" (assert) nil nil)) nil))\n     nil)\n    (\"12\" (lemma \"same_coefs\")\n     ((\"12\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"12\" (assert) nil nil)) nil))\n     nil)\n    (\"13\" (lemma \"same_coefs\")\n     ((\"13\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"13\" (assert)\n         ((\"13\" (lemma \"same_coefs\")\n           ((\"13\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"13\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"14\" (lemma \"same_coefs\")\n     ((\"14\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"14\" (assert) nil nil)) nil))\n     nil)\n    (\"15\" (lemma \"same_coefs\")\n     ((\"15\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"15\" (assert) nil nil)) nil))\n     nil)\n    (\"16\" (lemma \"same_coefs\")\n     ((\"16\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"16\" (assert) nil nil)) nil))\n     nil)\n    (\"17\" (lemma \"same_coefs\")\n     ((\"17\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"17\" (assert)\n         ((\"17\" (lemma \"same_coefs\")\n           ((\"17\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"17\" (assert)\n               ((\"17\" (lemma \"same_coefs\")\n                 ((\"17\"\n                   (inst -1\n                    \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                    \"add(2, add(2, zero, zero), zero)\")\n                   ((\"17\" (assert) nil nil)) nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"18\" (lemma \"same_coefs\")\n     ((\"18\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"18\" (assert) nil nil)) nil))\n     nil)\n    (\"19\" (lemma \"same_coefs\")\n     ((\"19\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"19\" (assert) nil nil)) nil))\n     nil)\n    (\"20\" (lemma \"same_coefs\")\n     ((\"20\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"20\" (assert) nil nil)) nil))\n     nil)\n    (\"21\" (lemma \"same_coefs\")\n     ((\"21\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"21\" (assert) nil nil)) nil))\n     nil)\n    (\"22\" (lemma \"same_coefs\")\n     ((\"22\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"22\" (assert)\n         ((\"22\" (lemma \"same_coefs\")\n           ((\"22\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"22\" (assert)\n               ((\"22\" (lemma \"same_coefs\")\n                 ((\"22\"\n                   (inst -1\n                    \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n                    \"add(1, zero, zero)\")\n                   ((\"22\" (assert) nil nil)) nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"23\" (lemma \"same_coefs\")\n     ((\"23\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"23\" (assert)\n         ((\"23\" (lemma \"same_coefs\")\n           ((\"23\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"23\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"24\" (lemma \"same_coefs\")\n     ((\"24\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"24\" (assert) nil nil)) nil))\n     nil)\n    (\"25\" (lemma \"same_coefs\")\n     ((\"25\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"25\" (assert)\n         ((\"25\" (lemma \"same_coefs\")\n           ((\"25\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"25\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"26\" (lemma \"same_coefs\")\n     ((\"26\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"26\" (assert) nil nil)) nil))\n     nil)\n    (\"27\" (lemma \"same_coefs\")\n     ((\"27\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"27\" (assert) nil nil)) nil))\n     nil)\n    (\"28\" (lemma \"same_coefs\")\n     ((\"28\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"28\" (assert) nil nil)) nil))\n     nil)\n    (\"29\" (lemma \"same_coefs\")\n     ((\"29\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"29\" (assert) nil nil)) nil))\n     nil)\n    (\"30\" (lemma \"same_coefs\")\n     ((\"30\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"30\" (assert) nil nil)) nil))\n     nil)\n    (\"31\" (lemma \"same_coefs\")\n     ((\"31\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"31\" (assert)\n         ((\"31\" (lemma \"same_coefs\")\n           ((\"31\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"31\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"32\" (lemma \"same_coefs\")\n     ((\"32\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"32\" (assert)\n         ((\"32\" (lemma \"same_coefs\")\n           ((\"32\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"32\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"33\" (lemma \"same_coefs\")\n     ((\"33\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"33\" (assert) nil nil)) nil))\n     nil)\n    (\"34\" (lemma \"same_coefs\")\n     ((\"34\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"34\" (assert)\n         ((\"34\" (lemma \"same_coefs\")\n           ((\"34\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"34\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"35\" (lemma \"same_coefs\")\n     ((\"35\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"35\" (assert) nil nil)) nil))\n     nil)\n    (\"36\" (lemma \"same_coefs\")\n     ((\"36\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"36\" (assert) nil nil)) nil))\n     nil)\n    (\"37\" (lemma \"same_coefs\")\n     ((\"37\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"37\" (assert) nil nil)) nil))\n     nil)\n    (\"38\" (lemma \"same_coefs\")\n     ((\"38\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"38\" (assert) nil nil)) nil))\n     nil)\n    (\"39\" (lemma \"same_coefs\")\n     ((\"39\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"39\" (assert) nil nil)) nil))\n     nil)\n    (\"40\" (lemma \"same_coefs\")\n     ((\"40\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"40\" (assert) nil nil)) nil))\n     nil)\n    (\"41\" (lemma \"same_coefs\")\n     ((\"41\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"41\" (assert) nil nil)) nil))\n     nil)\n    (\"42\" (lemma \"same_coefs\")\n     ((\"42\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"42\" (assert)\n         ((\"42\" (lemma \"same_coefs\")\n           ((\"42\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"42\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"43\" (lemma \"same_coefs\")\n     ((\"43\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"43\" (assert)\n         ((\"43\" (lemma \"same_coefs\")\n           ((\"43\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"43\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"44\" (lemma \"same_coefs\")\n     ((\"44\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"44\" (assert)\n         ((\"44\" (lemma \"same_coefs\")\n           ((\"44\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(1, zero, zero)\")\n             ((\"44\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"45\" (lemma \"same_coefs\")\n     ((\"45\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"45\" (assert) nil nil)) nil))\n     nil)\n    (\"46\" (lemma \"same_coefs\")\n     ((\"46\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"46\" (assert)\n         ((\"46\" (lemma \"same_coefs\")\n           ((\"46\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"46\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"47\" (lemma \"same_coefs\")\n     ((\"47\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"47\" (assert)\n         ((\"47\" (lemma \"same_coefs\")\n           ((\"47\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"47\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"48\" (lemma \"same_coefs\")\n     ((\"48\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"48\" (assert)\n         ((\"48\" (lemma \"same_coefs\")\n           ((\"48\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"48\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"49\" (lemma \"same_coefs\")\n     ((\"49\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"49\" (assert)\n         ((\"49\" (lemma \"same_coefs\")\n           ((\"49\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"49\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"50\" (lemma \"same_coefs\")\n     ((\"50\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"50\" (assert) nil nil)) nil))\n     nil)\n    (\"51\" (lemma \"same_coefs\")\n     ((\"51\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"51\" (assert) nil nil)) nil))\n     nil)\n    (\"52\" (lemma \"same_coefs\")\n     ((\"52\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"52\" (assert)\n         ((\"52\" (lemma \"same_coefs\")\n           ((\"52\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"52\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"53\" (lemma \"same_coefs\")\n     ((\"53\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"53\" (assert)\n         ((\"53\" (lemma \"same_coefs\")\n           ((\"53\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"53\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"54\" (lemma \"same_coefs\")\n     ((\"54\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"54\" (assert)\n         ((\"54\" (lemma \"same_coefs\")\n           ((\"54\"\n             (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n              \"add(2, add(2, zero, zero), zero)\")\n             ((\"54\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil)\n    (\"55\" (lemma \"same_coefs\")\n     ((\"55\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"55\" (assert) nil nil)) nil))\n     nil)\n    (\"56\" (lemma \"same_coefs\")\n     ((\"56\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(2, add(2, zero, zero), zero)\")\n       ((\"56\" (assert) nil nil)) nil))\n     nil)\n    (\"57\" (lemma \"same_coefs\")\n     ((\"57\"\n       (inst -1 \"add(3, add(2, add(1, zero, zero), zero), zero)\"\n        \"add(1, zero, zero)\")\n       ((\"57\" (assert) nil nil)) nil))\n     nil))\n   nil))\n nil)","status":"proved"}}]},"type-hash":{"tag":"typelist","entries":{"93b77cb834b22dac0f7f30ef90a9719865b4640a":{"tag":"functiontype","domain":{"typehash":"2734b1570a07f23e2bdaff1fa645679555de37e8"},"range":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},"120f814405b86d927919a8e6aaf145e82ed7a16c":{"tag":"subtype","supertype":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":">","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}},{"tag":"integer","integer-value":0}]}}},"print-type":[{"tag":"typename","id":"posnat","theory":"integers","actuals":[]}]},"962d4b49e46c59d35dad39e368bc56e843e5a417":{"tag":"functiontype","domain":{"typehash":"40e254e1a406ed6db8f86ea1ea3ed7a7dc59e981"},"range":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}},"146a37095d79b99006383a517eb8738d36d01122":{"tag":"functiontype","domain":{"typehash":"11c15fe18e476f962d4d8a6529ffdee55c710026"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"255fc968a29595c401e05c55e3263dd5e336ff42":{"tag":"tupletype","types":[{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"}]},"717a9c25eb892eba350c91b4c9080187b6bc2aa4":{"tag":"subtype","supertype":{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},"predicate":{"tag":"constant","id":"rational_pred","theory":"rationals","type":{"typehash":"5f72d24643ab14e4b255c8b1ac6dd982887152d4"}},"print-type":[{"tag":"typename","id":"rational","theory":"rationals","actuals":[]}]},"97b72fe6a63242c5c26257eb7a926afdd41ecdf1":{"tag":"functiontype","domain":{"typehash":"7b1844b92f6bb3faf16a698d618d1b997c20feaa"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"f9dfc0c5daed68d735ec591f7efd16ec22075ef8":{"tag":"functiontype","domain":{"typehash":"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"d288fd11ae1e75ed5502a350466c5a64f3c1f435":{"tag":"typename","id":"number","theory":"numbers","actuals":[]},"93221ff72587a9838098b479191ce1deaed91516":{"tag":"typename","id":"ordstruct","theory":"ordstruct_adt","actuals":[]},"7b1844b92f6bb3faf16a698d618d1b997c20feaa":{"tag":"tupletype","types":[{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}]},"34012ce34c4ce7e8874dfceb61781aace60c5d79":{"tag":"functiontype","domain":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"40e254e1a406ed6db8f86ea1ea3ed7a7dc59e981":{"tag":"tupletype","types":[{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"},{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"},{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}]},"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03":{"tag":"subtype","supertype":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},"predicate":{"tag":"constant","id":"real_pred","theory":"reals","type":{"typehash":"34012ce34c4ce7e8874dfceb61781aace60c5d79"}},"print-type":[{"tag":"typename","id":"real","theory":"reals","actuals":[]}]},"5f72d24643ab14e4b255c8b1ac6dd982887152d4":{"tag":"functiontype","domain":{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"f4f200a0d337e4a60b30dfe136d073c7265be3e1":{"tag":"subtype","supertype":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},"predicate":{"tag":"constant","id":"number_field_pred","theory":"number_fields","type":{"typehash":"a56a4a9403ce4ae14abf07cdf6b328b8f111f42b"}},"print-type":[{"tag":"typename","id":"number_field","theory":"number_fields","actuals":[]}]},"aece8f38c7b6554bf39a6677488f47877026313a":{"tag":"subtype","supertype":{"typehash":"717a9c25eb892eba350c91b4c9080187b6bc2aa4"},"predicate":{"tag":"constant","id":"integer_pred","theory":"integers","type":{"typehash":"4e480c5400c53df5b58cca7d1bbe3ee6c2f584cc"}},"print-type":[{"tag":"typename","id":"int","theory":"integers","actuals":[]}]},"11c15fe18e476f962d4d8a6529ffdee55c710026":{"tag":"tupletype","types":[{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}]},"378315377a9dd6a80396ca81e308b3cf7020c45c":{"tag":"functiontype","domain":{"typehash":"b039e315d9311c6b8771305f05cf599327cf74cd"},"range":{"typehash":"2734b1570a07f23e2bdaff1fa645679555de37e8"}},"4e480c5400c53df5b58cca7d1bbe3ee6c2f584cc":{"tag":"functiontype","domain":{"typehash":"717a9c25eb892eba350c91b4c9080187b6bc2aa4"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"constant","id":"zero?","theory":"ordstruct_adt","type":{"typehash":"c4e6693b6322ffd55383193669c43a908dcfb3e4"}},"print-type":[{"tag":"subtype","supertype":[[]],"predicate":[]}]},"b039e315d9311c6b8771305f05cf599327cf74cd":{"tag":"tupletype","types":[{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"},{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}]},"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc":{"tag":"subtype","supertype":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"i","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":">=","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"integer","integer-value":0}]}}},"print-type":[{"tag":"typename","id":"nat","theory":"naturalnumbers","actuals":[]}]},"4f19419082f24e96423f3b076548a2c3de11ecd9":{"tag":"typename","id":"boolean","theory":"booleans","actuals":[]},"d110ac5b218e59c77f444ac5b730d582fc2231d1":{"tag":"tupletype","types":[{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"},{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"},{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"},{"typehash":"dd549bdd7d8a15a06f13ced67340fc2d1b26e8bc"}]},"958af28598339716ff8c6b5b555b77476e7325da":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"constant","id":"ordinal?","theory":"ordinals","type":{"typehash":"c4e6693b6322ffd55383193669c43a908dcfb3e4"}},"print-type":[{"tag":"typename","id":"ordinal","theory":"ordinals","actuals":[]}]},"a56a4a9403ce4ae14abf07cdf6b328b8f111f42b":{"tag":"functiontype","domain":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"2734b1570a07f23e2bdaff1fa645679555de37e8":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"constant","id":"nonzero?","theory":"ordstruct_adt","type":{"typehash":"c4e6693b6322ffd55383193669c43a908dcfb3e4"}},"print-type":[{"tag":"subtype","supertype":[[]],"predicate":[]}]},"c4e6693b6322ffd55383193669c43a908dcfb3e4":{"tag":"functiontype","domain":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"2dd224b393847a08c08146f380310f3a3e311e59":{"tag":"functiontype","domain":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1":{"tag":"tupletype","types":[{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}]},"9bcfb98bd86733f1b40fde4c5418309c6091630d":{"tag":"functiontype","domain":{"typehash":"d110ac5b218e59c77f444ac5b730d582fc2231d1"},"range":{"typehash":"958af28598339716ff8c6b5b555b77476e7325da"}},"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf":{"tag":"functiontype","domain":{"typehash":"255fc968a29595c401e05c55e3263dd5e336ff42"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}}}}