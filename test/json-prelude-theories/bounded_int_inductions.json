{"tag":"module-with-hash","module":{"tag":"theory","id":"bounded_int_inductions","formals":[{"tag":"formal-const-decl","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}],"declarations":[{"tag":"var-decl","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},{"tag":"var-decl","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}},{"tag":"var-decl","id":"kf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}},{"tag":"formula-decl","id":"upfrom_induction_TCC1","label":"obligation","definition":{"tag":"apply","operator":{"tag":"constant","id":">=","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"upfrom_induction_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}},{"tag":"forall","bindings":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}},{"tag":"apply","operator":{"tag":"constant","id":">=","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}},{"tag":"integer","integer-value":1}]}},{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}}]}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"upfrom_induction","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}},{"tag":"forall","bindings":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}},{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}},{"tag":"integer","integer-value":1}]}}}]}}}]}},{"tag":"forall","bindings":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}],"expression":{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (lemma \"nat_induction\")\n ((\"\" (skosimp*)\n   ((\"\"\n     (inst -1\n      \"lambda (n:nat): (exists (i:int): (m <= i and n = i - m)) IMPLIES pf!1(n+m)\")\n     ((\"\" (prop)\n       ((\"1\" (inst -1 \"jf!1-m\")\n         ((\"1\" (assert)\n           ((\"1\" (assert :flush? t)\n             ((\"1\" (assert :quant-simp? t) nil nil)) nil))\n           nil))\n         nil)\n        (\"2\" (hide -1) ((\"2\" (assert) nil nil)) nil)\n        (\"3\" (skosimp*)\n         ((\"3\" (split)\n           ((\"1\" (inst -5 \"j!1+m\") ((\"1\" (assert) nil nil)) nil)\n            (\"2\" (inst 1 \"j!1+m\") ((\"2\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"UPFROM_induction","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"forall","bindings":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"forall","bindings":[{"tag":"variable","id":"kf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"kf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}},{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}]}},{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"variable","id":"kf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}}]}}},{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}}]}}},{"tag":"forall","bindings":[{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}],"expression":{"tag":"apply","operator":{"tag":"variable","id":"pf","type":{"typehash":"2c6cbc4c581fbc2b669422534f881837dc6ba3b6"}},"argument":{"tag":"variable","id":"jf","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (lemma \"NAT_induction\")\n   ((\"\"\n     (inst -1\n      \"lambda (n:nat): (exists (i:int): (m <= i and n = i - m)) IMPLIES pf!1(n+m)\")\n     ((\"\" (prop)\n       ((\"1\" (inst -1 \"jf!1-m\")\n         ((\"1\" (split)\n           ((\"1\" (assert) nil nil)\n            (\"2\" (inst 1 \"jf!1\") ((\"2\" (assert) nil nil)) nil))\n           nil))\n         nil)\n        (\"2\" (skosimp*)\n         ((\"2\" (inst -4 \"j!1+m\")\n           ((\"2\" (assert)\n             ((\"2\" (skosimp*)\n               ((\"2\" (inst -1 \"kf!1-m\")\n                 ((\"2\" (assert :quant-simp? t) nil nil)) nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"var-decl","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},{"tag":"var-decl","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}},{"tag":"var-decl","id":"ka","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}},{"tag":"formula-decl","id":"above_induction_TCC1","label":"obligation","definition":{"tag":"apply","operator":{"tag":"constant","id":">","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"integer","integer-value":1}]}},{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"above_induction_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"integer","integer-value":1}]}}},{"tag":"forall","bindings":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}},{"tag":"apply","operator":{"tag":"constant","id":">","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}},{"tag":"integer","integer-value":1}]}},{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}}]}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"above_induction","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"integer","integer-value":1}]}}},{"tag":"forall","bindings":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}},{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}},{"tag":"integer","integer-value":1}]}}}]}}}]}},{"tag":"forall","bindings":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}],"expression":{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (lemma \"nat_induction\")\n   ((\"\"\n     (inst -1\n      \"lambda (n:nat): (exists (i:int): (m < i and n = i - m)) IMPLIES pa!1(n+m)\")\n     ((\"1\" (prop)\n       ((\"1\" (inst -1 \"ja!1-m\")\n         ((\"1\" (assert) ((\"1\" (assert :quant-simp? t) nil nil)) nil))\n         nil)\n        (\"2\" (skosimp*) ((\"2\" (assert) nil nil)) nil)\n        (\"3\" (skosimp*)\n         ((\"3\" (split)\n           ((\"1\" (inst -5 \"j!1+m\")\n             ((\"1\" (assert) nil nil) (\"2\" (assert) nil nil)) nil)\n            (\"2\" (inst 1 \"j!1+m\") ((\"2\" (assert) nil nil)) nil))\n           nil))\n         nil))\n       nil)\n      (\"2\" (skosimp*) ((\"2\" (assert) nil nil)) nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"ABOVE_induction","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"forall","bindings":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"forall","bindings":[{"tag":"variable","id":"ka","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"ka","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}},{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}]}},{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"variable","id":"ka","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}}]}}},{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}}]}}},{"tag":"forall","bindings":[{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}],"expression":{"tag":"apply","operator":{"tag":"variable","id":"pa","type":{"typehash":"a7aca54eb593025acde625fd59caaebce356f5ba"}},"argument":{"tag":"variable","id":"ja","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (lemma \"NAT_induction\")\n   ((\"\"\n     (inst -1\n      \"lambda (n:nat): (exists (i:int): (m < i and n = i - m)) IMPLIES pa!1(n+m)\")\n     ((\"1\" (prop)\n       ((\"1\" (inst -1 \"ja!1-m\")\n         ((\"1\" (split)\n           ((\"1\" (assert) nil nil)\n            (\"2\" (inst 1 \"ja!1\") ((\"2\" (assert) nil nil)) nil))\n           nil))\n         nil)\n        (\"2\" (skosimp*)\n         ((\"2\" (inst -4 \"j!1+m\")\n           ((\"1\" (assert)\n             ((\"1\" (skosimp*)\n               ((\"1\" (inst -1 \"ka!1-m\")\n                 ((\"1\" (assert :quant-simp? t) nil nil)) nil))\n               nil))\n             nil)\n            (\"2\" (assert) nil nil))\n           nil))\n         nil))\n       nil)\n      (\"2\" (skosimp*) ((\"2\" (assert) nil nil)) nil))\n     nil))\n   nil))\n nil)","status":"proved"}}]},"type-hash":{"tag":"typelist","entries":{"c5808fed4a537a36874b71335aafc375006dc3f4":{"tag":"subtype","supertype":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"s","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":">","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"above","theory":"integers","actuals":[]}],"parameters":[{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}]},"2c6cbc4c581fbc2b669422534f881837dc6ba3b6":{"tag":"functiontype","domain":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},"print-type":[{"tag":"typename","id":"pred","theory":"defined_types","actuals":[{"tag":"type-actual","type":{"typehash":"4e4e13cd479e32df0b3d184fb7cf3784ec08149d"}}]}]},"255fc968a29595c401e05c55e3263dd5e336ff42":{"tag":"tupletype","types":[{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"}]},"717a9c25eb892eba350c91b4c9080187b6bc2aa4":{"tag":"subtype","supertype":{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},"predicate":{"tag":"constant","id":"rational_pred","theory":"rationals","type":{"typehash":"5f72d24643ab14e4b255c8b1ac6dd982887152d4"}},"print-type":[{"tag":"typename","id":"rational","theory":"rationals","actuals":[]}]},"f9dfc0c5daed68d735ec591f7efd16ec22075ef8":{"tag":"functiontype","domain":{"typehash":"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"d288fd11ae1e75ed5502a350466c5a64f3c1f435":{"tag":"typename","id":"number","theory":"numbers","actuals":[]},"34012ce34c4ce7e8874dfceb61781aace60c5d79":{"tag":"functiontype","domain":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"a7aca54eb593025acde625fd59caaebce356f5ba":{"tag":"functiontype","domain":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},"print-type":[{"tag":"typename","id":"pred","theory":"defined_types","actuals":[{"tag":"type-actual","type":{"typehash":"c5808fed4a537a36874b71335aafc375006dc3f4"}}]}]},"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03":{"tag":"subtype","supertype":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},"predicate":{"tag":"constant","id":"real_pred","theory":"reals","type":{"typehash":"34012ce34c4ce7e8874dfceb61781aace60c5d79"}},"print-type":[{"tag":"typename","id":"real","theory":"reals","actuals":[]}]},"5f72d24643ab14e4b255c8b1ac6dd982887152d4":{"tag":"functiontype","domain":{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"f4f200a0d337e4a60b30dfe136d073c7265be3e1":{"tag":"subtype","supertype":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},"predicate":{"tag":"constant","id":"number_field_pred","theory":"number_fields","type":{"typehash":"a56a4a9403ce4ae14abf07cdf6b328b8f111f42b"}},"print-type":[{"tag":"typename","id":"number_field","theory":"number_fields","actuals":[]}]},"aece8f38c7b6554bf39a6677488f47877026313a":{"tag":"subtype","supertype":{"typehash":"717a9c25eb892eba350c91b4c9080187b6bc2aa4"},"predicate":{"tag":"constant","id":"integer_pred","theory":"integers","type":{"typehash":"4e480c5400c53df5b58cca7d1bbe3ee6c2f584cc"}},"print-type":[{"tag":"typename","id":"int","theory":"integers","actuals":[]}]},"350b58e8264ad023a2d621d5506d89de8beb16e3":{"tag":"functiontype","domain":{"typehash":"39d6637d76121441a824031ab58b03e07adec56e"},"range":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"}},"4e480c5400c53df5b58cca7d1bbe3ee6c2f584cc":{"tag":"functiontype","domain":{"typehash":"717a9c25eb892eba350c91b4c9080187b6bc2aa4"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"4f19419082f24e96423f3b076548a2c3de11ecd9":{"tag":"typename","id":"boolean","theory":"booleans","actuals":[]},"a56a4a9403ce4ae14abf07cdf6b328b8f111f42b":{"tag":"functiontype","domain":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"39d6637d76121441a824031ab58b03e07adec56e":{"tag":"tupletype","types":[{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"}]},"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1":{"tag":"tupletype","types":[{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}]},"4e4e13cd479e32df0b3d184fb7cf3784ec08149d":{"tag":"subtype","supertype":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"s","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":">=","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"upfrom","theory":"integers","actuals":[]}],"parameters":[{"tag":"formal-constant","id":"m","theory":"bounded_int_inductions","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}]}]},"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf":{"tag":"functiontype","domain":{"typehash":"255fc968a29595c401e05c55e3263dd5e336ff42"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}}}}