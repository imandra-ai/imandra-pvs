{"tag":"module-with-hash","module":{"tag":"theory","id":"QuotientDistributive","formals":[{"tag":"formal-type-decl","id":"X","theory":"QuotientDistributive"},{"tag":"formal-type-decl","id":"Y","theory":"QuotientDistributive"}],"declarations":[{"tag":"var-decl","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"var-decl","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"var-decl","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"const-decl","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"},"parameters":[[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]],"const-def":{"tag":"lambda","bindings":[{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},"argument":{"tag":"tuple","exprs":[{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":1},{"tag":"project","argument":{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":1}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"1daec538eb5b9979929e596337b4642410dbf6cc"}},"argument":{"tag":"tuple","exprs":[{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":2},{"tag":"project","argument":{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":2}]}}]}}}},{"tag":"formula-decl","id":"EqualityExtension_is_equivalence","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"e9fdfa9b613839e9dbc0675bdb8f101d2e650c61"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :if-match nil)\n ((\"1\" (forward-chain -3) nil nil) (\"2\" (forward-chain -2) nil nil)\n  (\"3\" (inst? -1) nil nil))\n nil)","status":"proved"}},{"tag":"application-judgement","id":"EqualityExtension_is_equivalence","type":{"typehash":"b79928b2d64f0242dc0370cc0a5b51460c412489"},"name":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"formals":[[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]],"judgement-type":[{"typehash":"186969cc2f96cb6a75d553d4dc8627024d13f762"}]},{"tag":"formula-decl","id":"EqualityExtensionPreservesEq","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"a06a54c5ad0c9f083e3185c459452d3d460fa820"}}],"type":{"typehash":"041e93bede3912933ecd70bd08a05ec7c3eec67c"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"\" (use \"EquivClassEq[X]\") ((\"\" (assert) nil nil)) nil)) nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientDistributive_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"629c99cd8edfda95b8170fdbebd60bbd69a67cad"}}],"type":{"typehash":"fb59b3f0a8f92b92aee6922e40acee75bad6e9d7"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"\" (apply-extensionality :hide? t)\n   ((\"\" (forward-chain -2)\n     ((\"\" (iff)\n       ((\"\" (prop)\n         ((\"1\" (forward-chain -4) nil nil)\n          (\"2\" (hide -2) ((\"2\" (forward-chain -3) nil nil)) nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientDistributive_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}],"type":{"typehash":"f00f9add6eb3c8dc3fb329c71708ea16baeb0ca1"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"1\" (rewrite \"restrict_full[[[X, Y], [X, Y]], bool]\")\n   ((\"1\" (inst? 1) nil nil)) nil)\n  (\"2\" (rewrite \"restrict_full[[[X, Y], [X, Y]], bool]\")\n   ((\"2\" (inst? 1) nil nil)) nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientDistributive","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"bijective?","theory":"functions","actuals":[{"tag":"type-actual","type":{"typehash":"dd42ec174cc882f3024f49a2080b3732bdead651"}},{"tag":"type-actual","type":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}}],"type":{"typehash":"a863b77393347c920cda6cdd7ddef4c3c7145489"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}}],"type":{"typehash":"e23fc786c55fb3353790185f6f6e24bf0d2d7eba"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (expand \"bijective?\")\n   ((\"\" (prop)\n     ((\"1\" (expand \"injective?\")\n       ((\"1\" (skosimp*)\n         ((\"1\" (expand \"lift\")\n           ((\"1\" (expand \"rep\")\n             ((\"1\" (flatten)\n               ((\"1\" (typepred \"x1!1\" \"x2!1\")\n                 ((\"1\" (skosimp*)\n                   ((\"1\" (case \"nonempty?(x1!1)\")\n                     ((\"1\" (case \"nonempty?(x2!1)\")\n                       ((\"1\" (name-replace \"ch1\" \"choose(x1!1)\")\n                         ((\"1\" (name-replace \"ch2\" \"choose(x2!1)\")\n                           ((\"1\" (typepred \"ch1\" \"ch2\")\n                             ((\"1\" (replace*)\n                               ((\"1\"\n                                 (hide -3 -4 -5 -6)\n                                 ((\"1\"\n                                   (expand \"EquivClass\")\n                                   ((\"1\"\n                                     (apply-extensionality :hide? t)\n                                     ((\"1\"\n                                       (expand \"EqualityExtension\")\n                                       ((\"1\"\n                                         (flatten)\n                                         ((\"1\"\n                                           (assert)\n                                           ((\"1\"\n                                             (iff)\n                                             ((\"1\"\n                                               (lemma\n                                                \"Kernel_quotient_map[X, X]\")\n                                               ((\"1\"\n                                                 (inst?)\n                                                 ((\"1\"\n                                                   (case\n                                                    \"EquivalenceKernel[X, X, Quotient[X](S!1)](quotient_map(S!1))(ch1`1, ch2`1)\")\n                                                   ((\"1\"\n                                                     (replace -2)\n                                                     ((\"1\"\n                                                       (hide -2)\n                                                       ((\"1\"\n                                                         (assert)\n                                                         ((\"1\"\n                                                           (smash)\n                                                           ((\"1\"\n                                                             (typepred\n                                                              \"S!1\")\n                                                             ((\"1\"\n                                                               (expand\n                                                                \"equivalence?\")\n                                                               ((\"1\"\n                                                                 (flatten)\n                                                                 ((\"1\"\n                                                                   (expand\n                                                                    \"symmetric?\")\n                                                                   ((\"1\"\n                                                                     (expand\n                                                                      \"transitive?\")\n                                                                     ((\"1\"\n                                                                       (hide\n                                                                        -1\n                                                                        -6\n                                                                        -8\n                                                                        -10\n                                                                        -11\n                                                                        -12)\n                                                                       ((\"1\"\n                                                                         (inst-cp\n                                                                          -1\n                                                                          \"ch1`1\"\n                                                                          \"ch2`1\")\n                                                                         ((\"1\"\n                                                                           (assert)\n                                                                           ((\"1\"\n                                                                             (hide\n                                                                              -4)\n                                                                             ((\"1\"\n                                                                               (inst\n                                                                                -1\n                                                                                \"x!1`1\"\n                                                                                \"ch1`1\")\n                                                                               ((\"1\"\n                                                                                 (assert)\n                                                                                 ((\"1\"\n                                                                                   (hide\n                                                                                    -5)\n                                                                                   ((\"1\"\n                                                                                     (inst-cp\n                                                                                      -3\n                                                                                      \"x!2`1\"\n                                                                                      \"ch2`1\"\n                                                                                      \"ch1`1\")\n                                                                                     ((\"1\"\n                                                                                       (assert)\n                                                                                       ((\"1\"\n                                                                                         (inst-cp\n                                                                                          -3\n                                                                                          \"x!2`1\"\n                                                                                          \"ch1`1\"\n                                                                                          \"x!1`1\")\n                                                                                         ((\"1\"\n                                                                                           (assert)\n                                                                                           ((\"1\"\n                                                                                             (inst\n                                                                                              -3\n                                                                                              \"x!2`1\"\n                                                                                              \"x!1`1\"\n                                                                                              \"x!3\")\n                                                                                             ((\"1\"\n                                                                                               (assert)\n                                                                                               nil\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil)\n                                                            (\"2\"\n                                                             (hide\n                                                              -3\n                                                              -5\n                                                              -7\n                                                              -8\n                                                              -9)\n                                                             ((\"2\"\n                                                               (typepred\n                                                                \"S!1\")\n                                                               ((\"2\"\n                                                                 (expand\n                                                                  \"equivalence?\")\n                                                                 ((\"2\"\n                                                                   (flatten)\n                                                                   ((\"2\"\n                                                                     (hide\n                                                                      -1)\n                                                                     ((\"2\"\n                                                                       (expand\n                                                                        \"symmetric?\")\n                                                                       ((\"2\"\n                                                                         (expand\n                                                                          \"transitive?\")\n                                                                         ((\"2\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"x!2`1\"\n                                                                            \"ch2`1\")\n                                                                           ((\"2\"\n                                                                             (assert)\n                                                                             ((\"2\"\n                                                                               (hide\n                                                                                -6)\n                                                                               ((\"2\"\n                                                                                 (inst-cp\n                                                                                  -2\n                                                                                  \"x!1`1\"\n                                                                                  \"ch1`1\"\n                                                                                  \"ch2`1\")\n                                                                                 ((\"2\"\n                                                                                   (assert)\n                                                                                   ((\"2\"\n                                                                                     (hide\n                                                                                      -4\n                                                                                      -6)\n                                                                                     ((\"2\"\n                                                                                       (inst-cp\n                                                                                        -2\n                                                                                        \"x!1`1\"\n                                                                                        \"ch2`1\"\n                                                                                        \"x!2`1\")\n                                                                                       ((\"2\"\n                                                                                         (assert)\n                                                                                         ((\"2\"\n                                                                                           (hide\n                                                                                            -1\n                                                                                            -4)\n                                                                                           ((\"2\"\n                                                                                             (inst\n                                                                                              -1\n                                                                                              \"x!1`1\"\n                                                                                              \"x!2`1\"\n                                                                                              \"x!3\")\n                                                                                             ((\"2\"\n                                                                                               (assert)\n                                                                                               nil\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil)\n                                                    (\"2\"\n                                                     (expand\n                                                      \"EquivalenceKernel\")\n                                                     ((\"2\"\n                                                       (propax)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil)\n                        (\"2\" (replace -3)\n                         ((\"2\" (hide -1 -2 -3 -4 -5 2)\n                           ((\"2\" (grind)\n                             ((\"2\" (typepred \"S!1\")\n                               ((\"2\" (grind) nil nil)) nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil)\n                      (\"2\" (replace -1)\n                       ((\"2\" (hide -1 -2 -3 -4 2)\n                         ((\"2\" (grind)\n                           ((\"2\" (typepred \"S!1\")\n                             ((\"2\" (grind) nil nil)) nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil)\n      (\"2\" (expand \"surjective?\")\n       ((\"2\" (skosimp*)\n         ((\"2\" (typepred \"y!1`1\")\n           ((\"2\" (skosimp*)\n             ((\"2\" (case \"nonempty?(y!1`1)\")\n               ((\"1\"\n                 (inst 1\n                  \"EquivClass[[X, Y]](EqualityExtension(S!1))(choose(y!1`1), y!1`2)\")\n                 ((\"1\" (expand \"lift\")\n                   ((\"1\" (expand \"rep\")\n                     ((\"1\"\n                       (case \"nonempty?(EquivClass[[X, Y]](EqualityExtension(S!1))(choose(y!1`1), y!1`2))\")\n                       ((\"1\"\n                         (name-replace \"ch\"\n                          \"choose(EquivClass[[X, Y]](EqualityExtension(S!1))(choose(y!1`1), y!1`2))\")\n                         ((\"1\" (typepred \"ch\")\n                           ((\"1\" (hide -2 -3)\n                             ((\"1\" (expand \"EquivClass\")\n                               ((\"1\"\n                                 (expand \"EqualityExtension\")\n                                 ((\"1\"\n                                   (flatten)\n                                   ((\"1\"\n                                     (name-replace\n                                      \"ch1\"\n                                      \"choose(y!1`1)\")\n                                     ((\"1\"\n                                       (typepred \"ch1\")\n                                       ((\"1\"\n                                         (replace -4 -1)\n                                         ((\"1\"\n                                           (assert)\n                                           ((\"1\"\n                                             (expand \"quotient_map\")\n                                             ((\"1\"\n                                               (expand \"EquivClass\")\n                                               ((\"1\"\n                                                 (apply-extensionality\n                                                  :hide?\n                                                  t)\n                                                 ((\"1\"\n                                                   (apply-extensionality\n                                                    :hide?\n                                                    t)\n                                                   ((\"1\"\n                                                     (iff)\n                                                     ((\"1\"\n                                                       (replace -4)\n                                                       ((\"1\"\n                                                         (hide -3 -4)\n                                                         ((\"1\"\n                                                           (assert)\n                                                           ((\"1\"\n                                                             (typepred\n                                                              \"S!1\")\n                                                             ((\"1\"\n                                                               (expand\n                                                                \"equivalence?\")\n                                                               ((\"1\"\n                                                                 (flatten)\n                                                                 ((\"1\"\n                                                                   (prop)\n                                                                   ((\"1\"\n                                                                     (expand\n                                                                      \"transitive?\")\n                                                                     ((\"1\"\n                                                                       (inst-cp\n                                                                        -4\n                                                                        \"x!1\"\n                                                                        \"ch1\"\n                                                                        \"ch`1\")\n                                                                       ((\"1\"\n                                                                         (assert)\n                                                                         ((\"1\"\n                                                                           (hide\n                                                                            -2\n                                                                            -3\n                                                                            -6\n                                                                            -7)\n                                                                           ((\"1\"\n                                                                             (inst\n                                                                              -2\n                                                                              \"x!1\"\n                                                                              \"ch`1\"\n                                                                              \"x!2\")\n                                                                             ((\"1\"\n                                                                               (assert)\n                                                                               nil\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil)\n                                                                    (\"2\"\n                                                                     (expand\n                                                                      \"symmetric?\")\n                                                                     ((\"2\"\n                                                                       (expand\n                                                                        \"transitive?\")\n                                                                       ((\"2\"\n                                                                         (inst-cp\n                                                                          -3\n                                                                          \"ch1\"\n                                                                          \"ch`1\")\n                                                                         ((\"2\"\n                                                                           (assert)\n                                                                           ((\"2\"\n                                                                             (hide\n                                                                              -7)\n                                                                             ((\"2\"\n                                                                               (inst\n                                                                                -3\n                                                                                \"x!1\"\n                                                                                \"ch1\")\n                                                                               ((\"2\"\n                                                                                 (assert)\n                                                                                 ((\"2\"\n                                                                                   (hide\n                                                                                    -2\n                                                                                    -6)\n                                                                                   ((\"2\"\n                                                                                     (inst-cp\n                                                                                      -4\n                                                                                      \"ch`1\"\n                                                                                      \"ch1\"\n                                                                                      \"x!1\")\n                                                                                     ((\"2\"\n                                                                                       (assert)\n                                                                                       ((\"2\"\n                                                                                         (hide\n                                                                                          -2\n                                                                                          -3)\n                                                                                         ((\"2\"\n                                                                                           (inst\n                                                                                            -2\n                                                                                            \"ch`1\"\n                                                                                            \"x!1\"\n                                                                                            \"x!2\")\n                                                                                           ((\"2\"\n                                                                                             (assert)\n                                                                                             nil\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil)\n                        (\"2\" (hide -2 2)\n                         ((\"2\" (grind)\n                           ((\"2\" (inst -1 \"(choose(y!1`1), y!1`2)\")\n                             ((\"1\" (assert)\n                               ((\"1\"\n                                 (typepred \"S!1\")\n                                 ((\"1\"\n                                   (expand \"equivalence?\")\n                                   ((\"1\"\n                                     (flatten)\n                                     ((\"1\"\n                                       (expand \"reflexive?\")\n                                       ((\"1\" (inst?) nil nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"2\" (inst -1 \"x!2\") nil nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil)\n                  (\"2\" (inst?) nil nil))\n                 nil)\n                (\"2\" (grind :if-match nil)\n                 ((\"2\" (inst -1 \"x!1\")\n                   ((\"2\" (typepred \"S!1\")\n                     ((\"2\" (expand \"equivalence?\")\n                       ((\"2\" (flatten)\n                         ((\"2\" (expand \"reflexive?\")\n                           ((\"2\" (inst?) nil nil)) nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"var-decl","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},{"tag":"formula-decl","id":"RelExtension_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"e9fdfa9b613839e9dbc0675bdb8f101d2e650c61"}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},"argument":{"tag":"tuple","exprs":[{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":1},{"tag":"project","argument":{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":1}]}},{"tag":"apply","operator":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},"argument":{"tag":"tuple","exprs":[{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":2},{"tag":"project","argument":{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":2}]}}]}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"1\" (forward-chain -6) nil nil) (\"2\" (forward-chain -3) nil nil)\n  (\"3\" (forward-chain -5) nil nil) (\"4\" (forward-chain -2) nil nil)\n  (\"5\" (inst? -4) nil nil) (\"6\" (inst? -1) nil nil))\n nil)","status":"proved"}},{"tag":"const-decl","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"},"parameters":[[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]],"const-def":{"tag":"lambda","bindings":[{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},"argument":{"tag":"tuple","exprs":[{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":1},{"tag":"project","argument":{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":1}]}},{"tag":"apply","operator":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},"argument":{"tag":"tuple","exprs":[{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":2},{"tag":"project","argument":{"tag":"variable","id":"w","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},"index":2}]}}]}}}},{"tag":"formula-decl","id":"RelExtensionPreservesEq","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"df0f93f7e3953e29f93bf43df3ddcaea6ed1016f"}}],"type":{"typehash":"3d0c985f0015474c1ec4859cb8432713bef51f43"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"496a06d96c07aae51fb3e066c7e5686f46b7d3cf"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :if-match nil)\n ((\"1\" (use \"EquivClassEq[Y]\") ((\"1\" (assert) nil nil)) nil)\n  (\"2\" (use \"EquivClassEq[X]\") ((\"2\" (assert) nil nil)) nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"RelQuotientDistributive_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"e633b765e891945f4f8e86db307b1fc08ad54da1"}}],"type":{"typehash":"00dee1632a3443eb9e2360a30d2b23f941718f9f"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"496a06d96c07aae51fb3e066c7e5686f46b7d3cf"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"1\" (apply-extensionality :hide? t)\n   ((\"1\" (hide -4 -5 -6 -7)\n     ((\"1\" (forward-chain -2)\n       ((\"1\" (iff)\n         ((\"1\" (prop)\n           ((\"1\" (forward-chain -4) nil nil)\n            (\"2\" (hide -2) ((\"2\" (forward-chain -3) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil)\n  (\"2\" (apply-extensionality :hide? t)\n   ((\"2\" (hide -1 -2 -3 -4 -8)\n     ((\"2\" (forward-chain -1)\n       ((\"2\" (iff)\n         ((\"2\" (prop)\n           ((\"1\" (forward-chain -3) nil nil)\n            (\"2\" (hide -2) ((\"2\" (forward-chain -2) nil nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"RelQuotientDistributive_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}],"type":{"typehash":"f00f9add6eb3c8dc3fb329c71708ea16baeb0ca1"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"1\" (rewrite \"restrict_full[[[X, Y], [X, Y]], bool]\")\n   ((\"1\" (inst?) nil nil)) nil)\n  (\"2\" (rewrite \"restrict_full[[[X, Y], [X, Y]], bool]\")\n   ((\"2\" (inst?) nil nil)) nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"RelQuotientDistributive","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"bijective?","theory":"functions","actuals":[{"tag":"type-actual","type":{"typehash":"6e71b5ba3bd14ce278e4019a3fcdee7a15a61166"}},{"tag":"type-actual","type":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}}],"type":{"typehash":"d4e3b3fb04a998cf75e6fbde3fd86bbc2a83ae4e"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}}],"type":{"typehash":"b5fadb54cbb958b4b34b7bbba489fe8bcecd72d1"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"496a06d96c07aae51fb3e066c7e5686f46b7d3cf"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"y","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (expand \"bijective?\")\n   ((\"\" (prop)\n     ((\"1\" (expand \"injective?\")\n       ((\"1\" (skosimp*)\n         ((\"1\" (expand \"lift\")\n           ((\"1\" (flatten)\n             ((\"1\" (typepred \"x1!1\" \"x2!1\")\n               ((\"1\" (skosimp*)\n                 ((\"1\" (case \"nonempty?(x1!1)\")\n                   ((\"1\" (case \"nonempty?(x2!1)\")\n                     ((\"1\" (expand \"rep\")\n                       ((\"1\" (name-replace \"ch1\" \"choose(x1!1)\")\n                         ((\"1\" (name-replace \"ch2\" \"choose(x2!1)\")\n                           ((\"1\" (typepred \"ch1\" \"ch2\")\n                             ((\"1\" (replace -5)\n                               ((\"1\"\n                                 (hide -5)\n                                 ((\"1\"\n                                   (replace -5)\n                                   ((\"1\"\n                                     (hide -5)\n                                     ((\"1\"\n                                       (hide -3 -4)\n                                       ((\"1\"\n                                         (expand \"EquivClass\")\n                                         ((\"1\"\n                                           (apply-extensionality\n                                            :hide?\n                                            t)\n                                           ((\"1\"\n                                             (expand \"RelExtension\")\n                                             ((\"1\"\n                                               (flatten)\n                                               ((\"1\"\n                                                 (assert)\n                                                 ((\"1\"\n                                                   (iff)\n                                                   ((\"1\"\n                                                     (lemma\n                                                      \"Kernel_quotient_map[X, X]\")\n                                                     ((\"1\"\n                                                       (lemma\n                                                        \"Kernel_quotient_map[Y, Y]\")\n                                                       ((\"1\"\n                                                         (inst?)\n                                                         ((\"1\"\n                                                           (inst?)\n                                                           ((\"1\"\n                                                             (case\n                                                              \"EquivalenceKernel[X, X, Quotient[X](S!1)](quotient_map(S!1))(ch1`1, ch2`1)\")\n                                                             ((\"1\"\n                                                               (case\n                                                                \"EquivalenceKernel[Y, Y, Quotient[Y](R!1)](quotient_map(R!1))(ch1`2, ch2`2)\")\n                                                               ((\"1\"\n                                                                 (replace\n                                                                  -3)\n                                                                 ((\"1\"\n                                                                   (replace\n                                                                    -4)\n                                                                   ((\"1\"\n                                                                     (hide\n                                                                      -3\n                                                                      -4)\n                                                                     ((\"1\"\n                                                                       (assert)\n                                                                       ((\"1\"\n                                                                         (smash)\n                                                                         ((\"1\"\n                                                                           (typepred\n                                                                            \"R!1\")\n                                                                           ((\"1\"\n                                                                             (expand\n                                                                              \"equivalence?\")\n                                                                             ((\"1\"\n                                                                               (flatten)\n                                                                               ((\"1\"\n                                                                                 (expand\n                                                                                  \"symmetric?\")\n                                                                                 ((\"1\"\n                                                                                   (expand\n                                                                                    \"transitive?\")\n                                                                                   ((\"1\"\n                                                                                     (hide\n                                                                                      -1\n                                                                                      -5\n                                                                                      -6\n                                                                                      -8\n                                                                                      -10\n                                                                                      -12\n                                                                                      -13)\n                                                                                     ((\"1\"\n                                                                                       (inst-cp\n                                                                                        -1\n                                                                                        \"ch1`2\"\n                                                                                        \"ch2`2\")\n                                                                                       ((\"1\"\n                                                                                         (assert)\n                                                                                         ((\"1\"\n                                                                                           (hide\n                                                                                            -4)\n                                                                                           ((\"1\"\n                                                                                             (inst\n                                                                                              -1\n                                                                                              \"x!1`2\"\n                                                                                              \"ch1`2\")\n                                                                                             ((\"1\"\n                                                                                               (assert)\n                                                                                               ((\"1\"\n                                                                                                 (hide\n                                                                                                  -5)\n                                                                                                 ((\"1\"\n                                                                                                   (inst-cp\n                                                                                                    -3\n                                                                                                    \"x!2`2\"\n                                                                                                    \"ch2`2\"\n                                                                                                    \"ch1`2\")\n                                                                                                   ((\"1\"\n                                                                                                     (assert)\n                                                                                                     ((\"1\"\n                                                                                                       (hide\n                                                                                                        -6\n                                                                                                        -2)\n                                                                                                       ((\"1\"\n                                                                                                         (inst-cp\n                                                                                                          -2\n                                                                                                          \"x!2`2\"\n                                                                                                          \"ch1`2\"\n                                                                                                          \"x!1`2\")\n                                                                                                         ((\"1\"\n                                                                                                           (assert)\n                                                                                                           ((\"1\"\n                                                                                                             (hide\n                                                                                                              -4\n                                                                                                              -1)\n                                                                                                             ((\"1\"\n                                                                                                               (inst\n                                                                                                                -1\n                                                                                                                \"x!2`2\"\n                                                                                                                \"x!1`2\"\n                                                                                                                \"x!4\")\n                                                                                                               ((\"1\"\n                                                                                                                 (assert)\n                                                                                                                 nil\n                                                                                                                 nil))\n                                                                                                               nil))\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil)\n                                                                          (\"2\"\n                                                                           (hide\n                                                                            -1\n                                                                            -4\n                                                                            -6\n                                                                            -8\n                                                                            -9\n                                                                            -10)\n                                                                           ((\"2\"\n                                                                             (typepred\n                                                                              \"S!1\")\n                                                                             ((\"2\"\n                                                                               (expand\n                                                                                \"equivalence?\")\n                                                                               ((\"2\"\n                                                                                 (flatten)\n                                                                                 ((\"2\"\n                                                                                   (expand\n                                                                                    \"symmetric?\")\n                                                                                   ((\"2\"\n                                                                                     (expand\n                                                                                      \"transitive?\")\n                                                                                     ((\"2\"\n                                                                                       (hide\n                                                                                        -1)\n                                                                                       ((\"2\"\n                                                                                         (inst-cp\n                                                                                          -1\n                                                                                          \"ch1`1\"\n                                                                                          \"ch2`1\")\n                                                                                         ((\"2\"\n                                                                                           (assert)\n                                                                                           ((\"2\"\n                                                                                             (hide\n                                                                                              -4)\n                                                                                             ((\"2\"\n                                                                                               (inst\n                                                                                                -1\n                                                                                                \"x!1`1\"\n                                                                                                \"ch1`1\")\n                                                                                               ((\"2\"\n                                                                                                 (assert)\n                                                                                                 ((\"2\"\n                                                                                                   (hide\n                                                                                                    -5)\n                                                                                                   ((\"2\"\n                                                                                                     (inst-cp\n                                                                                                      -3\n                                                                                                      \"x!2`1\"\n                                                                                                      \"ch2`1\"\n                                                                                                      \"ch1`1\")\n                                                                                                     ((\"2\"\n                                                                                                       (assert)\n                                                                                                       ((\"2\"\n                                                                                                         (hide\n                                                                                                          -6\n                                                                                                          -2)\n                                                                                                         ((\"2\"\n                                                                                                           (inst-cp\n                                                                                                            -2\n                                                                                                            \"x!2`1\"\n                                                                                                            \"ch1`1\"\n                                                                                                            \"x!1`1\")\n                                                                                                           ((\"2\"\n                                                                                                             (assert)\n                                                                                                             ((\"2\"\n                                                                                                               (hide\n                                                                                                                -4\n                                                                                                                -1)\n                                                                                                               ((\"2\"\n                                                                                                                 (inst\n                                                                                                                  -1\n                                                                                                                  \"x!2`1\"\n                                                                                                                  \"x!1`1\"\n                                                                                                                  \"x!3\")\n                                                                                                                 ((\"2\"\n                                                                                                                   (assert)\n                                                                                                                   nil\n                                                                                                                   nil))\n                                                                                                                 nil))\n                                                                                                               nil))\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil)\n                                                                          (\"3\"\n                                                                           (hide\n                                                                            -2\n                                                                            -3\n                                                                            -5\n                                                                            -7\n                                                                            -9\n                                                                            -10)\n                                                                           ((\"3\"\n                                                                             (typepred\n                                                                              \"R!1\")\n                                                                             ((\"3\"\n                                                                               (expand\n                                                                                \"equivalence?\")\n                                                                               ((\"3\"\n                                                                                 (flatten)\n                                                                                 ((\"3\"\n                                                                                   (hide\n                                                                                    -1)\n                                                                                   ((\"3\"\n                                                                                     (expand\n                                                                                      \"symmetric?\")\n                                                                                     ((\"3\"\n                                                                                       (expand\n                                                                                        \"transitive?\")\n                                                                                       ((\"3\"\n                                                                                         (inst\n                                                                                          -1\n                                                                                          \"x!2`2\"\n                                                                                          \"ch2`2\")\n                                                                                         ((\"3\"\n                                                                                           (assert)\n                                                                                           ((\"3\"\n                                                                                             (hide\n                                                                                              -6)\n                                                                                             ((\"3\"\n                                                                                               (inst-cp\n                                                                                                -2\n                                                                                                \"x!1`2\"\n                                                                                                \"ch1`2\"\n                                                                                                \"ch2`2\")\n                                                                                               ((\"3\"\n                                                                                                 (assert)\n                                                                                                 ((\"3\"\n                                                                                                   (hide\n                                                                                                    -6\n                                                                                                    -4)\n                                                                                                   ((\"3\"\n                                                                                                     (inst-cp\n                                                                                                      -2\n                                                                                                      \"x!1`2\"\n                                                                                                      \"ch2`2\"\n                                                                                                      \"x!2`2\")\n                                                                                                     ((\"3\"\n                                                                                                       (assert)\n                                                                                                       ((\"3\"\n                                                                                                         (hide\n                                                                                                          -4\n                                                                                                          -1)\n                                                                                                         ((\"3\"\n                                                                                                           (inst\n                                                                                                            -1\n                                                                                                            \"x!1`2\"\n                                                                                                            \"x!2`2\"\n                                                                                                            \"x!4\")\n                                                                                                           ((\"3\"\n                                                                                                             (assert)\n                                                                                                             nil\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil)\n                                                                          (\"4\"\n                                                                           (hide\n                                                                            -1\n                                                                            -4\n                                                                            -6\n                                                                            -8\n                                                                            -9\n                                                                            -10)\n                                                                           ((\"4\"\n                                                                             (typepred\n                                                                              \"S!1\")\n                                                                             ((\"4\"\n                                                                               (expand\n                                                                                \"equivalence?\")\n                                                                               ((\"4\"\n                                                                                 (flatten)\n                                                                                 ((\"4\"\n                                                                                   (expand\n                                                                                    \"symmetric?\")\n                                                                                   ((\"4\"\n                                                                                     (expand\n                                                                                      \"transitive?\")\n                                                                                     ((\"4\"\n                                                                                       (hide\n                                                                                        -1)\n                                                                                       ((\"4\"\n                                                                                         (inst\n                                                                                          -1\n                                                                                          \"x!2`1\"\n                                                                                          \"ch2`1\")\n                                                                                         ((\"4\"\n                                                                                           (assert)\n                                                                                           ((\"4\"\n                                                                                             (hide\n                                                                                              -6)\n                                                                                             ((\"4\"\n                                                                                               (inst-cp\n                                                                                                -2\n                                                                                                \"x!1`1\"\n                                                                                                \"ch1`1\"\n                                                                                                \"ch2`1\")\n                                                                                               ((\"4\"\n                                                                                                 (assert)\n                                                                                                 ((\"4\"\n                                                                                                   (hide\n                                                                                                    -6\n                                                                                                    -4)\n                                                                                                   ((\"4\"\n                                                                                                     (inst-cp\n                                                                                                      -2\n                                                                                                      \"x!1`1\"\n                                                                                                      \"ch2`1\"\n                                                                                                      \"x!2`1\")\n                                                                                                     ((\"4\"\n                                                                                                       (assert)\n                                                                                                       ((\"4\"\n                                                                                                         (hide\n                                                                                                          -4\n                                                                                                          -1)\n                                                                                                         ((\"4\"\n                                                                                                           (inst\n                                                                                                            -1\n                                                                                                            \"x!1`1\"\n                                                                                                            \"x!2`1\"\n                                                                                                            \"x!3\")\n                                                                                                           ((\"4\"\n                                                                                                             (assert)\n                                                                                                             nil\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil)\n                                                                (\"2\"\n                                                                 (expand\n                                                                  \"EquivalenceKernel\")\n                                                                 ((\"2\"\n                                                                   (propax)\n                                                                   nil\n                                                                   nil))\n                                                                 nil))\n                                                               nil)\n                                                              (\"2\"\n                                                               (expand\n                                                                \"EquivalenceKernel\")\n                                                               ((\"2\"\n                                                                 (propax)\n                                                                 nil\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil)\n                      (\"2\" (replace -3)\n                       ((\"2\" (hide -1 -2 -3 -4 -5 2)\n                         ((\"2\" (grind)\n                           ((\"1\" (typepred \"R!1\")\n                             ((\"1\" (grind) nil nil)) nil)\n                            (\"2\" (typepred \"S!1\")\n                             ((\"2\" (grind) nil nil)) nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil)\n                    (\"2\" (replace -1)\n                     ((\"2\" (hide -1 -2 -3 -4 2)\n                       ((\"2\" (grind)\n                         ((\"1\" (typepred \"R!1\") ((\"1\" (grind) nil nil))\n                           nil)\n                          (\"2\" (typepred \"S!1\") ((\"2\" (grind) nil nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil)\n      (\"2\" (expand \"surjective?\")\n       ((\"2\" (skosimp*)\n         ((\"2\" (typepred \"y!1`1\")\n           ((\"2\" (typepred \"y!1`2\")\n             ((\"2\" (skosimp*)\n               ((\"2\" (case \"nonempty?(y!1`1)\")\n                 ((\"1\" (case \"nonempty?(y!1`2)\")\n                   ((\"1\"\n                     (inst 1\n                      \"EquivClass[[X, Y]](RelExtension(S!1,R!1))(choose(y!1`1), choose(y!1`2))\")\n                     ((\"1\"\n                       (case \"nonempty?(EquivClass[[X, Y]]\n                                             (RelExtension(S!1, R!1))(choose(y!1`1), choose(y!1`2)))\")\n                       ((\"1\" (expand \"lift\")\n                         ((\"1\" (expand \"rep\")\n                           ((\"1\"\n                             (name-replace \"ch\"\n                              \"choose(EquivClass[[X, Y]]\n                                            (RelExtension(S!1, R!1))(choose(y!1`1), choose(y!1`2)))\")\n                             ((\"1\" (typepred \"ch\")\n                               ((\"1\"\n                                 (expand \"EquivClass\")\n                                 ((\"1\"\n                                   (expand \"RelExtension\")\n                                   ((\"1\"\n                                     (flatten)\n                                     ((\"1\"\n                                       (name-replace\n                                        \"ch1\"\n                                        \"choose(y!1`1)\")\n                                       ((\"1\"\n                                         (name-replace\n                                          \"ch2\"\n                                          \"choose(y!1`2)\")\n                                         ((\"1\"\n                                           (typepred \"ch1\" \"ch2\")\n                                           ((\"1\"\n                                             (replace -8 -2)\n                                             ((\"1\"\n                                               (replace -9 -1)\n                                               ((\"1\"\n                                                 (assert)\n                                                 ((\"1\"\n                                                   (expand\n                                                    \"quotient_map\")\n                                                   ((\"1\"\n                                                     (expand\n                                                      \"EquivClass\")\n                                                     ((\"1\"\n                                                       (apply-extensionality\n                                                        :hide?\n                                                        t)\n                                                       ((\"1\"\n                                                         (apply-extensionality\n                                                          :hide?\n                                                          t)\n                                                         ((\"1\"\n                                                           (replace\n                                                            -9\n                                                            1)\n                                                           ((\"1\"\n                                                             (assert)\n                                                             ((\"1\"\n                                                               (iff)\n                                                               ((\"1\"\n                                                                 (hide\n                                                                  -2\n                                                                  -4\n                                                                  -5\n                                                                  -6\n                                                                  -7\n                                                                  -8\n                                                                  -9)\n                                                                 ((\"1\"\n                                                                   (typepred\n                                                                    \"S!1\")\n                                                                   ((\"1\"\n                                                                     (expand\n                                                                      \"equivalence?\")\n                                                                     ((\"1\"\n                                                                       (flatten)\n                                                                       ((\"1\"\n                                                                         (hide\n                                                                          -1)\n                                                                         ((\"1\"\n                                                                           (expand\n                                                                            \"symmetric?\")\n                                                                           ((\"1\"\n                                                                             (expand\n                                                                              \"transitive?\")\n                                                                             ((\"1\"\n                                                                               (prop)\n                                                                               ((\"1\"\n                                                                                 (hide\n                                                                                  -2)\n                                                                                 ((\"1\"\n                                                                                   (inst-cp\n                                                                                    -2\n                                                                                    \"x!2\"\n                                                                                    \"ch1\"\n                                                                                    \"ch`1\")\n                                                                                   ((\"1\"\n                                                                                     (assert)\n                                                                                     ((\"1\"\n                                                                                       (hide\n                                                                                        -4\n                                                                                        -5)\n                                                                                       ((\"1\"\n                                                                                         (inst\n                                                                                          -2\n                                                                                          \"x!2\"\n                                                                                          \"ch`1\"\n                                                                                          \"x!3\")\n                                                                                         ((\"1\"\n                                                                                           (assert)\n                                                                                           nil\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil)\n                                                                                (\"2\"\n                                                                                 (inst-cp\n                                                                                  -2\n                                                                                  \"ch1\"\n                                                                                  \"ch`1\")\n                                                                                 ((\"2\"\n                                                                                   (assert)\n                                                                                   ((\"2\"\n                                                                                     (hide\n                                                                                      -6)\n                                                                                     ((\"2\"\n                                                                                       (inst\n                                                                                        -2\n                                                                                        \"x!2\"\n                                                                                        \"ch1\")\n                                                                                       ((\"2\"\n                                                                                         (assert)\n                                                                                         ((\"2\"\n                                                                                           (hide\n                                                                                            -5)\n                                                                                           ((\"2\"\n                                                                                             (inst-cp\n                                                                                              -4\n                                                                                              \"ch`1\"\n                                                                                              \"ch1\"\n                                                                                              \"x!2\")\n                                                                                             ((\"2\"\n                                                                                               (assert)\n                                                                                               ((\"2\"\n                                                                                                 (hide\n                                                                                                  -3\n                                                                                                  -2)\n                                                                                                 ((\"2\"\n                                                                                                   (inst\n                                                                                                    -2\n                                                                                                    \"ch`1\"\n                                                                                                    \"x!2\"\n                                                                                                    \"x!3\")\n                                                                                                   ((\"2\"\n                                                                                                     (assert)\n                                                                                                     nil\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil)\n                                                        (\"2\"\n                                                         (apply-extensionality\n                                                          :hide?\n                                                          t)\n                                                         ((\"2\"\n                                                           (replace\n                                                            -8\n                                                            1)\n                                                           ((\"2\"\n                                                             (assert)\n                                                             ((\"2\"\n                                                               (iff)\n                                                               ((\"2\"\n                                                                 (typepred\n                                                                  \"R!1\")\n                                                                 ((\"2\"\n                                                                   (expand\n                                                                    \"equivalence?\")\n                                                                   ((\"2\"\n                                                                     (flatten)\n                                                                     ((\"2\"\n                                                                       (hide\n                                                                        -1\n                                                                        -4\n                                                                        -6\n                                                                        -8\n                                                                        -9\n                                                                        -10\n                                                                        -11\n                                                                        -12)\n                                                                       ((\"2\"\n                                                                         (expand\n                                                                          \"symmetric?\")\n                                                                         ((\"2\"\n                                                                           (expand\n                                                                            \"transitive?\")\n                                                                           ((\"2\"\n                                                                             (prop)\n                                                                             ((\"1\"\n                                                                               (hide\n                                                                                -2)\n                                                                               ((\"1\"\n                                                                                 (inst-cp\n                                                                                  -2\n                                                                                  \"x!1\"\n                                                                                  \"ch2\"\n                                                                                  \"ch`2\")\n                                                                                 ((\"1\"\n                                                                                   (assert)\n                                                                                   ((\"1\"\n                                                                                     (hide\n                                                                                      -4\n                                                                                      -5)\n                                                                                     ((\"1\"\n                                                                                       (inst\n                                                                                        -2\n                                                                                        \"x!1\"\n                                                                                        \"ch`2\"\n                                                                                        \"x!3\")\n                                                                                       ((\"1\"\n                                                                                         (assert)\n                                                                                         nil\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil)\n                                                                              (\"2\"\n                                                                               (inst-cp\n                                                                                -2\n                                                                                \"ch2\"\n                                                                                \"ch`2\")\n                                                                               ((\"2\"\n                                                                                 (assert)\n                                                                                 ((\"2\"\n                                                                                   (hide\n                                                                                    -6)\n                                                                                   ((\"2\"\n                                                                                     (inst\n                                                                                      -2\n                                                                                      \"x!1\"\n                                                                                      \"ch2\")\n                                                                                     ((\"2\"\n                                                                                       (assert)\n                                                                                       ((\"2\"\n                                                                                         (hide\n                                                                                          -5)\n                                                                                         ((\"2\"\n                                                                                           (inst-cp\n                                                                                            -4\n                                                                                            \"ch`2\"\n                                                                                            \"ch2\"\n                                                                                            \"x!1\")\n                                                                                           ((\"2\"\n                                                                                             (assert)\n                                                                                             ((\"2\"\n                                                                                               (hide\n                                                                                                -3\n                                                                                                -2)\n                                                                                               ((\"2\"\n                                                                                                 (inst\n                                                                                                  -2\n                                                                                                  \"ch`2\"\n                                                                                                  \"x!1\"\n                                                                                                  \"x!3\")\n                                                                                                 ((\"2\"\n                                                                                                   (assert)\n                                                                                                   nil\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil)\n                                                        (\"3\"\n                                                         (expand\n                                                          \"EquivClass\")\n                                                         ((\"3\"\n                                                           (inst\n                                                            1\n                                                            \"ch`2\")\n                                                           nil\n                                                           nil))\n                                                         nil)\n                                                        (\"4\"\n                                                         (expand\n                                                          \"EquivClass\")\n                                                         ((\"4\"\n                                                           (inst\n                                                            1\n                                                            \"ch`1\")\n                                                           nil\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil)\n                        (\"2\" (hide 2)\n                         ((\"2\" (expand \"nonempty?\" 1)\n                           ((\"2\" (expand \"empty?\")\n                             ((\"2\" (expand \"member\")\n                               ((\"2\"\n                                 (expand \"EquivClass\" -1)\n                                 ((\"2\"\n                                   (expand \"RelExtension\" -1)\n                                   ((\"2\"\n                                     (inst\n                                      -1\n                                      \"(choose(y!1`1), choose(y!1`2))\")\n                                     ((\"2\"\n                                       (typepred \"S!1\" \"R!1\")\n                                       ((\"2\"\n                                         (expand \"equivalence?\")\n                                         ((\"2\"\n                                           (flatten)\n                                           ((\"2\"\n                                             (hide -2 -3 -5 -6)\n                                             ((\"2\"\n                                               (expand \"reflexive?\")\n                                               ((\"2\"\n                                                 (inst?)\n                                                 ((\"2\"\n                                                   (inst?)\n                                                   ((\"2\"\n                                                     (assert)\n                                                     nil\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil)\n                        (\"3\" (propax) nil nil) (\"4\" (propax) nil nil))\n                       nil)\n                      (\"2\" (expand \"EquivClass\" 1)\n                       ((\"2\" (expand \"RelExtension\" 1)\n                         ((\"2\"\n                           (inst 1 \"(choose(y!1`1), choose(y!1`2))\")\n                           nil nil))\n                         nil))\n                       nil))\n                     nil)\n                    (\"2\" (hide -1 -3 2)\n                     ((\"2\" (replace -1)\n                       ((\"2\" (hide -1)\n                         ((\"2\" (grind)\n                           ((\"2\" (typepred \"R!1\")\n                             ((\"2\" (grind) nil nil)) nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil)\n                  (\"2\" (replace -2 1)\n                   ((\"2\" (hide -1 -2 2)\n                     ((\"2\" (grind)\n                       ((\"2\" (typepred \"S!1\") ((\"2\" (grind) nil nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"var-decl","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},{"tag":"var-decl","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"var-decl","id":"g","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"formula-decl","id":"FunExtension_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"type":{"typehash":"c39e7bc55f66d84e38ab77cde70caeac56fcefe7"}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"variable","id":"g","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"forall","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"apply","operator":{"tag":"variable","id":"g","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"1\" (typepred \"F!1(x!2)\")\n   ((\"1\" (inst?)\n     ((\"1\" (inst?)\n       ((\"1\" (grind :exclude \"rep\" :if-match nil)\n         ((\"1\" (forward-chain -3) nil nil)) nil))\n       nil))\n     nil))\n   nil)\n  (\"2\" (typepred \"F!1(x!2)\")\n   ((\"2\" (grind :exclude \"rep\" :if-match nil)\n     ((\"2\" (inst? -4)\n       ((\"2\" (inst -2 \"x!1(x!2)\" \"y!1(x!2)\") ((\"2\" (assert) nil nil))\n         nil))\n       nil))\n     nil))\n   nil)\n  (\"3\" (typepred \"F!1(x!2)\")\n   ((\"3\" (grind :exclude \"rep\" :if-match nil)\n     ((\"3\" (inst? -1) nil nil)) nil))\n   nil))\n nil)","status":"proved"}},{"tag":"const-decl","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"},"parameters":[[{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}]],"const-def":{"tag":"lambda","bindings":[{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"variable","id":"g","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"forall","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}},{"tag":"apply","operator":{"tag":"variable","id":"g","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}}},{"tag":"formula-decl","id":"FunExtensionPreservesEq","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"e5eb8c1d298a9172e9dab40325f6b8e069e80c57"}}],"type":{"typehash":"2654a529e5a5a0247077849fea24cc621a974aa2"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"}},"argument":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"496a06d96c07aae51fb3e066c7e5686f46b7d3cf"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind)\n ((\"\" (apply-extensionality :hide? t)\n   ((\"\" (apply-extensionality :hide? t)\n     ((\"\" (inst?)\n       ((\"\" (iff)\n         ((\"\" (typepred \"F!1(x!2)\")\n           ((\"\" (expand \"equivalence?\")\n             ((\"\" (flatten)\n               ((\"\" (hide -1)\n                 ((\"\" (expand \"symmetric?\")\n                   ((\"\" (expand \"transitive?\")\n                     ((\"\" (prop)\n                       ((\"1\" (inst -2 \"x!1`1(x!2)\" \"x!1`2(x!2)\")\n                         ((\"1\" (assert)\n                           ((\"1\" (forward-chain -3) nil nil)) nil))\n                         nil)\n                        (\"2\" (forward-chain -3) nil nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"FunQuotientDistributive_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"369e2a90abdbfb6d4b845c8f2573c35c80a53d30"}}],"type":{"typehash":"ace4005d6466ed56b64eaf07d88e0dc3348cb011"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"}},"argument":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"496a06d96c07aae51fb3e066c7e5686f46b7d3cf"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"\" (apply-extensionality :hide? t)\n   ((\"\" (inst?)\n     ((\"\" (typepred \"F!1(x!2)\")\n       ((\"\" (apply-extensionality :hide? t)\n         ((\"\" (flatten)\n           ((\"\" (forward-chain -2)\n             ((\"\" (iff)\n               ((\"\" (prop)\n                 ((\"1\" (forward-chain -4) nil nil)\n                  (\"2\" (hide -2) ((\"2\" (forward-chain -3) nil nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"FunQuotientDistributive_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}],"type":{"typehash":"cabf4c928e784b1fef93694308e6334a3be60980"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"}},"argument":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"1\" (rewrite \"restrict_full[[[X -> Y], [X -> Y]], bool]\")\n   ((\"1\" (inst?) nil nil)) nil)\n  (\"2\" (rewrite \"restrict_full[[[X -> Y], [X -> Y]], bool]\")\n   ((\"2\" (inst?) nil nil)) nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"FunQuotientDistributive","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"bijective?","theory":"functions","actuals":[{"tag":"type-actual","type":{"typehash":"81ea25312ff84a0e8f08b1cd766cef23d6f8ebd3"}},{"tag":"type-actual","type":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}}],"type":{"typehash":"70e9712ba7630be27b500e35feab86dbb5fbf595"}},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}}],"type":{"typehash":"3d7a7b65f17e9fdcd78f02ad450f78e93cc93f11"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"}},"argument":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"496a06d96c07aae51fb3e066c7e5686f46b7d3cf"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"f","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}}}}}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp)\n ((\"\" (lemma \"FunExtensionPreservesEq\")\n   ((\"\" (expand \"bijective?\")\n     ((\"\" (inst -1 \"F!1\")\n       ((\"\" (prop)\n         ((\"1\" (expand \"injective?\")\n           ((\"1\" (skolem-typepred)\n             ((\"1\" (skosimp*)\n               ((\"1\" (replace -1 :hide? t)\n                 ((\"1\" (replace -1 :hide? t)\n                   ((\"1\" (expand \"EquivClass\")\n                     ((\"1\" (apply-extensionality :hide? t)\n                       ((\"1\" (expand \"FunExtension\" 1)\n                         ((\"1\" (expand \"lift\")\n                           ((\"1\" (decompose-equality)\n                             ((\"1\" (iff)\n                               ((\"1\"\n                                 (prop)\n                                 ((\"1\"\n                                   (skosimp*)\n                                   ((\"1\"\n                                     (inst -1 \"x!4\")\n                                     ((\"1\"\n                                       (inst -2 \"x!4\")\n                                       ((\"1\"\n                                         (expand \"quotient_map\" -2)\n                                         ((\"1\"\n                                           (expand \"EquivClass\" -2)\n                                           ((\"1\"\n                                             (decompose-equality)\n                                             ((\"1\"\n                                               (inst -1 \"x!1(x!4)\")\n                                               ((\"1\"\n                                                 (expand \"rep\")\n                                                 ((\"1\"\n                                                   (expand\n                                                    \"FunExtension\")\n                                                   ((\"1\"\n                                                     (expand\n                                                      \"PreservesEq\")\n                                                     ((\"1\"\n                                                       (expand\n                                                        \"subset?\")\n                                                       ((\"1\"\n                                                         (expand\n                                                          \"member\")\n                                                         ((\"1\"\n                                                           (expand\n                                                            \"EquivalenceKernel\")\n                                                           ((\"1\"\n                                                             (rewrite\n                                                              \"restrict_full[[[X -> Y], [X -> Y]], bool]\")\n                                                             ((\"1\"\n                                                               (expand\n                                                                \"quotient_map\")\n                                                               ((\"1\"\n                                                                 (expand\n                                                                  \"EquivClass\")\n                                                                 ((\"1\"\n                                                                   (name-replace\n                                                                    \"ch1\"\n                                                                    \"choose({z: [X -> Y] | FORALL (x: X): F!1(x)(x!1(x), z(x))})\")\n                                                                   ((\"1\"\n                                                                     (name-replace\n                                                                      \"ch2\"\n                                                                      \"choose({z: [X -> Y] | FORALL (x: X): F!1(x)(x!2(x), z(x))})\")\n                                                                     ((\"1\"\n                                                                       (inst\n                                                                        -3\n                                                                        \"(ch1, ch2)\")\n                                                                       ((\"1\"\n                                                                         (prop)\n                                                                         ((\"1\"\n                                                                           (decompose-equality)\n                                                                           ((\"1\"\n                                                                             (inst\n                                                                              -1\n                                                                              \"x!4\")\n                                                                             ((\"1\"\n                                                                               (decompose-equality)\n                                                                               ((\"1\"\n                                                                                 (typepred\n                                                                                  \"ch1\")\n                                                                                 ((\"1\"\n                                                                                   (typepred\n                                                                                    \"ch2\")\n                                                                                   ((\"1\"\n                                                                                     (inst\n                                                                                      -1\n                                                                                      \"x!4\")\n                                                                                     ((\"1\"\n                                                                                       (inst\n                                                                                        -2\n                                                                                        \"x!4\")\n                                                                                       ((\"1\"\n                                                                                         (inst\n                                                                                          -3\n                                                                                          \"x!2(x!4)\")\n                                                                                         ((\"1\"\n                                                                                           (typepred\n                                                                                            \"F!1(x!4)\")\n                                                                                           ((\"1\"\n                                                                                             (expand\n                                                                                              \"equivalence?\")\n                                                                                             ((\"1\"\n                                                                                               (flatten)\n                                                                                               ((\"1\"\n                                                                                                 (hide\n                                                                                                  -1)\n                                                                                                 ((\"1\"\n                                                                                                   (expand\n                                                                                                    \"symmetric?\")\n                                                                                                   ((\"1\"\n                                                                                                     (expand\n                                                                                                      \"transitive?\")\n                                                                                                     ((\"1\"\n                                                                                                       (assert)\n                                                                                                       ((\"1\"\n                                                                                                         (inst-cp\n                                                                                                          -1\n                                                                                                          \"x!2(x!4)\"\n                                                                                                          \"ch2(x!4)\")\n                                                                                                         ((\"1\"\n                                                                                                           (assert)\n                                                                                                           ((\"1\"\n                                                                                                             (replace\n                                                                                                              -2)\n                                                                                                             ((\"1\"\n                                                                                                               (hide\n                                                                                                                -2)\n                                                                                                               ((\"1\"\n                                                                                                                 (inst\n                                                                                                                  -1\n                                                                                                                  \"x!1(x!4)\"\n                                                                                                                  \"ch1(x!4)\")\n                                                                                                                 ((\"1\"\n                                                                                                                   (assert)\n                                                                                                                   ((\"1\"\n                                                                                                                     (replace\n                                                                                                                      -1)\n                                                                                                                     ((\"1\"\n                                                                                                                       (hide\n                                                                                                                        -1\n                                                                                                                        -4\n                                                                                                                        -5)\n                                                                                                                       ((\"1\"\n                                                                                                                         (inst-cp\n                                                                                                                          -1\n                                                                                                                          \"x!2(x!4)\"\n                                                                                                                          \"ch2(x!4)\"\n                                                                                                                          \"x!1(x!4)\")\n                                                                                                                         ((\"1\"\n                                                                                                                           (assert)\n                                                                                                                           ((\"1\"\n                                                                                                                             (hide\n                                                                                                                              -3\n                                                                                                                              -4)\n                                                                                                                             ((\"1\"\n                                                                                                                               (inst\n                                                                                                                                -1\n                                                                                                                                \"x!2(x!4)\"\n                                                                                                                                \"x!1(x!4)\"\n                                                                                                                                \"x!3(x!4)\")\n                                                                                                                               ((\"1\"\n                                                                                                                                 (assert)\n                                                                                                                                 nil\n                                                                                                                                 nil))\n                                                                                                                               nil))\n                                                                                                                             nil))\n                                                                                                                           nil))\n                                                                                                                         nil))\n                                                                                                                       nil))\n                                                                                                                     nil))\n                                                                                                                   nil))\n                                                                                                                 nil))\n                                                                                                               nil))\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil)\n                                                                          (\"2\"\n                                                                           (typepred\n                                                                            \"ch1\"\n                                                                            \"ch2\")\n                                                                           ((\"2\"\n                                                                             (hide\n                                                                              1)\n                                                                             ((\"2\"\n                                                                               (inst\n                                                                                -1\n                                                                                \"x!4\")\n                                                                               ((\"2\"\n                                                                                 (inst\n                                                                                  -2\n                                                                                  \"x!4\")\n                                                                                 ((\"2\"\n                                                                                   (typepred\n                                                                                    \"F!1(x!4)\")\n                                                                                   ((\"2\"\n                                                                                     (expand\n                                                                                      \"equivalence?\")\n                                                                                     ((\"2\"\n                                                                                       (flatten)\n                                                                                       ((\"2\"\n                                                                                         (hide\n                                                                                          -1)\n                                                                                         ((\"2\"\n                                                                                           (expand\n                                                                                            \"symmetric?\")\n                                                                                           ((\"2\"\n                                                                                             (expand\n                                                                                              \"transitive?\")\n                                                                                             ((\"2\"\n                                                                                               (inst\n                                                                                                -1\n                                                                                                \"x!1(x!4)\"\n                                                                                                \"ch1(x!4)\")\n                                                                                               ((\"2\"\n                                                                                                 (assert)\n                                                                                                 ((\"2\"\n                                                                                                   (replace\n                                                                                                    -1)\n                                                                                                   ((\"2\"\n                                                                                                     (hide\n                                                                                                      -1)\n                                                                                                     ((\"2\"\n                                                                                                       (hide\n                                                                                                        -2)\n                                                                                                       ((\"2\"\n                                                                                                         (inst-cp\n                                                                                                          -1\n                                                                                                          \"x!2(x!4)\"\n                                                                                                          \"ch2(x!4)\"\n                                                                                                          \"x!1(x!4)\")\n                                                                                                         ((\"2\"\n                                                                                                           (assert)\n                                                                                                           ((\"2\"\n                                                                                                             (hide\n                                                                                                              -3\n                                                                                                              -4)\n                                                                                                             ((\"2\"\n                                                                                                               (inst\n                                                                                                                -1\n                                                                                                                \"x!2(x!4)\"\n                                                                                                                \"x!1(x!4)\"\n                                                                                                                \"x!3(x!4)\")\n                                                                                                               ((\"2\"\n                                                                                                                 (assert)\n                                                                                                                 nil\n                                                                                                                 nil))\n                                                                                                               nil))\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil)\n                                                                      (\"2\"\n                                                                       (hide\n                                                                        -1\n                                                                        -2\n                                                                        -3\n                                                                        2)\n                                                                       ((\"2\"\n                                                                         (expand\n                                                                          \"nonempty?\")\n                                                                         ((\"2\"\n                                                                           (expand\n                                                                            \"empty?\")\n                                                                           ((\"2\"\n                                                                             (inst\n                                                                              -1\n                                                                              \"x!2\")\n                                                                             ((\"2\"\n                                                                               (expand\n                                                                                \"member\")\n                                                                               ((\"2\"\n                                                                                 (skosimp)\n                                                                                 ((\"2\"\n                                                                                   (typepred\n                                                                                    \"F!1(x!5)\")\n                                                                                   ((\"2\"\n                                                                                     (grind)\n                                                                                     nil\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil)\n                                                                    (\"2\"\n                                                                     (hide\n                                                                      -1\n                                                                      -2\n                                                                      -3\n                                                                      2)\n                                                                     ((\"2\"\n                                                                       (expand\n                                                                        \"nonempty?\")\n                                                                       ((\"2\"\n                                                                         (expand\n                                                                          \"empty?\")\n                                                                         ((\"2\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"x!1\")\n                                                                           ((\"2\"\n                                                                             (expand\n                                                                              \"member\")\n                                                                             ((\"2\"\n                                                                               (skosimp)\n                                                                               ((\"2\"\n                                                                                 (typepred\n                                                                                  \"F!1(x!5)\")\n                                                                                 ((\"2\"\n                                                                                   (grind)\n                                                                                   nil\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"2\"\n                                               (grind :if-match nil)\n                                               ((\"2\"\n                                                 (expand\n                                                  \"EquivClass\"\n                                                  1)\n                                                 ((\"2\"\n                                                   (expand\n                                                    \"FunExtension\"\n                                                    1)\n                                                   ((\"2\"\n                                                     (inst 1 \"x!2\")\n                                                     nil\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"3\"\n                                               (inst 1 \"x!1\")\n                                               ((\"3\"\n                                                 (apply-extensionality\n                                                  :hide?\n                                                  t)\n                                                 ((\"3\"\n                                                   (expand\n                                                    \"FunExtension\")\n                                                   ((\"3\"\n                                                     (expand\n                                                      \"EquivClass\")\n                                                     ((\"3\"\n                                                       (propax)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil)\n                                  (\"2\"\n                                   (skosimp)\n                                   ((\"2\"\n                                     (inst -1 \"x!4\")\n                                     ((\"2\"\n                                       (inst -2 \"x!4\")\n                                       ((\"2\"\n                                         (expand \"quotient_map\")\n                                         ((\"2\"\n                                           (expand \"EquivClass\")\n                                           ((\"2\"\n                                             (decompose-equality)\n                                             ((\"1\"\n                                               (expand \"PreservesEq\")\n                                               ((\"1\"\n                                                 (expand \"subset?\")\n                                                 ((\"1\"\n                                                   (expand \"member\")\n                                                   ((\"1\"\n                                                     (expand\n                                                      \"FunExtension\")\n                                                     ((\"1\"\n                                                       (rewrite\n                                                        \"restrict_full[[[X -> Y], [X -> Y]], bool]\")\n                                                       ((\"1\"\n                                                         (expand\n                                                          \"EquivalenceKernel\")\n                                                         ((\"1\"\n                                                           (expand\n                                                            \"rep\")\n                                                           ((\"1\"\n                                                             (name-replace\n                                                              \"ch1\"\n                                                              \"choose({z: [X -> Y] | FORALL (x: X): F!1(x)(x!1(x), z(x))})\")\n                                                             ((\"1\"\n                                                               (name-replace\n                                                                \"ch2\"\n                                                                \"choose({z: [X -> Y] | FORALL (x: X): F!1(x)(x!2(x), z(x))})\")\n                                                               ((\"1\"\n                                                                 (inst\n                                                                  -3\n                                                                  \"(ch1, ch2)\")\n                                                                 ((\"1\"\n                                                                   (typepred\n                                                                    \"ch1\"\n                                                                    \"ch2\")\n                                                                   ((\"1\"\n                                                                     (hide\n                                                                      -5)\n                                                                     ((\"1\"\n                                                                       (inst\n                                                                        -1\n                                                                        \"x!4\")\n                                                                       ((\"1\"\n                                                                         (inst\n                                                                          -2\n                                                                          \"x!4\")\n                                                                         ((\"1\"\n                                                                           (inst\n                                                                            -3\n                                                                            \"ch1(x!4)\")\n                                                                           ((\"1\"\n                                                                             (typepred\n                                                                              \"F!1(x!4)\")\n                                                                             ((\"1\"\n                                                                               (expand\n                                                                                \"equivalence?\")\n                                                                               ((\"1\"\n                                                                                 (flatten)\n                                                                                 ((\"1\"\n                                                                                   (expand\n                                                                                    \"reflexive?\")\n                                                                                   ((\"1\"\n                                                                                     (inst\n                                                                                      -1\n                                                                                      \"ch1(x!4)\")\n                                                                                     ((\"1\"\n                                                                                       (assert)\n                                                                                       ((\"1\"\n                                                                                         (hide\n                                                                                          -1)\n                                                                                         ((\"1\"\n                                                                                           (expand\n                                                                                            \"symmetric?\")\n                                                                                           ((\"1\"\n                                                                                             (expand\n                                                                                              \"transitive?\")\n                                                                                             ((\"1\"\n                                                                                               (inst-cp\n                                                                                                -1\n                                                                                                \"ch2(x!4)\"\n                                                                                                \"ch1(x!4)\")\n                                                                                               ((\"1\"\n                                                                                                 (assert)\n                                                                                                 ((\"1\"\n                                                                                                   (hide\n                                                                                                    -6)\n                                                                                                   ((\"1\"\n                                                                                                     (inst\n                                                                                                      -1\n                                                                                                      \"x!2(x!4)\"\n                                                                                                      \"ch2(x!4)\")\n                                                                                                     ((\"1\"\n                                                                                                       (assert)\n                                                                                                       ((\"1\"\n                                                                                                         (hide\n                                                                                                          -5)\n                                                                                                         ((\"1\"\n                                                                                                           (inst-cp\n                                                                                                            -3\n                                                                                                            \"x!1(x!4)\"\n                                                                                                            \"ch1(x!4)\"\n                                                                                                            \"ch2(x!4)\")\n                                                                                                           ((\"1\"\n                                                                                                             (assert)\n                                                                                                             ((\"1\"\n                                                                                                               (hide\n                                                                                                                -5\n                                                                                                                -2)\n                                                                                                               ((\"1\"\n                                                                                                                 (inst-cp\n                                                                                                                  -2\n                                                                                                                  \"x!1(x!4)\"\n                                                                                                                  \"ch2(x!4)\"\n                                                                                                                  \"x!2(x!4)\")\n                                                                                                                 ((\"1\"\n                                                                                                                   (assert)\n                                                                                                                   ((\"1\"\n                                                                                                                     (hide\n                                                                                                                      -4\n                                                                                                                      -1)\n                                                                                                                     ((\"1\"\n                                                                                                                       (forward-chain\n                                                                                                                        -1)\n                                                                                                                       nil\n                                                                                                                       nil))\n                                                                                                                     nil))\n                                                                                                                   nil))\n                                                                                                                 nil))\n                                                                                                               nil))\n                                                                                                             nil))\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil)\n                                                                (\"2\"\n                                                                 (hide\n                                                                  -1\n                                                                  -2\n                                                                  -3\n                                                                  2)\n                                                                 ((\"2\"\n                                                                   (grind)\n                                                                   ((\"2\"\n                                                                     (typepred\n                                                                      \"F!1(x!5)\")\n                                                                     ((\"2\"\n                                                                       (grind)\n                                                                       nil\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil)\n                                                              (\"2\"\n                                                               (hide\n                                                                -1\n                                                                -2\n                                                                -3\n                                                                2)\n                                                               ((\"2\"\n                                                                 (grind)\n                                                                 ((\"2\"\n                                                                   (typepred\n                                                                    \"F!1(x!5)\")\n                                                                   ((\"2\"\n                                                                     (grind)\n                                                                     nil\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"2\"\n                                               (hide -1 -2 -3 2)\n                                               ((\"2\"\n                                                 (grind :if-match nil)\n                                                 ((\"2\"\n                                                   (expand\n                                                    \"FunExtension\")\n                                                   ((\"2\"\n                                                     (expand\n                                                      \"EquivClass\")\n                                                     ((\"2\"\n                                                       (inst 1 \"x!2\")\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"3\"\n                                               (inst 1 \"x!1\")\n                                               ((\"3\"\n                                                 (apply-extensionality\n                                                  :hide?\n                                                  t)\n                                                 ((\"3\"\n                                                   (expand\n                                                    \"FunExtension\")\n                                                   ((\"3\"\n                                                     (expand\n                                                      \"EquivClass\")\n                                                     ((\"3\"\n                                                       (propax)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"2\" (inst 1 \"x!2\")\n                               ((\"2\"\n                                 (apply-extensionality :hide? t)\n                                 ((\"2\"\n                                   (expand \"FunExtension\")\n                                   ((\"2\"\n                                     (expand \"EquivClass\")\n                                     ((\"2\" (propax) nil nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"3\" (inst 1 \"x!2\")\n                               ((\"3\"\n                                 (apply-extensionality :hide? t)\n                                 ((\"3\"\n                                   (expand \"FunExtension\")\n                                   ((\"3\"\n                                     (expand \"EquivClass\")\n                                     ((\"3\" (propax) nil nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"4\" (inst 1 \"x!1\")\n                               ((\"4\"\n                                 (apply-extensionality :hide? t)\n                                 ((\"4\"\n                                   (expand \"EquivClass\")\n                                   ((\"4\" (propax) nil nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"5\" (inst 1 \"x!1\")\n                               ((\"5\"\n                                 (apply-extensionality :hide? t)\n                                 ((\"5\"\n                                   (expand \"EquivClass\")\n                                   ((\"5\" (propax) nil nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil)\n          (\"2\" (hide -1)\n           ((\"2\" (expand \"surjective?\")\n             ((\"2\" (skosimp)\n               ((\"2\"\n                 (inst 1\n                  \"{ f : [X -> Y] | FORALL (x: X): (y!1(x))(f(x)) }\")\n                 ((\"1\" (expand \"lift\")\n                   ((\"1\" (apply-extensionality :hide? t)\n                     ((\"1\" (expand \"quotient_map\")\n                       ((\"1\" (expand \"EquivClass\")\n                         ((\"1\" (apply-extensionality :hide? t)\n                           ((\"1\" (expand \"rep\")\n                             ((\"1\"\n                               (name-replace\n                                \"ch\"\n                                \"choose({f: [X -> Y] | FORALL (x: X): y!1(x)(f(x))})\")\n                               ((\"1\"\n                                 (typepred \"ch\")\n                                 ((\"1\"\n                                   (typepred \"F!1(x!1)\")\n                                   ((\"1\"\n                                     (inst -2 \"x!1\")\n                                     ((\"1\"\n                                       (typepred \"y!1(x!1)\")\n                                       ((\"1\"\n                                         (skosimp)\n                                         ((\"1\"\n                                           (expand \"EquivClass\")\n                                           ((\"1\"\n                                             (decompose-equality)\n                                             ((\"1\"\n                                               (inst-cp -1 \"x!2\")\n                                               ((\"1\"\n                                                 (inst -1 \"ch(x!1)\")\n                                                 ((\"1\"\n                                                   (replace -4)\n                                                   ((\"1\"\n                                                     (replace -2)\n                                                     ((\"1\"\n                                                       (hide -2 -4)\n                                                       ((\"1\"\n                                                         (iff)\n                                                         ((\"1\"\n                                                           (expand\n                                                            \"equivalence?\")\n                                                           ((\"1\"\n                                                             (flatten)\n                                                             ((\"1\"\n                                                               (hide\n                                                                -2)\n                                                               ((\"1\"\n                                                                 (expand\n                                                                  \"symmetric?\")\n                                                                 ((\"1\"\n                                                                   (expand\n                                                                    \"transitive?\")\n                                                                   ((\"1\"\n                                                                     (prop)\n                                                                     ((\"1\"\n                                                                       (inst\n                                                                        -4\n                                                                        \"x!3\"\n                                                                        \"ch(x!1)\"\n                                                                        \"x!2\")\n                                                                       ((\"1\"\n                                                                         (assert)\n                                                                         nil\n                                                                         nil))\n                                                                       nil)\n                                                                      (\"2\"\n                                                                       (inst\n                                                                        -3\n                                                                        \"x!3\"\n                                                                        \"ch(x!1)\")\n                                                                       ((\"2\"\n                                                                         (assert)\n                                                                         ((\"2\"\n                                                                           (hide\n                                                                            -2)\n                                                                           ((\"2\"\n                                                                             (inst\n                                                                              -3\n                                                                              \"ch(x!1)\"\n                                                                              \"x!3\"\n                                                                              \"x!2\")\n                                                                             ((\"2\"\n                                                                               (assert)\n                                                                               nil\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil)\n                                (\"2\"\n                                 (hide 2)\n                                 ((\"2\"\n                                   (grind :if-match nil)\n                                   ((\"2\"\n                                     (inst\n                                      -1\n                                      \"LAMBDA (x: X): choose(y!1(x))\")\n                                     ((\"1\"\n                                       (skosimp)\n                                       ((\"1\"\n                                         (typepred \"y!1(x!3)\")\n                                         ((\"1\"\n                                           (skosimp)\n                                           ((\"1\"\n                                             (expand \"EquivClass\")\n                                             ((\"1\"\n                                               (replace -1)\n                                               ((\"1\"\n                                                 (beta)\n                                                 ((\"1\"\n                                                   (name-replace\n                                                    \"ch\"\n                                                    \"choose({z: Y | F!1(x!3)(x!4, z)})\")\n                                                   ((\"1\"\n                                                     (typepred \"ch\")\n                                                     ((\"1\"\n                                                       (propax)\n                                                       nil\n                                                       nil))\n                                                     nil)\n                                                    (\"2\"\n                                                     (inst -1 \"x!4\")\n                                                     ((\"2\"\n                                                       (hide -1 2)\n                                                       ((\"2\"\n                                                         (typepred\n                                                          \"F!1(x!3)\")\n                                                         ((\"2\"\n                                                           (grind)\n                                                           nil\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil)\n                                      (\"2\"\n                                       (skosimp)\n                                       ((\"2\"\n                                         (typepred \"y!1(x!3)\")\n                                         ((\"2\"\n                                           (skosimp)\n                                           ((\"2\"\n                                             (expand \"EquivClass\")\n                                             ((\"2\"\n                                               (decompose-equality)\n                                               ((\"2\"\n                                                 (inst -1 \"x!4\")\n                                                 ((\"2\"\n                                                   (inst -2 \"x!4\")\n                                                   ((\"2\"\n                                                     (replace\n                                                      -1\n                                                      :hide?\n                                                      t)\n                                                     ((\"2\"\n                                                       (typepred\n                                                        \"F!1(x!3)\")\n                                                       ((\"2\"\n                                                         (grind)\n                                                         nil\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil)\n                            (\"2\" (skosimp)\n                             ((\"2\" (expand \"EquivClass\")\n                               ((\"2\"\n                                 (expand \"FunExtension\")\n                                 ((\"2\"\n                                   (inst\n                                    1\n                                    \"LAMBDA (x: X): choose(y!1(x))\")\n                                   ((\"1\"\n                                     (apply-extensionality :hide? t)\n                                     ((\"1\"\n                                       (iff)\n                                       ((\"1\"\n                                         (prop)\n                                         ((\"1\"\n                                           (skosimp)\n                                           ((\"1\"\n                                             (typepred \"y!1(x!3)\")\n                                             ((\"1\"\n                                               (skosimp)\n                                               ((\"1\"\n                                                 (expand \"EquivClass\")\n                                                 ((\"1\"\n                                                   (decompose-equality)\n                                                   ((\"1\"\n                                                     (name-replace\n                                                      \"ch\"\n                                                      \"choose(y!1(x!3))\")\n                                                     ((\"1\"\n                                                       (typepred \"ch\")\n                                                       ((\"1\"\n                                                         (inst\n                                                          -3\n                                                          \"x!3\")\n                                                         ((\"1\"\n                                                           (inst-cp\n                                                            -2\n                                                            \"ch\")\n                                                           ((\"1\"\n                                                             (replace\n                                                              -1)\n                                                             ((\"1\"\n                                                               (inst\n                                                                -2\n                                                                \"x!2(x!3)\")\n                                                               ((\"1\"\n                                                                 (replace\n                                                                  -4)\n                                                                 ((\"1\"\n                                                                   (hide\n                                                                    -1\n                                                                    -4)\n                                                                   ((\"1\"\n                                                                     (typepred\n                                                                      \"F!1(x!3)\")\n                                                                     ((\"1\"\n                                                                       (expand\n                                                                        \"equivalence?\")\n                                                                       ((\"1\"\n                                                                         (flatten)\n                                                                         ((\"1\"\n                                                                           (hide\n                                                                            -1)\n                                                                           ((\"1\"\n                                                                             (expand\n                                                                              \"symmetric?\")\n                                                                             ((\"1\"\n                                                                               (expand\n                                                                                \"transitive?\")\n                                                                               ((\"1\"\n                                                                                 (inst\n                                                                                  -1\n                                                                                  \"x!4\"\n                                                                                  \"ch\")\n                                                                                 ((\"1\"\n                                                                                   (assert)\n                                                                                   ((\"1\"\n                                                                                     (hide\n                                                                                      -4)\n                                                                                     ((\"1\"\n                                                                                       (inst\n                                                                                        -2\n                                                                                        \"ch\"\n                                                                                        \"x!4\"\n                                                                                        \"x!2(x!3)\")\n                                                                                       ((\"1\"\n                                                                                         (assert)\n                                                                                         nil\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil)\n                                          (\"2\"\n                                           (skosimp)\n                                           ((\"2\"\n                                             (inst -1 \"x!3\")\n                                             ((\"2\"\n                                               (typepred \"y!1(x!3)\")\n                                               ((\"2\"\n                                                 (skosimp)\n                                                 ((\"2\"\n                                                   (replace\n                                                    -1\n                                                    :hide?\n                                                    t)\n                                                   ((\"2\"\n                                                     (expand\n                                                      \"EquivClass\")\n                                                     ((\"2\"\n                                                       (name-replace\n                                                        \"ch\"\n                                                        \"choose({z: Y | F!1(x!3)(x!4, z)})\")\n                                                       ((\"1\"\n                                                         (typepred\n                                                          \"ch\")\n                                                         ((\"1\"\n                                                           (typepred\n                                                            \"F!1(x!3)\")\n                                                           ((\"1\"\n                                                             (expand\n                                                              \"equivalence?\")\n                                                             ((\"1\"\n                                                               (flatten)\n                                                               ((\"1\"\n                                                                 (hide\n                                                                  -1\n                                                                  -2)\n                                                                 ((\"1\"\n                                                                   (expand\n                                                                    \"transitive?\")\n                                                                   ((\"1\"\n                                                                     (inst\n                                                                      -1\n                                                                      \"x!4\"\n                                                                      \"ch\"\n                                                                      \"x!2(x!3)\")\n                                                                     ((\"1\"\n                                                                       (assert)\n                                                                       nil\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil)\n                                                        (\"2\"\n                                                         (hide -1 2)\n                                                         ((\"2\"\n                                                           (grind)\n                                                           ((\"2\"\n                                                             (typepred\n                                                              \"F!1(x!3)\")\n                                                             ((\"2\"\n                                                               (grind)\n                                                               nil\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil)\n                                      (\"2\"\n                                       (skosimp)\n                                       ((\"2\"\n                                         (grind :if-match nil)\n                                         ((\"2\"\n                                           (typepred \"y!1(x!2)\")\n                                           ((\"2\"\n                                             (skosimp)\n                                             ((\"2\"\n                                               (replace -1 :hide? t)\n                                               ((\"2\"\n                                                 (inst -1 \"x!3\")\n                                                 ((\"2\"\n                                                   (typepred\n                                                    \"F!1(x!2)\")\n                                                   ((\"2\"\n                                                     (grind)\n                                                     nil\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil)\n                                    (\"2\"\n                                     (skosimp)\n                                     ((\"2\"\n                                       (grind :if-match nil)\n                                       ((\"2\"\n                                         (typepred \"y!1(x!2)\")\n                                         ((\"2\"\n                                           (skosimp)\n                                           ((\"2\"\n                                             (replace -1 :hide? t)\n                                             ((\"2\"\n                                               (inst -1 \"x!3\")\n                                               ((\"2\"\n                                                 (typepred \"F!1(x!2)\")\n                                                 ((\"2\"\n                                                   (grind)\n                                                   nil\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil)\n                      (\"2\" (skosimp)\n                       ((\"2\" (inst 1 \"LAMBDA (x: X): choose(y!1(x))\")\n                         ((\"1\" (apply-extensionality :hide? t)\n                           ((\"1\" (iff)\n                             ((\"1\" (expand \"EquivClass\")\n                               ((\"1\"\n                                 (expand \"FunExtension\")\n                                 ((\"1\"\n                                   (prop)\n                                   ((\"1\"\n                                     (skosimp)\n                                     ((\"1\"\n                                       (name-replace\n                                        \"ch\"\n                                        \"choose(y!1(x!3))\")\n                                       ((\"1\"\n                                         (typepred \"ch\")\n                                         ((\"1\"\n                                           (inst -2 \"x!3\")\n                                           ((\"1\"\n                                             (typepred \"y!1(x!3)\")\n                                             ((\"1\"\n                                               (skosimp)\n                                               ((\"1\"\n                                                 (replace -1 :hide? t)\n                                                 ((\"1\"\n                                                   (expand\n                                                    \"EquivClass\")\n                                                   ((\"1\"\n                                                     (typepred\n                                                      \"F!1(x!3)\")\n                                                     ((\"1\"\n                                                       (grind\n                                                        :if-match\n                                                        nil)\n                                                       ((\"1\"\n                                                         (hide -1)\n                                                         ((\"1\"\n                                                           (inst\n                                                            -1\n                                                            \"x!4\"\n                                                            \"ch\")\n                                                           ((\"1\"\n                                                             (assert)\n                                                             ((\"1\"\n                                                               (hide\n                                                                -3)\n                                                               ((\"1\"\n                                                                 (inst\n                                                                  -2\n                                                                  \"ch\"\n                                                                  \"x!4\"\n                                                                  \"x!2(x!3)\")\n                                                                 ((\"1\"\n                                                                   (assert)\n                                                                   nil\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil)\n                                    (\"2\"\n                                     (skosimp)\n                                     ((\"2\"\n                                       (typepred \"y!1(x!3)\")\n                                       ((\"2\"\n                                         (skosimp)\n                                         ((\"2\"\n                                           (inst -2 \"x!3\")\n                                           ((\"2\"\n                                             (replace -1 :hide? t)\n                                             ((\"2\"\n                                               (expand \"EquivClass\")\n                                               ((\"2\"\n                                                 (name-replace\n                                                  \"ch\"\n                                                  \"choose({z: Y | F!1(x!3)(x!4, z)})\")\n                                                 ((\"1\"\n                                                   (typepred \"ch\")\n                                                   ((\"1\"\n                                                     (typepred\n                                                      \"F!1(x!3)\")\n                                                     ((\"1\"\n                                                       (grind\n                                                        :if-match\n                                                        nil)\n                                                       ((\"1\"\n                                                         (hide -1 -2)\n                                                         ((\"1\"\n                                                           (inst\n                                                            -1\n                                                            \"x!4\"\n                                                            \"ch\"\n                                                            \"x!2(x!3)\")\n                                                           ((\"1\"\n                                                             (assert)\n                                                             nil\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil)\n                                                  (\"2\"\n                                                   (hide -1 2)\n                                                   ((\"2\"\n                                                     (grind)\n                                                     ((\"2\"\n                                                       (typepred\n                                                        \"F!1(x!3)\")\n                                                       ((\"2\"\n                                                         (grind)\n                                                         nil\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil)\n                            (\"2\" (skosimp)\n                             ((\"2\" (grind)\n                               ((\"2\"\n                                 (typepred \"y!1(x!2)\")\n                                 ((\"2\"\n                                   (skosimp)\n                                   ((\"2\"\n                                     (replace -1 :hide? t)\n                                     ((\"2\"\n                                       (inst -1 \"x!3\")\n                                       ((\"2\"\n                                         (grind)\n                                         ((\"2\"\n                                           (typepred \"F!1(x!2)\")\n                                           ((\"2\" (grind) nil nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil)\n                          (\"2\" (skosimp)\n                           ((\"2\" (grind)\n                             ((\"2\" (typepred \"y!1(x!2)\")\n                               ((\"2\"\n                                 (skosimp)\n                                 ((\"2\"\n                                   (replace -1 :hide? t)\n                                   ((\"2\"\n                                     (inst -1 \"x!3\")\n                                     ((\"2\"\n                                       (grind)\n                                       ((\"2\"\n                                         (typepred \"F!1(x!2)\")\n                                         ((\"2\" (grind) nil nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil)\n                  (\"2\" (inst 1 \"LAMBDA (x: X): choose(y!1(x))\")\n                   ((\"1\" (expand \"EquivClass\")\n                     ((\"1\" (expand \"FunExtension\")\n                       ((\"1\" (apply-extensionality :hide? t)\n                         ((\"1\" (iff)\n                           ((\"1\" (prop)\n                             ((\"1\" (skosimp)\n                               ((\"1\"\n                                 (name-replace \"ch\" \"choose(y!1(x!2))\")\n                                 ((\"1\"\n                                   (typepred \"ch\")\n                                   ((\"1\"\n                                     (typepred \"y!1(x!2)\")\n                                     ((\"1\"\n                                       (skosimp)\n                                       ((\"1\"\n                                         (inst -3 \"x!2\")\n                                         ((\"1\"\n                                           (replace -1 :hide? t)\n                                           ((\"1\"\n                                             (expand \"EquivClass\")\n                                             ((\"1\"\n                                               (typepred \"F!1(x!2)\")\n                                               ((\"1\"\n                                                 (grind :if-match nil)\n                                                 ((\"1\"\n                                                   (hide -1)\n                                                   ((\"1\"\n                                                     (inst\n                                                      -1\n                                                      \"x!3\"\n                                                      \"ch\")\n                                                     ((\"1\"\n                                                       (assert)\n                                                       ((\"1\"\n                                                         (hide -3)\n                                                         ((\"1\"\n                                                           (inst\n                                                            -2\n                                                            \"ch\"\n                                                            \"x!3\"\n                                                            \"x!1(x!2)\")\n                                                           ((\"1\"\n                                                             (assert)\n                                                             nil\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"2\" (skosimp)\n                               ((\"2\"\n                                 (typepred \"y!1(x!2)\")\n                                 ((\"2\"\n                                   (skosimp)\n                                   ((\"2\"\n                                     (inst -2 \"x!2\")\n                                     ((\"2\"\n                                       (name-replace\n                                        \"ch\"\n                                        \"choose(y!1(x!2))\")\n                                       ((\"2\"\n                                         (typepred \"ch\")\n                                         ((\"2\"\n                                           (replace -2 :hide? t)\n                                           ((\"2\"\n                                             (expand \"EquivClass\")\n                                             ((\"2\"\n                                               (typepred \"F!1(x!2)\")\n                                               ((\"2\"\n                                                 (grind :if-match nil)\n                                                 ((\"2\"\n                                                   (hide -1 -2)\n                                                   ((\"2\"\n                                                     (inst\n                                                      -1\n                                                      \"x!3\"\n                                                      \"ch\"\n                                                      \"x!1(x!2)\")\n                                                     ((\"2\"\n                                                       (assert)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil)\n                          (\"2\" (skosimp)\n                           ((\"2\" (grind)\n                             ((\"2\" (typepred \"y!1(x!1)\")\n                               ((\"2\"\n                                 (skosimp)\n                                 ((\"2\"\n                                   (replace -1 :hide? t)\n                                   ((\"2\"\n                                     (inst -1 \"x!2\")\n                                     ((\"2\"\n                                       (grind)\n                                       ((\"2\"\n                                         (typepred \"F!1(x!1)\")\n                                         ((\"2\" (grind) nil nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil)\n                    (\"2\" (skosimp)\n                     ((\"2\" (grind)\n                       ((\"2\" (typepred \"y!1(x!1)\")\n                         ((\"2\" (skosimp)\n                           ((\"2\" (replace -1 :hide? t)\n                             ((\"2\" (inst -1 \"x!2\")\n                               ((\"2\"\n                                 (grind)\n                                 ((\"2\"\n                                   (typepred \"F!1(x!1)\")\n                                   ((\"2\" (grind) nil nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}}]},"type-hash":{"tag":"typelist","entries":{"df0f93f7e3953e29f93bf43df3ddcaea6ed1016f":{"tag":"tupletype","types":[{"typehash":"38aee44037b68392158ca17338c55d0bd2b108b4"},{"typehash":"fc66044082d86a5e0644b6284519a3374004f516"}]},"256648944cea6d7eaa1126af445348f2f0cc1d76":{"tag":"tupletype","types":[{"typehash":"c6a493862ac73f39166c27bc663bcdcf28a9bfab"},{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}]},"629c99cd8edfda95b8170fdbebd60bbd69a67cad":{"tag":"tupletype","types":[{"typehash":"baff6acb4286f2167c9cf0deafff04e5edd89b61"},{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}]},"a06a54c5ad0c9f083e3185c459452d3d460fa820":{"tag":"tupletype","types":[{"typehash":"305f59676b1278730a113c6a230cf5b480db4a75"},{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}]},"4f4d0391bb6d9b3cf3166ae6bcda16140563c534":{"tag":"functiontype","domain":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},"range":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},"9397877495a9c80f19477930f577c6784334a489":{"tag":"subtype","supertype":{"typehash":"b79928b2d64f0242dc0370cc0a5b51460c412489"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"R","type":{"typehash":"b79928b2d64f0242dc0370cc0a5b51460c412489"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}],"type":{"typehash":"f00f9add6eb3c8dc3fb329c71708ea16baeb0ca1"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"b79928b2d64f0242dc0370cc0a5b51460c412489"}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}}}}},"019479e12cfbb7eba41b105ff5f9103e9ee90e13":{"tag":"functiontype","domain":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"00dee1632a3443eb9e2360a30d2b23f941718f9f":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"beade323ba2c1652b6a4c5372e65e0fe715b8778"}},"3d0c985f0015474c1ec4859cb8432713bef51f43":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"5dbb72c683d4ad2f3eda4e8e9f9bc457610d79a1"}},"0d8f15b0ea2c72540ca546a545e581a1e585c928":{"tag":"functiontype","domain":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"8af8536b8ebcfeee0467a0dfe6b3dde07db4f193":{"tag":"tupletype","types":[{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}]},"fb59b3f0a8f92b92aee6922e40acee75bad6e9d7":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"66d24b467affcaf23fa4a4a97a127e58ed9e828b"}},"041e93bede3912933ecd70bd08a05ec7c3eec67c":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"420f7d238450a74b33a749c18666eebbbfd016cf"}},"6e71b5ba3bd14ce278e4019a3fcdee7a15a61166":{"tag":"subtype","supertype":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"type":{"typehash":"f4daea881af6cae9c01485fd353433a9b918f2da"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"fdfaccc920a72623f26dddb6c1d8351b278b3b76"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}]}],"parameters":[{"tag":"apply","operator":{"tag":"constant","id":"RelExtension","theory":"QuotientDistributive","type":{"typehash":"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}}]}]},"1a066631052110e5861d0074c028741eede00739":{"tag":"tupletype","types":[{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"},{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}]},"81ea25312ff84a0e8f08b1cd766cef23d6f8ebd3":{"tag":"subtype","supertype":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}}],"type":{"typehash":"14ed6b5b24f9500098f6b28926604443e0075918"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"type":{"typehash":"4ae36c830de470f5c4a4be01a1112950f7b8ad9e"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"}},"argument":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}]}],"parameters":[{"tag":"apply","operator":{"tag":"constant","id":"FunExtension","theory":"QuotientDistributive","type":{"typehash":"c0479ea24ce1e92932ae08b4bcc6be019d48ce42"}},"argument":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}}}]}]},"ace4005d6466ed56b64eaf07d88e0dc3348cb011":{"tag":"functiontype","domain":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"range":{"typehash":"095577781a8770311f88ccbdc9883ed56f51413a"}},"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a":{"tag":"subtype","supertype":{"typehash":"1daec538eb5b9979929e596337b4642410dbf6cc"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d40acb231a24517763cfe5f687e372043dd9d397"}},"print-type":[{"tag":"typename","id":"equivalence","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}]},"2654a529e5a5a0247077849fea24cc621a974aa2":{"tag":"functiontype","domain":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"range":{"typehash":"4a84e920b477891aac7e78d674f0ada04bf2a1ef"}},"725b6be401322e6e5ebaa47c2f4b06da9f2a335d":{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}],"parameters":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]}]},"578c5d7e5c05d6f449d682ba585360ca836ffab4":{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}],"parameters":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]}]},"38aee44037b68392158ca17338c55d0bd2b108b4":{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}],"parameters":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]}]},"c6a493862ac73f39166c27bc663bcdcf28a9bfab":{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}],"parameters":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]}]},"baff6acb4286f2167c9cf0deafff04e5edd89b61":{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}],"parameters":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]}]},"305f59676b1278730a113c6a230cf5b480db4a75":{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}],"parameters":[{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}]}]},"a93416dfc4f52f72d2a423d3e46e8b7ea9ba7c5d":{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"e633b765e891945f4f8e86db307b1fc08ad54da1"}},"42134f09c0dd8f4e1b1d3643fb7603cbe3bf61f3":{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"df0f93f7e3953e29f93bf43df3ddcaea6ed1016f"}},"3d7a7b65f17e9fdcd78f02ad450f78e93cc93f11":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"S","type":{"typehash":"c66f9d6820f608ba76e8ab200de1eea25e68c06a"}},"range":[{"tag":"functiontype","domain":[{"tag":"subtype","supertype":[{"tag":"functiontype","domain":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},"range":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}}],"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}}],"type":[{"tag":"functiontype","domain":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"range":[{"tag":"functiontype","domain":[{"tag":"functiontype","domain":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},"range":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}}],"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}]}]},"argument":{"tag":"variable","id":"S","type":{"typehash":"c66f9d6820f608ba76e8ab200de1eea25e68c06a"}}}}],"range":[{"tag":"functiontype","domain":[{"tag":"subtype","supertype":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}}],"type":{"typehash":"14ed6b5b24f9500098f6b28926604443e0075918"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"type":{"typehash":"4ae36c830de470f5c4a4be01a1112950f7b8ad9e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"c66f9d6820f608ba76e8ab200de1eea25e68c06a"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}}]}}}}}],"range":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}}]}]},"e2eca3f4c8b31ce722b09c259ea5bb409adbd3d6":{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"629c99cd8edfda95b8170fdbebd60bbd69a67cad"}},"d9abd8db6f2a975dcc58ac431570aff24037a990":{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"a06a54c5ad0c9f083e3185c459452d3d460fa820"}},"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e":{"tag":"functiontype","domain":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},"range":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}},"9a606c0b91c63c3409dbecc971df0018d21dd2bd":{"tag":"tupletype","types":[{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}]},"0605842a3c5eae9112d4190e1f14db5aae357fe6":{"tag":"functiontype","domain":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"},"range":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},"4ae36c830de470f5c4a4be01a1112950f7b8ad9e":{"tag":"functiontype","domain":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"range":{"typehash":"adbb4c4a7cd5c61a262e6e38c6728c8e322ef372"}},"215a2769c852127e1b75074526f082e9b43178bb":{"tag":"tupletype","types":[{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"},{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}]},"03a70117e082a2f37ff3ac633e8e49f4042d2f12":{"tag":"functiontype","domain":{"typehash":"8af8536b8ebcfeee0467a0dfe6b3dde07db4f193"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"d96c349cf648a2bee4d1038efd3175c75b716c7f":{"tag":"tupletype","types":[{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"},{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}]},"c032adc1ff629c9b66f22749ad667e6beadf144b":{"tag":"typename","id":"X","theory":"QuotientDistributive","actuals":[]},"c0479ea24ce1e92932ae08b4bcc6be019d48ce42":{"tag":"functiontype","domain":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"},"range":{"typehash":"0ca7376dc21f638922fd1bb6b2f530eb85b913ba"}},"0dc8de3604814fd6705e8e041006ff969b772b69":{"tag":"typename","id":"boolean","theory":"booleans","actuals":[],"print-type":[{"tag":"typename","id":"bool","theory":"booleans","actuals":[]}]},"fdfaccc920a72623f26dddb6c1d8351b278b3b76":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"f3fbdfdd52c7f82ca6c92d9800ae30fb56bc068f"}},"13a870db48b9cb25fc4db1f6c81d9d2a2ecaa4a4":{"tag":"tupletype","types":[{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"},{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}]},"aae9ca8ff1aab7f816ee9c85b0a81589a4aefb70":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}},"range":[{"tag":"functiontype","domain":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},"range":[{"tag":"subtype","supertype":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}}],"type":{"typehash":"d82184a6771fa01c317ea3b0e95670ea29903a14"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"56ae6875addced7df909f69526535d4f0292359e"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}]}}}}}]}]},"09d3b7f436ed048181effd0533729961755a21de":{"tag":"functiontype","domain":{"typehash":"d3788b6a8d6c0a2ffb135b7f9ba24124ea1b48b9"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"},"print-type":[{"tag":"typename","id":"PRED","theory":"defined_types","actuals":[{"tag":"type-actual","type":{"typehash":"d3788b6a8d6c0a2ffb135b7f9ba24124ea1b48b9"}}]}]},"0d93d95028b7710a470998e0bd36ed3c160824cb":{"tag":"tupletype","types":[{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}]},"9f42a22a0d8123caf888582c6a5e5f2dfcdd54d8":{"tag":"tupletype","types":[{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}]},"70e9712ba7630be27b500e35feab86dbb5fbf595":{"tag":"functiontype","domain":{"typehash":"1355d64bd0279245640a6185097ad3c737c92f56"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"a863b77393347c920cda6cdd7ddef4c3c7145489":{"tag":"functiontype","domain":{"typehash":"2a29b6812f15c96dec12ad637c6879da23f2230d"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"d97ef2213b781012131e58b62592257034f5f21a":{"tag":"functiontype","domain":{"typehash":"1daec538eb5b9979929e596337b4642410dbf6cc"},"range":{"typehash":"0605842a3c5eae9112d4190e1f14db5aae357fe6"}},"beade323ba2c1652b6a4c5372e65e0fe715b8778":{"tag":"functiontype","domain":{"typehash":"a93416dfc4f52f72d2a423d3e46e8b7ea9ba7c5d"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"5dbb72c683d4ad2f3eda4e8e9f9bc457610d79a1":{"tag":"functiontype","domain":{"typehash":"42134f09c0dd8f4e1b1d3643fb7603cbe3bf61f3"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"f9dfc0c5daed68d735ec591f7efd16ec22075ef8":{"tag":"functiontype","domain":{"typehash":"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"66d24b467affcaf23fa4a4a97a127e58ed9e828b":{"tag":"functiontype","domain":{"typehash":"e2eca3f4c8b31ce722b09c259ea5bb409adbd3d6"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"420f7d238450a74b33a749c18666eebbbfd016cf":{"tag":"functiontype","domain":{"typehash":"d9abd8db6f2a975dcc58ac431570aff24037a990"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"d40acb231a24517763cfe5f687e372043dd9d397":{"tag":"functiontype","domain":{"typehash":"1daec538eb5b9979929e596337b4642410dbf6cc"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"f40a7a5920849026dad2cab55f156ab85bc93052":{"tag":"functiontype","domain":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"186969cc2f96cb6a75d553d4dc8627024d13f762":{"tag":"functiontype","domain":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"},"range":{"typehash":"b79928b2d64f0242dc0370cc0a5b51460c412489"}},"0f26080b04a806c47b887f2da3afc80e6c8dfed7":{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"0ca7376dc21f638922fd1bb6b2f530eb85b913ba":{"tag":"subtype","supertype":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"type":{"typehash":"c39e7bc55f66d84e38ab77cde70caeac56fcefe7"}},"print-type":[{"tag":"typename","id":"equivalence","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}]}]},"ee7fb443eef9b9a7e0af39260eb59a4b92842926":{"tag":"functiontype","domain":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},"range":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},"b79928b2d64f0242dc0370cc0a5b51460c412489":{"tag":"subtype","supertype":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"e9fdfa9b613839e9dbc0675bdb8f101d2e650c61"}},"print-type":[{"tag":"typename","id":"equivalence","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}]}]},"b5fadb54cbb958b4b34b7bbba489fe8bcecd72d1":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"S","type":{"typehash":"9397877495a9c80f19477930f577c6784334a489"}},"range":[{"tag":"functiontype","domain":[{"tag":"subtype","supertype":[{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}}],"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}}],"type":[{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":[{"tag":"functiontype","domain":[{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}}],"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}]}]},"argument":{"tag":"variable","id":"S","type":{"typehash":"9397877495a9c80f19477930f577c6784334a489"}}}}],"range":[{"tag":"functiontype","domain":[{"tag":"subtype","supertype":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"type":{"typehash":"f4daea881af6cae9c01485fd353433a9b918f2da"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"fdfaccc920a72623f26dddb6c1d8351b278b3b76"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"9397877495a9c80f19477930f577c6784334a489"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}}]}}}}}],"range":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}}]}]},"9054b47b5abfe74e9df972d9db5b79efa196b644":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},"range":[{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x_1","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}},"argument":{"tag":"variable","id":"x_1","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}}}]},"369e2a90abdbfb6d4b845c8f2573c35c80a53d30":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},"range":[{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x_1","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}},"argument":{"tag":"variable","id":"x_1","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}}}]},"e5eb8c1d298a9172e9dab40325f6b8e069e80c57":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}},"range":[{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x_1","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"F","type":{"typehash":"ee7fb443eef9b9a7e0af39260eb59a4b92842926"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}}},"argument":{"tag":"variable","id":"x_1","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}}}]},"d65cd12ec9d50765fbd4beaddf5e9175dd7b94bd":{"tag":"functiontype","domain":{"typehash":"1a066631052110e5861d0074c028741eede00739"},"range":{"typehash":"b79928b2d64f0242dc0370cc0a5b51460c412489"}},"14ed6b5b24f9500098f6b28926604443e0075918":{"tag":"functiontype","domain":{"typehash":"215a2769c852127e1b75074526f082e9b43178bb"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"095577781a8770311f88ccbdc9883ed56f51413a":{"tag":"functiontype","domain":{"typehash":"5c0b90eeb1c8da0ae62cf96abd9243add9148968"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"f81c78fc0cc455c06aaf40307dc558aeb83a1213":{"tag":"subtype","supertype":{"typehash":"09d3b7f436ed048181effd0533729961755a21de"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}],"type":{"typehash":"6f08281c3f1b5f7433eb35425aacdc42c3b6b9d8"}},"print-type":[{"tag":"typename","id":"equivalence","theory":"relations","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}]},"4a84e920b477891aac7e78d674f0ada04bf2a1ef":{"tag":"functiontype","domain":{"typehash":"bb87d18832e9afe8e6cc101049e7f95811a49dde"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"cabf4c928e784b1fef93694308e6334a3be60980":{"tag":"functiontype","domain":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"range":{"typehash":"019479e12cfbb7eba41b105ff5f9103e9ee90e13"}},"56ae6875addced7df909f69526535d4f0292359e":{"tag":"functiontype","domain":{"typehash":"09d3b7f436ed048181effd0533729961755a21de"},"range":{"typehash":"4f4d0391bb6d9b3cf3166ae6bcda16140563c534"}},"e23fc786c55fb3353790185f6f6e24bf0d2d7eba":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"S","type":{"typehash":"9397877495a9c80f19477930f577c6784334a489"}},"range":[{"tag":"functiontype","domain":[{"tag":"subtype","supertype":[{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}}],"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}},{"tag":"type-actual","type":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}}],"type":[{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":[{"tag":"functiontype","domain":[{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}}],"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}]}]},"argument":{"tag":"variable","id":"S","type":{"typehash":"9397877495a9c80f19477930f577c6784334a489"}}}}],"range":[{"tag":"functiontype","domain":[{"tag":"subtype","supertype":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"type":{"typehash":"f4daea881af6cae9c01485fd353433a9b918f2da"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"fdfaccc920a72623f26dddb6c1d8351b278b3b76"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"9397877495a9c80f19477930f577c6784334a489"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}}]}}}}}],"range":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}}]}]},"d82184a6771fa01c317ea3b0e95670ea29903a14":{"tag":"functiontype","domain":{"typehash":"fd71ddf99e55a9eb4a7ea3f22ce5960774d419be"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"1355d64bd0279245640a6185097ad3c737c92f56":{"tag":"functiontype","domain":{"typehash":"81ea25312ff84a0e8f08b1cd766cef23d6f8ebd3"},"range":{"typehash":"9054b47b5abfe74e9df972d9db5b79efa196b644"}},"f4daea881af6cae9c01485fd353433a9b918f2da":{"tag":"functiontype","domain":{"typehash":"d96c349cf648a2bee4d1038efd3175c75b716c7f"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"d3788b6a8d6c0a2ffb135b7f9ba24124ea1b48b9":{"tag":"tupletype","types":[{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}]},"2a29b6812f15c96dec12ad637c6879da23f2230d":{"tag":"functiontype","domain":{"typehash":"dd42ec174cc882f3024f49a2080b3732bdead651"},"range":{"typehash":"256648944cea6d7eaa1126af445348f2f0cc1d76"}},"adbb4c4a7cd5c61a262e6e38c6728c8e322ef372":{"tag":"functiontype","domain":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},"range":{"typehash":"f40a7a5920849026dad2cab55f156ab85bc93052"}},"6063f09b275056a79778a2a88374ef5812c7f965":{"tag":"functiontype","domain":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"},"print-type":[{"tag":"typename","id":"set","theory":"sets","actuals":[{"tag":"type-actual","type":{"typehash":"c032adc1ff629c9b66f22749ad667e6beadf144b"}}]}]},"f00f9add6eb3c8dc3fb329c71708ea16baeb0ca1":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"0d8f15b0ea2c72540ca546a545e581a1e585c928"}},"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1":{"tag":"tupletype","types":[{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"},{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}]},"f3fbdfdd52c7f82ca6c92d9800ae30fb56bc068f":{"tag":"functiontype","domain":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"},"range":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}},"1daec538eb5b9979929e596337b4642410dbf6cc":{"tag":"functiontype","domain":{"typehash":"13a870db48b9cb25fc4db1f6c81d9d2a2ecaa4a4"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"5c0b90eeb1c8da0ae62cf96abd9243add9148968":{"tag":"functiontype","domain":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},"range":{"typehash":"369e2a90abdbfb6d4b845c8f2573c35c80a53d30"}},"bb87d18832e9afe8e6cc101049e7f95811a49dde":{"tag":"functiontype","domain":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"},"range":{"typehash":"e5eb8c1d298a9172e9dab40325f6b8e069e80c57"}},"fd71ddf99e55a9eb4a7ea3f22ce5960774d419be":{"tag":"tupletype","types":[{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"},{"typehash":"6063f09b275056a79778a2a88374ef5812c7f965"}]},"6a7b157d2e36678e407c91c5d2ba12c7523c4f48":{"tag":"functiontype","domain":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"},"print-type":[{"tag":"typename","id":"set","theory":"sets","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}]},"496a06d96c07aae51fb3e066c7e5686f46b7d3cf":{"tag":"dependent-functiontype","domain":{"tag":"dep-binding","id":"S","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}},"range":[{"tag":"functiontype","domain":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"},"range":[{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}}}]}]},"c39e7bc55f66d84e38ab77cde70caeac56fcefe7":{"tag":"functiontype","domain":{"typehash":"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"fa320f029ae38746679dc5d8b182845dfe16b02c":{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}],"parameters":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}]},"a2da1b6e13988c80f0e5807fef8b58b347c596eb":{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}],"parameters":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}]},"fc66044082d86a5e0644b6284519a3374004f516":{"tag":"subtype","supertype":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}}],"type":{"typehash":"03a70117e082a2f37ff3ac633e8e49f4042d2f12"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"6a7b157d2e36678e407c91c5d2ba12c7523c4f48"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}],"type":{"typehash":"d97ef2213b781012131e58b62592257034f5f21a"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"23eb4d3f4155395a74e9d534f97ff4c1908f5aac"}}]}],"parameters":[{"tag":"variable","id":"R","type":{"typehash":"65e6e9cd6be0d04709b9b85a4feeeff265a3f17a"}}]}]},"23eb4d3f4155395a74e9d534f97ff4c1908f5aac":{"tag":"typename","id":"Y","theory":"QuotientDistributive","actuals":[]},"6f08281c3f1b5f7433eb35425aacdc42c3b6b9d8":{"tag":"functiontype","domain":{"typehash":"09d3b7f436ed048181effd0533729961755a21de"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"35d8f90fcade6d3620097a8b6ffb878d33515c5f":{"tag":"functiontype","domain":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"},"range":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"}},"138e7fe2f722ee4edd1ec5240eb7cec74fb983a5":{"tag":"functiontype","domain":{"typehash":"0d93d95028b7710a470998e0bd36ed3c160824cb"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"},"print-type":[{"tag":"typename","id":"PRED","theory":"defined_types","actuals":[{"tag":"type-actual","type":{"typehash":"0d93d95028b7710a470998e0bd36ed3c160824cb"}}]}]},"e9fdfa9b613839e9dbc0675bdb8f101d2e650c61":{"tag":"functiontype","domain":{"typehash":"3714815b21854cd45b32620f9cb05dfef141af50"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"3714815b21854cd45b32620f9cb05dfef141af50":{"tag":"functiontype","domain":{"typehash":"9f42a22a0d8123caf888582c6a5e5f2dfcdd54d8"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"},"print-type":[{"tag":"typename","id":"set","theory":"sets","actuals":[{"tag":"type-actual","type":{"typehash":"9f42a22a0d8123caf888582c6a5e5f2dfcdd54d8"}}]}]},"5a6d1a3b62ce7ef9472c31916735a1654a6370db":{"tag":"functiontype","domain":{"typehash":"6e71b5ba3bd14ce278e4019a3fcdee7a15a61166"},"range":{"typehash":"c81cd8fc0630aef36674a3ee596a522c7bdbed9a"}},"dd42ec174cc882f3024f49a2080b3732bdead651":{"tag":"subtype","supertype":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}}],"type":{"typehash":"f4daea881af6cae9c01485fd353433a9b918f2da"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"P","type":{"typehash":"0f26080b04a806c47b887f2da3afc80e6c8dfed7"}},{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"EquivClass","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}],"type":{"typehash":"fdfaccc920a72623f26dddb6c1d8351b278b3b76"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}},"argument":{"tag":"variable","id":"x","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}}]}}}},"print-type":[{"tag":"type-application","type":[{"tag":"typename","id":"Quotient","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"9a606c0b91c63c3409dbecc971df0018d21dd2bd"}}]}],"parameters":[{"tag":"apply","operator":{"tag":"constant","id":"EqualityExtension","theory":"QuotientDistributive","type":{"typehash":"35d8f90fcade6d3620097a8b6ffb878d33515c5f"}},"argument":{"tag":"variable","id":"S","type":{"typehash":"f81c78fc0cc455c06aaf40307dc558aeb83a1213"}}}]}]},"d4e3b3fb04a998cf75e6fbde3fd86bbc2a83ae4e":{"tag":"functiontype","domain":{"typehash":"5a6d1a3b62ce7ef9472c31916735a1654a6370db"},"range":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}},"c66f9d6820f608ba76e8ab200de1eea25e68c06a":{"tag":"subtype","supertype":{"typehash":"0ca7376dc21f638922fd1bb6b2f530eb85b913ba"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"R","type":{"typehash":"0ca7376dc21f638922fd1bb6b2f530eb85b913ba"}}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}},{"tag":"type-actual","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}],"type":{"typehash":"cabf4c928e784b1fef93694308e6334a3be60980"}},"argument":{"tag":"variable","id":"R","type":{"typehash":"0ca7376dc21f638922fd1bb6b2f530eb85b913ba"}}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"d3a1c20d9d2001196a090fd992cb6c2a4f3d378e"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"0dc8de3604814fd6705e8e041006ff969b772b69"}}}}}},"c81cd8fc0630aef36674a3ee596a522c7bdbed9a":{"tag":"tupletype","types":[{"typehash":"725b6be401322e6e5ebaa47c2f4b06da9f2a335d"},{"typehash":"fa320f029ae38746679dc5d8b182845dfe16b02c"}]},"e633b765e891945f4f8e86db307b1fc08ad54da1":{"tag":"tupletype","types":[{"typehash":"578c5d7e5c05d6f449d682ba585360ca836ffab4"},{"typehash":"a2da1b6e13988c80f0e5807fef8b58b347c596eb"}]}}}}