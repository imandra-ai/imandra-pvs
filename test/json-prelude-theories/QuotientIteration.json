{"tag":"module-with-hash","module":{"tag":"theory","id":"QuotientIteration","formals":[{"tag":"formal-type-decl","id":"X","theory":"QuotientIteration","place":[6571,22,6571,26]}],"declarations":[{"tag":"var-decl","id":"S","declared-type":{"typehash":"2203044222"},"type":{"typehash":"2264696478"},"place":[6581,2,6581,24]},{"tag":"var-decl","id":"x","declared-type":{"typehash":"3192139499"},"type":{"typehash":"3192139499"},"place":[6582,2,6582,14]},{"tag":"var-decl","id":"y","declared-type":{"typehash":"3192139499"},"type":{"typehash":"3192139499"},"place":[6582,5,6582,14]},{"tag":"formula-decl","id":"action_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"},"place":[6584,9,6584,10]},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6584,12,6584,40]},{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6584,42,6584,43]},{"tag":"variable","id":"y","type":{"typehash":"3192139499"},"place":[6584,45,6584,46]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x_1","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"action_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"},"place":[6584,9,6584,10]},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6584,12,6584,40]},{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6584,42,6584,43]},{"tag":"variable","id":"y","type":{"typehash":"3192139499"},"place":[6584,45,6584,46]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]}},"proof":{"tag":"proof-info","script":"(\"\" (subtype-tcc) nil nil)","status":"proved"}},{"tag":"const-decl","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"const-def":{"tag":"apply","operator":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6585,4,6585,5]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6585,4,6585,41]},"place":[6584,2,6585,41]},{"tag":"formula-decl","id":"action_equivalence_is_equivalence","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"},"place":[6588,11,6588,12]},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6588,14,6588,42]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6581,22,6581,23]}],"type":{"typehash":"3199177740"},"place":[469,23,469,35]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"place":[6588,4,6588,10]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"},"place":[6588,11,6588,12]}},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6588,14,6588,42]},"place":[6588,4,6588,10]}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (typepred \"S!1\" \"R!1\")\n   ((\"\" (expand \"equivalence?\")\n     ((\"\" (flatten)\n       ((\"\" (expand \"reflexive?\")\n         ((\"\" (expand \"symmetric?\")\n           ((\"\" (expand \"transitive?\")\n             ((\"\" (expand \"action\")\n               ((\"\" (prop)\n                 ((\"1\" (skosimp*) ((\"1\" (inst? -4) nil nil)) nil)\n                  (\"2\" (skosimp*)\n                   ((\"2\"\n                     (inst -6 \"EquivClass(S!1)(x!1)\"\n                      \"EquivClass(S!1)(y!1)\")\n                     ((\"2\" (assert) nil nil)) nil))\n                   nil)\n                  (\"3\" (skosimp*)\n                   ((\"3\"\n                     (inst -8 \"EquivClass(S!1)(x!1)\"\n                      \"EquivClass(S!1)(y!1)\" \"EquivClass(S!1)(z!1)\")\n                     ((\"3\" (assert) nil nil)) nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"application-judgement","id":"action_equivalence_is_equivalence","declared-type":[{"typehash":"2203044222"}],"type":[{"typehash":"2264696478"}],"name":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"place":[6588,4,6588,10]},"formals":[[{"tag":"variable","id":"S","type":{"typehash":"2264696478"},"place":[6588,11,6588,12]}],[{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6588,14,6588,42]}]],"judgement-type":[{"typehash":"2379851802"}],"place":[6587,2,6588,67]},{"tag":"formula-decl","id":"QuotientAction_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,20,6594,21]},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"4272740387"},"place":[6481,12,6481,33]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6481,12,6481,36]},"argument":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6595,28,6595,29]}],"type":{"typehash":"3191545724"},"place":[6595,15,6595,30]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"place":[6595,31,6595,37]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6595,31,6595,40]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]},"place":[6595,31,6595,43]},"place":[6595,15,6595,44]}}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil)\n ((\"\" (apply-extensionality :hide? t)\n   ((\"\" (lemma \"PreservesEq_quotient_map[X, X]\")\n     ((\"\" (inst?)\n       ((\"\" (expand \"PreservesEq\")\n         ((\"\" (expand \"subset?\")\n           ((\"\" (expand \"member\")\n             ((\"\" (rewrite \"restrict_full[[X, X], bool]\")\n               ((\"\" (inst?) ((\"\" (assert) nil nil)) nil)) nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"2614391051","place":[6478,49,6478,53]}],"type":{"typehash":"4016650181"},"place":[6478,31,6478,54]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6478,31,6478,57]},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}},"place":[6594,20,6594,21,"creating predicate between X and X"]},"place":[6478,31,6478,66]}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (expand \"PreservesEq\")\n   ((\"\" (expand \"subset?\")\n     ((\"\" (expand \"member\")\n       ((\"\" (expand \"EquivalenceKernel\")\n         ((\"\" (expand \"quotient_map\")\n           ((\"\"\n             (rewrite\n              \"restrict_full[[Quotient[X](S!1), Quotient[X](S!1)], bool]\")\n             ((\"\" (rewrite \"restrict_full[[X, X], bool]\")\n               ((\"\" (prop)\n                 ((\"1\" (skosimp*) ((\"1\" (assert) nil nil)) nil)\n                  (\"2\" (skosimp*)\n                   ((\"2\" (typepred \"x!1`1\" \"x!1`2\")\n                     ((\"2\" (expand \"lift\")\n                       ((\"2\" (lemma \"EquivClassEq[X]\")\n                         ((\"2\" (auto-rewrite \"EquivClassNonEmpty[X]\")\n                           ((\"2\" (skosimp*)\n                             ((\"2\" (replace -2)\n                               ((\"2\"\n                                 (replace -3)\n                                 ((\"2\"\n                                   (inst?)\n                                   ((\"1\"\n                                     (assert)\n                                     ((\"1\"\n                                       (hide 2)\n                                       ((\"1\"\n                                         (expand \"action\")\n                                         ((\"1\"\n                                           (rewrite\n                                            \"restrict_full[[X, X], bool]\")\n                                           ((\"1\"\n                                             (case\n                                              \"FORALL(x : X) :\n                   EquivClass(S!1)(choose(EquivClass[X](S!1)(x))) = EquivClass(S!1)(x)\")\n                                             ((\"1\"\n                                               (inst-cp -1 \"x!2\")\n                                               ((\"1\"\n                                                 (expand \"rep\")\n                                                 ((\"1\"\n                                                   (replace -2)\n                                                   ((\"1\"\n                                                     (inst -1 \"x!3\")\n                                                     ((\"1\"\n                                                       (assert)\n                                                       nil\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"2\"\n                                               (hide -1 -2 -3 2)\n                                               ((\"2\"\n                                                 (skosimp*)\n                                                 ((\"2\"\n                                                   (lemma\n                                                    \"EquivClassEq[X]\")\n                                                   ((\"2\"\n                                                     (inst?)\n                                                     ((\"2\"\n                                                       (assert)\n                                                       ((\"2\"\n                                                         (use\n                                                          \"EquivClassChoose[X]\")\n                                                         ((\"2\"\n                                                           (hide 2)\n                                                           ((\"2\"\n                                                             (typepred\n                                                              \"S!1\")\n                                                             ((\"2\"\n                                                               (expand\n                                                                \"equivalence?\")\n                                                               ((\"2\"\n                                                                 (expand\n                                                                  \"symmetric?\")\n                                                                 ((\"2\"\n                                                                   (flatten)\n                                                                   ((\"2\"\n                                                                     (expand\n                                                                      \"repEC\")\n                                                                     ((\"2\"\n                                                                       (forward-chain\n                                                                        -2)\n                                                                       nil\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil)\n                                    (\"2\"\n                                     (rewrite\n                                      \"restrict_full[[X, X], bool]\")\n                                     ((\"2\" (inst 1 \"x!3\") nil nil))\n                                     nil)\n                                    (\"3\"\n                                     (rewrite\n                                      \"restrict_full[[X, X], bool]\")\n                                     ((\"3\" (assert) nil nil))\n                                     nil)\n                                    (\"4\"\n                                     (rewrite\n                                      \"restrict_full[[X, X], bool]\")\n                                     ((\"4\" (inst 1 \"x!2\") nil nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction_TCC3","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"4016427599"},"place":[6481,12,6481,33]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]},"place":[6481,12,6481,36]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,20,6594,21]},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"3133462658"},"place":[6594,12,6594,46]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6594,12,6594,49]},"argument":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6595,28,6595,29]}],"type":{"typehash":"3191545724"},"place":[6595,15,6595,30]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"place":[6595,31,6595,37]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6595,31,6595,40]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]},"place":[6595,31,6595,43]},"place":[6595,15,6595,44]},"place":[6594,12,6595,45]}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (expand \"PreservesEq\")\n   ((\"\" (expand \"subset?\")\n     ((\"\" (expand \"member\")\n       ((\"\" (skosimp*)\n         ((\"\"\n           (rewrite\n            \"restrict_full[[Quotient[X](S!1), Quotient[X](S!1)], bool]\")\n           ((\"\" (expand \"EquivalenceKernel\")\n             ((\"\" (expand \"quotient_map\")\n               ((\"\" (typepred \"x!1`1\" \"x!1`2\")\n                 ((\"\" (expand \"lift\")\n                   ((\"\" (lemma \"EquivClassEq[X]\")\n                     ((\"\" (auto-rewrite \"EquivClassNonEmpty[X]\")\n                       ((\"\" (skosimp*)\n                         ((\"\" (replace -2)\n                           ((\"\" (replace -3)\n                             ((\"\" (inst?)\n                               ((\"\"\n                                 (assert)\n                                 ((\"\"\n                                   (hide 2)\n                                   ((\"\"\n                                     (expand \"action\")\n                                     ((\"\"\n                                       (case\n                                        \"FORALL(x : X) :\n                            EquivClass(S!1)(choose(EquivClass[X](S!1)(x))) = EquivClass(S!1)(x)\")\n                                       ((\"1\"\n                                         (inst-cp -1 \"x!2\")\n                                         ((\"1\"\n                                           (expand \"rep\")\n                                           ((\"1\"\n                                             (replace -2)\n                                             ((\"1\"\n                                               (inst -1 \"x!3\")\n                                               ((\"1\" (assert) nil nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil)\n                                        (\"2\"\n                                         (hide -1 -2 -3 2)\n                                         ((\"2\"\n                                           (skosimp*)\n                                           ((\"2\"\n                                             (lemma \"EquivClassEq[X]\")\n                                             ((\"2\"\n                                               (inst?)\n                                               ((\"2\"\n                                                 (assert)\n                                                 ((\"2\"\n                                                   (hide 2)\n                                                   ((\"2\"\n                                                     (use\n                                                      \"rep_lemma[X]\")\n                                                     ((\"2\"\n                                                       (expand\n                                                        \"EquivClass\")\n                                                       ((\"2\"\n                                                         (expand \"rep\")\n                                                         ((\"2\"\n                                                           (typepred\n                                                            \"S!1\")\n                                                           ((\"2\"\n                                                             (expand\n                                                              \"equivalence?\")\n                                                             ((\"2\"\n                                                               (flatten)\n                                                               ((\"2\"\n                                                                 (expand\n                                                                  \"symmetric?\")\n                                                                 ((\"2\"\n                                                                   (forward-chain\n                                                                    -2)\n                                                                   ((\"2\"\n                                                                     (expand\n                                                                      \"nonempty?\")\n                                                                     ((\"2\"\n                                                                       (expand\n                                                                        \"empty?\")\n                                                                       ((\"2\"\n                                                                         (expand\n                                                                          \"member\")\n                                                                         ((\"2\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"x!4\")\n                                                                           ((\"2\"\n                                                                             (expand\n                                                                              \"reflexive?\")\n                                                                             ((\"2\"\n                                                                               (inst?)\n                                                                               nil\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction_TCC4","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2614391051","place":[6478,49,6478,53]}],"type":{"typehash":"3760337393"},"place":[6478,31,6478,54]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]},"place":[6478,31,6478,57]},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}},"place":[6593,27,6593,38,"creating predicate between Quotient[X](S) and Quotient[X](S)"]},"place":[6478,31,6478,66]}},"proof":{"tag":"proof-info","script":"(\"\" (grind :exclude \"rep\" :if-match nil) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"QuotientAction","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"bijective?","theory":"functions","actuals":[{"tag":"type-actual","typehash":"2038151316"},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"3366968262"},"place":[6592,6,6592,53]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"2556758978"},"place":[6593,9,6593,63]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]},"place":[6593,9,6593,66]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"lift","theory":"QuotientExtensionProperties","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,20,6594,21]},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"3133462658"},"place":[6594,12,6594,46]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6594,12,6594,49]},"argument":{"tag":"apply","operator":{"tag":"constant","id":"quotient_map","theory":"QuotientDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6595,28,6595,29]}],"type":{"typehash":"3191545724"},"place":[6595,15,6595,30]},"argument":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"action","theory":"QuotientIteration","type":{"typehash":"407548414"},"place":[6595,31,6595,37]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2264696478"}},"place":[6595,31,6595,40]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6591,11,6591,39]},"place":[6595,31,6595,43]},"place":[6595,15,6595,44]},"place":[6594,12,6595,45]},"place":[6593,9,6595,46]},"place":[6592,6,6595,47]},"place":[6591,4,6595,47]},"proof":{"tag":"proof-info","script":"(\"\" (skosimp*)\n ((\"\" (typepred \"S!1\" \"R!1\")\n   ((\"\" (expand \"bijective?\")\n     ((\"\" (prop)\n       ((\"1\" (expand \"injective?\")\n         ((\"1\" (skosimp*)\n           ((\"1\" (expand \"lift\")\n             ((\"1\" (typepred \"x1!1\" \"x2!1\")\n               ((\"1\"\n                 (auto-rewrite-theories \"QuotientDefinition[X]\"\n                  \"QuotientDefinition[Quotient[X](S!1)]\")\n                 ((\"1\" (skosimp*)\n                   ((\"1\" (replace -1)\n                     ((\"1\" (replace -2)\n                       ((\"1\" (hide -1 -2)\n                         ((\"1\" (expand \"rep\")\n                           ((\"1\"\n                             (name-replace \"ch1\"\n                              \"choose(EquivClass[Quotient[X](S!1)](R!1)(x!1))\")\n                             ((\"1\"\n                               (name-replace\n                                \"ch2\"\n                                \"choose(EquivClass[Quotient[X](S!1)](R!1)(x!2))\")\n                               ((\"1\"\n                                 (typepred \"ch1\" \"ch2\")\n                                 ((\"1\"\n                                   (skosimp*)\n                                   ((\"1\"\n                                     (replace -1)\n                                     ((\"1\"\n                                       (replace -3)\n                                       ((\"1\"\n                                         (hide -1 -3)\n                                         ((\"1\"\n                                           (name-replace\n                                            \"ch3\"\n                                            \"choose(EquivClass[X](S!1)(x!3))\")\n                                           ((\"1\"\n                                             (name-replace\n                                              \"ch4\"\n                                              \"choose(EquivClass[X](S!1)(x!4))\")\n                                             ((\"1\"\n                                               (typepred \"ch3\" \"ch4\")\n                                               ((\"1\"\n                                                 (stop-rewrite\n                                                  \"EquivClassEq[X]\")\n                                                 ((\"1\"\n                                                   (assert)\n                                                   ((\"1\"\n                                                     (case\n                                                      \"EquivClass[X](action(S!1)(R!1))(ch3)(ch3)\")\n                                                     ((\"1\"\n                                                       (replace -6)\n                                                       ((\"1\"\n                                                         (hide -6)\n                                                         ((\"1\"\n                                                           (assert)\n                                                           ((\"1\"\n                                                             (expand\n                                                              \"action\")\n                                                             ((\"1\"\n                                                               (lemma\n                                                                \"EquivClassEq[X]\")\n                                                               ((\"1\"\n                                                                 (inst?)\n                                                                 ((\"1\"\n                                                                   (prop)\n                                                                   ((\"1\"\n                                                                     (replace\n                                                                      -1)\n                                                                     ((\"1\"\n                                                                       (hide\n                                                                        -1\n                                                                        -2)\n                                                                       ((\"1\"\n                                                                         (lemma\n                                                                          \"EquivClassEq[X]\")\n                                                                         ((\"1\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"S!1\"\n                                                                            \"ch4\"\n                                                                            \"x!4\")\n                                                                           ((\"1\"\n                                                                             (prop)\n                                                                             ((\"1\"\n                                                                               (replace\n                                                                                -1)\n                                                                               ((\"1\"\n                                                                                 (hide\n                                                                                  -1\n                                                                                  -2)\n                                                                                 ((\"1\"\n                                                                                   (hide\n                                                                                    -2\n                                                                                    -3)\n                                                                                   ((\"1\"\n                                                                                     (expand\n                                                                                      \"equivalence?\")\n                                                                                     ((\"1\"\n                                                                                       (flatten)\n                                                                                       ((\"1\"\n                                                                                         (expand\n                                                                                          \"symmetric?\")\n                                                                                         ((\"1\"\n                                                                                           (inst-cp\n                                                                                            -8\n                                                                                            \"EquivClass[X](S!1)(x!4)\"\n                                                                                            \"EquivClass(S!1)(ch3)\")\n                                                                                           ((\"1\"\n                                                                                             (prop)\n                                                                                             ((\"1\"\n                                                                                               (hide\n                                                                                                -2)\n                                                                                               ((\"1\"\n                                                                                                 (inst\n                                                                                                  -8\n                                                                                                  \"x!2\"\n                                                                                                  \"EquivClass[X](S!1)(x!4)\")\n                                                                                                 ((\"1\"\n                                                                                                   (expand\n                                                                                                    \"transitive?\")\n                                                                                                   ((\"1\"\n                                                                                                     (inst-cp\n                                                                                                      -9\n                                                                                                      \"x!1\"\n                                                                                                      \"EquivClass(S!1)(ch3)\"\n                                                                                                      \"EquivClass[X](S!1)(x!4)\")\n                                                                                                     ((\"1\"\n                                                                                                       (assert)\n                                                                                                       ((\"1\"\n                                                                                                         (inst-cp\n                                                                                                          -9\n                                                                                                          \"x!1\"\n                                                                                                          \"EquivClass[X](S!1)(x!4)\"\n                                                                                                          \"x!2\")\n                                                                                                         ((\"1\"\n                                                                                                           (assert)\n                                                                                                           nil\n                                                                                                           nil))\n                                                                                                         nil))\n                                                                                                       nil))\n                                                                                                     nil))\n                                                                                                   nil))\n                                                                                                 nil))\n                                                                                               nil))\n                                                                                             nil))\n                                                                                           nil))\n                                                                                         nil))\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil)\n                                                                              (\"2\"\n                                                                               (expand\n                                                                                \"equivalence?\")\n                                                                               ((\"2\"\n                                                                                 (expand\n                                                                                  \"symmetric?\")\n                                                                                 ((\"2\"\n                                                                                   (flatten)\n                                                                                   ((\"2\"\n                                                                                     (inst\n                                                                                      -7\n                                                                                      \"x!4\"\n                                                                                      \"ch4\")\n                                                                                     ((\"2\"\n                                                                                       (assert)\n                                                                                       nil\n                                                                                       nil))\n                                                                                     nil))\n                                                                                   nil))\n                                                                                 nil))\n                                                                               nil))\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil)\n                                                      (\"2\"\n                                                       (hide\n                                                        -1\n                                                        -2\n                                                        -3\n                                                        -4\n                                                        -5\n                                                        2)\n                                                       ((\"2\"\n                                                         (expand\n                                                          \"EquivClass\")\n                                                         ((\"2\"\n                                                           (expand\n                                                            \"action\")\n                                                           ((\"2\"\n                                                             (expand\n                                                              \"equivalence?\")\n                                                             ((\"2\"\n                                                               (expand\n                                                                \"reflexive?\")\n                                                               ((\"2\"\n                                                                 (flatten)\n                                                                 ((\"2\"\n                                                                   (inst\n                                                                    -4\n                                                                    \"EquivClass(S!1)(ch3)\")\n                                                                   nil\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil)\n        (\"2\" (expand \"surjective?\")\n         ((\"2\" (skosimp*)\n           ((\"2\" (typepred \"y!1\")\n             ((\"2\" (skosimp*)\n               ((\"2\" (inst 1 \"EquivClass(R!1)(EquivClass(S!1)(x!1))\")\n                 ((\"1\" (expand \"lift\")\n                   ((\"1\" (expand \"quotient_map\")\n                     ((\"1\" (replace -1)\n                       ((\"1\" (lemma \"EquivClassEq[X]\")\n                         ((\"1\" (inst -1 \"action(S!1)(R!1)\" \"_\" \"_\")\n                           ((\"1\"\n                             (case \"nonempty?(EquivClass(R!1)(EquivClass(S!1)(x!1)))\")\n                             ((\"1\" (expand \"rep\")\n                               ((\"1\"\n                                 (name-replace\n                                  \"ch1\"\n                                  \"choose(EquivClass(R!1)(EquivClass(S!1)(x!1)))\")\n                                 ((\"1\"\n                                   (typepred \"ch1\")\n                                   ((\"1\"\n                                     (skosimp*)\n                                     ((\"1\"\n                                       (case \"nonempty?(ch1)\")\n                                       ((\"1\"\n                                         (name-replace\n                                          \"ch2\"\n                                          \"choose(ch1)\")\n                                         ((\"1\"\n                                           (typepred \"ch2\")\n                                           ((\"1\"\n                                             (inst -6 \"ch2\" \"x!1\")\n                                             ((\"1\"\n                                               (assert)\n                                               ((\"1\"\n                                                 (hide 2)\n                                                 ((\"1\"\n                                                   (expand \"action\" 1)\n                                                   ((\"1\"\n                                                     (expand\n                                                      \"EquivClass\"\n                                                      -3)\n                                                     ((\"1\"\n                                                       (expand\n                                                        \"equivalence?\")\n                                                       ((\"1\"\n                                                         (flatten)\n                                                         ((\"1\"\n                                                           (expand\n                                                            \"symmetric?\")\n                                                           ((\"1\"\n                                                             (inst\n                                                              -11\n                                                              \"LAMBDA (z: X): S!1(x!1, z)\"\n                                                              \"ch1\")\n                                                             ((\"1\"\n                                                               (assert)\n                                                               ((\"1\"\n                                                                 (case-replace\n                                                                  \"EquivClass(S!1)(ch2) = ch1\")\n                                                                 ((\"1\"\n                                                                   (expand\n                                                                    \"EquivClass\"\n                                                                    1)\n                                                                   ((\"1\"\n                                                                     (replace\n                                                                      1)\n                                                                     ((\"1\"\n                                                                       (expand\n                                                                        \"EquivClass\"\n                                                                        -5)\n                                                                       ((\"1\"\n                                                                         (propax)\n                                                                         nil\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil)\n                                                                  (\"2\"\n                                                                   (hide\n                                                                    2)\n                                                                   ((\"2\"\n                                                                     (replace\n                                                                      -3)\n                                                                     ((\"2\"\n                                                                       (assert)\n                                                                       ((\"2\"\n                                                                         (lemma\n                                                                          \"EquivClassEq[X]\")\n                                                                         ((\"2\"\n                                                                           (inst\n                                                                            -1\n                                                                            \"S!1\"\n                                                                            \"x!2\"\n                                                                            \"ch2\")\n                                                                           ((\"2\"\n                                                                             (assert)\n                                                                             nil\n                                                                             nil))\n                                                                           nil))\n                                                                         nil))\n                                                                       nil))\n                                                                     nil))\n                                                                   nil))\n                                                                 nil))\n                                                               nil)\n                                                              (\"2\"\n                                                               (inst\n                                                                1\n                                                                \"x!1\")\n                                                               ((\"2\"\n                                                                 (apply-extensionality\n                                                                  :hide?\n                                                                  t)\n                                                                 ((\"2\"\n                                                                   (grind)\n                                                                   nil\n                                                                   nil))\n                                                                 nil))\n                                                               nil))\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil)\n                                        (\"2\"\n                                         (replace -1)\n                                         ((\"2\"\n                                           (hide -1 -2 -3 -4 -5 2)\n                                           ((\"2\" (grind) nil nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"2\" (hide -1 -2 2)\n                               ((\"2\" (grind) nil nil)) nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil)\n                  (\"2\" (inst 1 \"EquivClass[X](S!1)(x!1)\")\n                   ((\"2\" (inst 1 \"x!1\") nil nil)) nil)\n                  (\"3\" (inst 1 \"x!1\") nil nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"},"place":[6590,2,6595,47]}],"place":[6571,0,6597,21]},"type-hash":{"tag":"typelist","entries":{"3687953698":{"tag":"functiontype","domain":{"typehash":"2684264717"},"range":{"typehash":"2614391051"}},"3687953698":{"tag":"functiontype","domain":{"typehash":"2684264717"},"range":{"typehash":"2614391051"}},"3687953698":{"tag":"functiontype","domain":{"typehash":"2684264717"},"range":{"typehash":"2614391051"}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"},"place":[6422,17,6422,18,"making type from var-decl f"]},"2597866579":{"tag":"dep-binding","id":"S","typehash":"2597866579"},"986484413":{"tag":"tupletype","types":[{"typehash":"3192139499","typehash":"3192139499"}],"place":[450,14,450,20]},"2597866579":{"tag":"subtype","supertype":{"typehash":"2264696478"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"R","type":{"typehash":"2264696478"},"place":[6478,11,6478,28]}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"2614391051","place":[6478,49,6478,53]}],"type":{"typehash":"4016650181"},"place":[6478,31,6478,54]},"argument":{"tag":"variable","id":"R","type":{"typehash":"2264696478"},"place":[6478,11,6478,28]},"place":[6478,31,6478,57]},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}},"place":[6594,20,6594,21,"creating predicate between X and X"]},"place":[6478,31,6478,66]},"place":[6478,10,6478,67]},"place":[6480,7,6480,8,"making type from var-decl S"]},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"}},"504741969":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"594952506"},"place":[6422,17,6422,18,"making type from var-decl f"]},"3192139499":{"tag":"typename","id":"X","theory":"QuotientIteration","actuals":null,"place":[6581,22,6581,23]},"2556758978":{"tag":"functiontype","domain":{"typehash":2469710200},"range":{"typehash":"2555621130"}},"4272740387":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3687953698"}},"4272740387":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3687953698"}},"4272740387":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3687953698"}},"1089517517":{"tag":"subtype","supertype":{"typehash":"504741969"},"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"4016427599"},"place":[6481,12,6481,33]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2469710200"}},"place":[6481,12,6481,36]}},"3623875498":{"tag":"functiontype","domain":{"typehash":"504741969"},"range":{"typehash":"2614391051"}},"292393090":{"tag":"functiontype","domain":{"typehash":"986484413"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"3623875498":{"tag":"functiontype","domain":{"typehash":"504741969"},"range":{"typehash":"2614391051"}},"771841076":{"tag":"functiontype","domain":{"typehash":"1226208406"},"range":{"typehash":"2614391051"}},"376288351":{"tag":"functiontype","domain":{"typehash":"2038151316"},"range":{"typehash":"594952506"},"place":[268,13,268,14,"making type from var-decl f"]},"408735966":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"2614391051"}},"376585587":{"tag":"functiontype","domain":{"typehash":"2038299934"},"range":{"typehash":"594952506"}},"2614391051":{"tag":"typename","id":"boolean","theory":"booleans","actuals":null},"2469710200":{"tag":"dep-binding","id":"S","typehash":"2469710200"},"2469710200":{"tag":"subtype","supertype":{"typehash":"1174935104"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6478,11,6478,28]}],"expression":{"tag":"apply","operator":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2102378125"},{"tag":"type-actual","typehash":"2614391051","place":[6478,49,6478,53]}],"type":{"typehash":"3760337393"},"place":[6478,31,6478,54]},"argument":{"tag":"variable","id":"R","type":{"typehash":"1174935104"},"place":[6478,11,6478,28]},"place":[6478,31,6478,57]},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"2614391051"}},"place":[6593,27,6593,38,"creating predicate between Quotient[X](S) and Quotient[X](S)"]},"place":[6478,31,6478,66]},"place":[6478,10,6478,67]},"place":[6480,7,6480,8,"making type from var-decl S"]},"3277574760":{"tag":"tupletype","types":[{"typehash":"2524180514","typehash":"2524180514"}]},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6467,6,6467,15]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6467,25,6467,26]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6467,31,6467,32]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6467,29,6467,49]},"place":[6467,18,6467,49]},"place":[6467,4,6467,51]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"4191690336":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"2102378125"}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2264696478":{"tag":"dep-binding","id":"S","typehash":"2264696478"},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2642263807":{"tag":"functiontype","domain":{"typehash":"1174935104"},"range":{"typehash":"292393090"}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2102378125":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2264696478":{"tag":"dep-binding","id":"S","typehash":"2264696478"},"2264696478":{"tag":"dep-binding","id":"S","typehash":"2264696478"},"2264696478":{"tag":"subtype","supertype":{"typehash":"292393090"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6581,22,6581,23]}],"type":{"typehash":"3199177740"},"place":[469,23,469,35]}},"3333118465":{"tag":"subtype","supertype":{"typehash":"2684264717"},"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,20,6594,21]},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"4272740387"},"place":[6481,12,6481,33]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2597866579"}},"place":[6481,12,6481,36]}},"3333118465":{"tag":"subtype","supertype":{"typehash":"2684264717"},"predicate":{"tag":"apply","operator":{"tag":"constant","id":"PreservesEq","theory":"KernelDefinition","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6594,17,6594,18]},{"tag":"type-actual","typehash":"3192139499","place":[6594,20,6594,21]},{"tag":"type-actual","typehash":"594952506"}],"type":{"typehash":"4272740387"},"place":[6481,12,6481,33]},"argument":{"tag":"variable","id":"S","type":{"typehash":"2597866579"}},"place":[6481,12,6481,36]}},"2684264717":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"594952506"},"place":[6422,17,6422,18,"making type from var-decl f"]},"3760337393":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3367785292"}},"3760337393":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3367785292"}},"3199177740":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"2614391051"}},"2684264717":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"594952506"},"place":[6422,17,6422,18,"making type from var-decl f"]},"2684264717":{"tag":"functiontype","domain":{"typehash":"3192139499"},"range":{"typehash":"594952506"},"place":[6422,17,6422,18,"making type from var-decl f"]},"594952506":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"594952506":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"594952506":{"tag":"subtype","supertype":{"typehash":"408735966"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"408735966"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"3192139499"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"408735966"}],"type":{"typehash":"771841076"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}},"2038299934":{"tag":"subtype","supertype":{"typehash":"2524180514"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"2524180514"},"place":[6467,6,6467,15]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"},"place":[6467,25,6467,26]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"2524180514"}],"type":{"typehash":"579606488"},"place":[6467,31,6467,32]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6467,29,6467,49]},"place":[6467,18,6467,49]},"place":[6467,4,6467,51]}},"2555621130":{"tag":"functiontype","domain":{"typehash":"1089517517"},"range":{"typehash":"376585587"}},"319599899":{"tag":"functiontype","domain":{"typehash":"1174935104"},"range":{"typehash":"2264696478"}},"1226208406":{"tag":"tupletype","types":[{"typehash":"408735966","typehash":"408735966"}]},"3366968262":{"tag":"functiontype","domain":{"typehash":"376288351"},"range":{"typehash":"2614391051"}},"3431863492":{"tag":"functiontype","domain":{"typehash":"408735966"},"range":{"typehash":"2614391051"}},"407548414":{"tag":"functiontype","domain":{"typehash":2264696478},"range":{"typehash":"2642263807"}},"2876012112":{"tag":"functiontype","domain":{"typehash":"3333118465"},"range":{"typehash":"504741969"}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"2876012112":{"tag":"functiontype","domain":{"typehash":"3333118465"},"range":{"typehash":"504741969"}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125","place":[6588,30,6588,41]}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125","place":[6584,28,6584,39]}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"1174935104":{"tag":"subtype","supertype":{"typehash":"2343759444"},"predicate":{"tag":"constant","id":"equivalence?","theory":"relations","actuals":[{"tag":"type-actual","typehash":"2102378125"}],"type":{"typehash":"3006943152"},"place":[469,23,469,35]}},"579606488":{"tag":"functiontype","domain":{"typehash":"3277574760"},"range":{"typehash":"2614391051"}},"3191545724":{"tag":"functiontype","domain":{"typehash":2264696478},"range":{"typehash":"4191690336"}},"4016650181":{"tag":"functiontype","domain":{"typehash":"292393090"},"range":{"typehash":"3431863492"}},"3367785292":{"tag":"functiontype","domain":{"typehash":"2524180514"},"range":{"typehash":"2614391051"}},"3367785292":{"tag":"functiontype","domain":{"typehash":"2524180514"},"range":{"typehash":"2614391051"}},"3133462658":{"tag":"functiontype","domain":{"typehash":2597866579},"range":{"typehash":"2876012112"}},"4016427599":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3623875498"}},"2524180514":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"2614391051"}},"2379851802":{"tag":"functiontype","domain":{"typehash":2264696478},"range":{"typehash":"319599899"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2524180514":{"tag":"functiontype","domain":{"typehash":"2102378125"},"range":{"typehash":"2614391051"},"place":[6422,17,6422,18,"making type from var-decl f"]},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"3133462658":{"tag":"functiontype","domain":{"typehash":2597866579},"range":{"typehash":"2876012112"}},"4016427599":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"3623875498"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2203044222":{"tag":"typename","id":"equivalence","theory":"relations","actuals":[{"tag":"type-actual","typehash":"3192139499","place":[6581,22,6581,23]}],"place":[6581,10,6581,24]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"2012167590":{"tag":"tupletype","types":[{"typehash":"2102378125","typehash":"2102378125"}],"place":[450,14,450,20]},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"2343759444":{"tag":"functiontype","domain":{"typehash":"2012167590"},"range":{"typehash":"2614391051"},"place":[467,15,467,16,"making type from var-decl R"]},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"3006943152":{"tag":"functiontype","domain":{"typehash":"2343759444"},"range":{"typehash":"2614391051"}},"2038151316":{"tag":"subtype","supertype":{"typehash":"2524180514"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"P","type":{"typehash":"2524180514"},"place":[6380,6,6380,16]}],"expression":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"2102378125"},"place":[6380,26,6380,27]}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","typehash":"2524180514"}],"type":{"typehash":"579606488"},"place":[6380,32,6380,33]},"argument":{"tag":"tuple","exprs":["map",["quote","vector"],["function","ppJsonMl*"],"exprs"],"place":[98,28,98,49]},"place":[6380,30,6380,50]},"place":[6380,19,6380,50]},"place":[6380,4,6380,52]}}}}}