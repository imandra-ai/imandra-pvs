{"tag":"module-with-hash","module":{"tag":"theory","id":"ordinals","declarations":[{"tag":"var-decl","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"var-decl","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"var-decl","id":"k","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"var-decl","id":"m","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},{"tag":"var-decl","id":"n","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},{"tag":"var-decl","id":"O","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},{"tag":"var-decl","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"var-decl","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"var-decl","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"var-decl","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"var-decl","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"var-decl","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"const-decl","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"},"parameters":[],"const-def":{"tag":"apply","operator":{"tag":"constant","id":"reduce_nat","theory":"ordstruct_adt","type":{"typehash":"88447f07490be2a2670c50b24136dbecf9e63048"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":0},{"tag":"lambda","bindings":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"m","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},{"tag":"variable","id":"n","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"+","theory":"number_fields","type":{"typehash":"350b58e8264ad023a2d621d5506d89de8beb16e3"}},"argument":{"tag":"tuple","exprs":[{"tag":"integer","integer-value":1},{"tag":"variable","id":"m","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}}]}},{"tag":"variable","id":"n","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}}]}}}]}}},{"tag":"formula-decl","id":"lessp_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (grind) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"lessp_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v1","type":{"typehash":"4309ab331cdffefc5584f370d6ac2d3e12576b59"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"variable","id":"v1","type":{"typehash":"4309ab331cdffefc5584f370d6ac2d3e12576b59"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}}]}}]}}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}}]}}]}}]}}]}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skeep*)\n ((\"\" (replace -1)\n   ((\"\" (expand \"size\")\n     ((\"\" (assert)\n       ((\"\" (expand \"reduce_nat\" 3 2) ((\"\" (assert) nil nil)) nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"recursive-func-decl","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"},"parameters":[[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"recursive-def":{"tag":"cases","expr":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},"selections":[{"tag":"selection","pattern":["apply",{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},[]],"expr":{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"zero?","theory":"ordstruct_adt","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"}},"argument":{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}}},{"tag":"selection","pattern":["apply",{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"expr":{"tag":"cases","expr":{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},"selections":[{"tag":"selection","pattern":["apply",{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},[]],"expr":{"tag":"constant","id":"FALSE","theory":"booleans","type":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}},{"tag":"selection","pattern":["apply",{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},[{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"expr":{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}}],"type":{"typehash":"146a37095d79b99006383a517eb8738d36d01122"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"j","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"w","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}}]}}]}}]}}}],"else-part":[]}}],"else-part":[]},"measure":{"tag":"lambda","bindings":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}}},{"tag":"const-decl","id":">","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"},"parameters":[[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"const-def":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}},{"tag":"const-decl","id":"<=","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"},"parameters":[[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"const-def":{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}}},{"tag":"const-decl","id":">=","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"},"parameters":[[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"const-def":{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"y","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}}},{"tag":"formula-decl","id":"ordinal?_TCC1","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (termination-tcc) nil nil)","status":"proved"}},{"tag":"formula-decl","id":"ordinal?_TCC2","label":"obligation","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v1","type":{"typehash":"c17ba2e71b34900d42af21eeb134844cf4e9e162"}},{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"apply","operator":{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}]}},{"tag":"apply","operator":{"tag":"variable","id":"v1","type":{"typehash":"c17ba2e71b34900d42af21eeb134844cf4e9e162"}},"argument":{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (grind) nil nil)","status":"proved"}},{"tag":"recursive-func-decl","id":"ordinal?","theory":"ordinals","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"},"parameters":[[{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"recursive-def":{"tag":"cases","expr":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},"selections":[{"tag":"selection","pattern":["apply",{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},[]],"expr":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}},{"tag":"selection","pattern":["apply",{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},[{"tag":"variable","id":"i","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"expr":{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"ordinal?","theory":"ordinals","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"}},"argument":{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"ordinal?","theory":"ordinals","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"}},"argument":{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"cases","expr":{"tag":"variable","id":"v","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},"selections":[{"tag":"selection","pattern":["apply",{"tag":"constant","id":"zero","theory":"ordstruct_adt","type":{"typehash":"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb"}},[]],"expr":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}},{"tag":"selection","pattern":["apply",{"tag":"constant","id":"add","theory":"ordstruct_adt","type":{"typehash":"378315377a9dd6a80396ca81e308b3cf7020c45c"}},[{"tag":"variable","id":"k","type":{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"}},{"tag":"variable","id":"r","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"s","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]],"expr":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}},{"tag":"variable","id":"u","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}]}}}],"else-part":[]}]}}]}}}],"else-part":[]},"measure":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}}},{"tag":"formula-decl","id":"ordinal_TCC1","label":"obligation","definition":{"tag":"exists","bindings":[{"tag":"variable","id":"x","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"constant","id":"TRUE","theory":"booleans","type":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}}},"proof":{"tag":"proof-info","script":"(\"\" (inst 1 \"zero\")\n ((\"\" (assert) ((\"\" (expand \"ordinal?\") ((\"\" (propax) nil nil)) nil))\n   nil))\n nil)","status":"proved"}},{"tag":"type-eq-decl","id":"ordinal","theory":"ordinals","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"var-decl","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"var-decl","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"var-decl","id":"t","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"formula-decl","id":"ordinal_irreflexive","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (induct \"r\")\n ((\"1\" (assert) nil nil)\n  (\"2\" (flatten) ((\"2\" (expand \"<\") ((\"2\" (propax) nil nil)) nil)) nil)\n  (\"3\" (skosimp*)\n   ((\"3\" (assert)\n     ((\"3\" (expand \"<\" -4)\n       ((\"3\" (split -4)\n         ((\"1\" (assert)\n           ((\"1\" (expand \"ordinal?\" -3) ((\"1\" (propax) nil nil)) nil))\n           nil)\n          (\"2\" (expand \"ordinal?\" -4)\n           ((\"2\" (flatten) ((\"2\" (assert) nil nil)) nil)) nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"ordinal_antisym","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"NOT","theory":"booleans","type":{"typehash":"2dd224b393847a08c08146f380310f3a3e311e59"}},"argument":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (induct \"r\")\n ((\"1\" (assert) nil nil)\n  (\"2\" (flatten)\n   ((\"2\" (skosimp*) ((\"2\" (expand \"<\") ((\"2\" (assert) nil nil)) nil))\n     nil))\n   nil)\n  (\"3\" (skosimp)\n   ((\"3\" (expand \"ordinal?\" -3)\n     ((\"3\" (flatten)\n       ((\"3\" (assert)\n         ((\"3\" (induct \"s\")\n           ((\"1\" (assert) nil nil)\n            (\"2\" (flatten)\n             ((\"2\" (expand \"<\" -2) ((\"2\" (propax) nil nil)) nil)) nil)\n            (\"3\" (skosimp)\n             ((\"3\" (expand \"ordinal?\" -3)\n               ((\"3\" (flatten)\n                 ((\"3\" (assert)\n                   ((\"3\" (expand \"<\" -6)\n                     ((\"3\" (split -6)\n                       ((\"1\" (inst -8 \"add2_var!2\")\n                         ((\"1\" (assert)\n                           ((\"1\" (expand \"<\" -7)\n                             ((\"1\" (propax) nil nil)) nil))\n                           nil))\n                         nil)\n                        (\"2\" (flatten)\n                         ((\"2\" (expand \"<\" -8)\n                           ((\"2\" (assert)\n                             ((\"2\" (replace -1)\n                               ((\"2\"\n                                 (lemma \"ordinal_irreflexive\")\n                                 ((\"2\" (inst -1 \"add2_var!2\") nil nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil)\n                        (\"3\" (flatten)\n                         ((\"3\" (expand \"<\" -9)\n                           ((\"3\" (replace -1)\n                             ((\"3\" (replace -2)\n                               ((\"3\"\n                                 (lemma \"ordinal_irreflexive\")\n                                 ((\"3\"\n                                   (inst-cp -1 \"add2_var!2\")\n                                   ((\"3\"\n                                     (assert)\n                                     ((\"3\"\n                                       (inst -12 \"add3_var!2\")\n                                       ((\"3\" (assert) nil nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"ordinal_antisymmetric","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<=","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<=","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (skosimp)\n ((\"\" (expand \"<=\")\n   ((\"\" (split)\n     ((\"1\" (split)\n       ((\"1\" (lemma \"ordinal_antisym\")\n         ((\"1\" (inst?) ((\"1\" (assert) nil nil)) nil)) nil)\n        (\"2\" (assert) nil nil))\n       nil)\n      (\"2\" (propax) nil nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"ordinal_transitive","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"t","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"AND","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"t","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"t","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (induct \"s\")\n ((\"1\" (assert) nil nil)\n  (\"2\" (flatten)\n   ((\"2\" (skosimp)\n     ((\"2\" (expand \"<\" -2)\n       ((\"2\" (lift-if -2) ((\"2\" (assert) nil nil)) nil)) nil))\n     nil))\n   nil)\n  (\"3\" (skosimp)\n   ((\"3\" (expand \"ordinal?\" -3)\n     ((\"3\" (flatten)\n       ((\"3\" (assert)\n         ((\"3\" (hide -3 -4)\n           ((\"3\" (skosimp)\n             ((\"3\" (expand \"<\" -4)\n               ((\"3\" (lift-if)\n                 ((\"3\" (split -4)\n                   ((\"1\" (flatten) ((\"1\" (assert) nil nil)) nil)\n                    (\"2\" (flatten)\n                     ((\"2\" (expand \"<\" -5)\n                       ((\"2\" (lift-if)\n                         ((\"2\" (split)\n                           ((\"1\" (split)\n                             ((\"1\" (flatten)\n                               ((\"1\"\n                                 (expand \"<\" 2)\n                                 ((\"1\"\n                                   (assert)\n                                   ((\"1\" (assert) nil nil))\n                                   nil))\n                                 nil))\n                               nil)\n                              (\"2\" (flatten)\n                               ((\"2\"\n                                 (assert)\n                                 ((\"2\"\n                                   (expand \"<\" 3)\n                                   ((\"2\" (assert) nil nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil)\n                            (\"2\" (flatten)\n                             ((\"2\" (split)\n                               ((\"1\"\n                                 (assert)\n                                 ((\"1\"\n                                   (prop)\n                                   ((\"1\"\n                                     (assert)\n                                     ((\"1\"\n                                       (expand \"<\" 4)\n                                       ((\"1\"\n                                         (flatten)\n                                         ((\"1\"\n                                           (assert)\n                                           ((\"1\"\n                                             (inst\n                                              -4\n                                              \"exp(r!1)\"\n                                              \"exp(t!1)\")\n                                             ((\"1\" (assert) nil nil)\n                                              (\"2\"\n                                               (assert)\n                                               ((\"2\"\n                                                 (typepred \"t!1\")\n                                                 ((\"2\"\n                                                   (expand\n                                                    \"ordinal?\"\n                                                    -1)\n                                                   ((\"2\"\n                                                     (propax)\n                                                     nil\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil)\n                                              (\"3\"\n                                               (typepred \"r!1\")\n                                               ((\"3\"\n                                                 (expand \"ordinal?\" -1)\n                                                 ((\"3\"\n                                                   (assert)\n                                                   nil\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil)\n                                    (\"2\"\n                                     (expand \"<\" 4)\n                                     ((\"2\" (assert) nil nil))\n                                     nil)\n                                    (\"3\"\n                                     (expand \"<\" 4)\n                                     ((\"3\" (assert) nil nil))\n                                     nil)\n                                    (\"4\"\n                                     (expand \"<\" 5)\n                                     ((\"4\"\n                                       (assert)\n                                       ((\"4\"\n                                         (inst\n                                          -4\n                                          \"exp(r!1)\"\n                                          \"exp(t!1)\")\n                                         ((\"1\" (assert) nil nil)\n                                          (\"2\"\n                                           (typepred \"t!1\")\n                                           ((\"2\"\n                                             (expand \"ordinal?\" -1)\n                                             ((\"2\" (assert) nil nil))\n                                             nil))\n                                           nil)\n                                          (\"3\"\n                                           (typepred \"r!1\")\n                                           ((\"3\"\n                                             (expand \"ordinal?\" -1)\n                                             ((\"3\" (assert) nil nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil)\n                                    (\"5\"\n                                     (expand \"<\" 5)\n                                     ((\"5\" (assert) nil nil))\n                                     nil)\n                                    (\"6\"\n                                     (expand \"<\" 5)\n                                     ((\"6\" (assert) nil nil))\n                                     nil))\n                                   nil))\n                                 nil)\n                                (\"2\"\n                                 (split -5)\n                                 ((\"1\" (propax) nil nil)\n                                  (\"2\"\n                                   (flatten)\n                                   ((\"2\"\n                                     (hide -6)\n                                     ((\"2\"\n                                       (prop)\n                                       ((\"1\"\n                                         (assert)\n                                         ((\"1\"\n                                           (expand \"<\" 4)\n                                           ((\"1\" (propax) nil nil))\n                                           nil))\n                                         nil)\n                                        (\"2\"\n                                         (expand \"<\" 4)\n                                         ((\"2\" (assert) nil nil))\n                                         nil)\n                                        (\"3\"\n                                         (expand \"<\" 4)\n                                         ((\"3\" (assert) nil nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil)\n                                (\"3\"\n                                 (expand \"<\" 3)\n                                 ((\"3\"\n                                   (assert)\n                                   ((\"3\"\n                                     (hide -4)\n                                     ((\"3\"\n                                       (split -4)\n                                       ((\"1\" (propax) nil nil)\n                                        (\"2\"\n                                         (flatten)\n                                         ((\"2\"\n                                           (assert)\n                                           ((\"2\"\n                                             (flatten)\n                                             ((\"2\"\n                                               (assert)\n                                               ((\"2\"\n                                                 (split -1)\n                                                 ((\"1\"\n                                                   (flatten)\n                                                   ((\"1\"\n                                                     (assert)\n                                                     nil\n                                                     nil))\n                                                   nil)\n                                                  (\"2\"\n                                                   (flatten)\n                                                   ((\"2\"\n                                                     (assert)\n                                                     ((\"2\"\n                                                       (inst\n                                                        -8\n                                                        \"rest(r!1)\"\n                                                        \"rest(t!1)\")\n                                                       ((\"1\"\n                                                         (assert)\n                                                         nil\n                                                         nil)\n                                                        (\"2\"\n                                                         (typepred\n                                                          \"t!1\")\n                                                         ((\"2\"\n                                                           (expand\n                                                            \"ordinal?\"\n                                                            -1)\n                                                           ((\"2\"\n                                                             (assert)\n                                                             nil\n                                                             nil))\n                                                           nil))\n                                                         nil)\n                                                        (\"3\"\n                                                         (typepred\n                                                          \"r!1\")\n                                                         ((\"3\"\n                                                           (expand\n                                                            \"ordinal?\"\n                                                            -1)\n                                                           ((\"3\"\n                                                             (assert)\n                                                             nil\n                                                             nil))\n                                                           nil))\n                                                         nil))\n                                                       nil))\n                                                     nil))\n                                                   nil))\n                                                 nil))\n                                               nil))\n                                             nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"formula-decl","id":"ordinal_trichotomy","label":"lemma","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"OR","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"=","theory":"equalities","actuals":[{"tag":"type-actual","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}},{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}]}}]}}},"proof":{"tag":"proof-info","script":"(\"\" (induct \"r\")\n ((\"1\" (assert) nil nil)\n  (\"2\" (flatten)\n   ((\"2\" (induct \"s\")\n     ((\"1\" (assert) nil nil)\n      (\"2\" (skosimp)\n       ((\"2\" (expand \"ordinal?\" -3)\n         ((\"2\" (flatten)\n           ((\"2\" (assert)\n             ((\"2\" (expand \"<\" 1) ((\"2\" (propax) nil nil)) nil)) nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil)\n  (\"3\" (skosimp)\n   ((\"3\" (expand \"ordinal?\" -3)\n     ((\"3\" (flatten)\n       ((\"3\" (assert)\n         ((\"3\" (induct \"s\")\n           ((\"1\" (assert) nil nil)\n            (\"2\" (flatten)\n             ((\"2\" (expand \"<\" 3) ((\"2\" (propax) nil nil)) nil)) nil)\n            (\"3\" (skosimp)\n             ((\"3\" (assert)\n               ((\"3\" (expand \"ordinal?\" -3)\n                 ((\"3\" (flatten)\n                   ((\"3\" (assert)\n                     ((\"3\" (expand \"<\" 1)\n                       ((\"3\" (flatten)\n                         ((\"3\" (expand \"<\" 5)\n                           ((\"3\" (flatten)\n                             ((\"3\" (inst -6 \"add2_var!2\")\n                               ((\"3\"\n                                 (assert)\n                                 ((\"3\"\n                                   (replace -6)\n                                   ((\"3\"\n                                     (assert)\n                                     ((\"3\"\n                                       (hide -3 -4 1 5)\n                                       ((\"3\"\n                                         (hide -6 -7)\n                                         ((\"3\"\n                                           (inst -5 \"add3_var!2\")\n                                           ((\"3\" (assert) nil nil))\n                                           nil))\n                                         nil))\n                                       nil))\n                                     nil))\n                                   nil))\n                                 nil))\n                               nil))\n                             nil))\n                           nil))\n                         nil))\n                       nil))\n                     nil))\n                   nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}},{"tag":"var-decl","id":"p","type":{"typehash":"722930c7941ff97b85cc889fced6dbe652f7d21d"}},{"tag":"formula-decl","id":"ordinal_induction","label":"axiom","definition":{"tag":"forall","bindings":[{"tag":"variable","id":"p","type":{"typehash":"722930c7941ff97b85cc889fced6dbe652f7d21d"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"forall","bindings":[{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"IMPLIES","theory":"booleans","type":{"typehash":"f9dfc0c5daed68d735ec591f7efd16ec22075ef8"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}},{"tag":"apply","operator":{"tag":"variable","id":"p","type":{"typehash":"722930c7941ff97b85cc889fced6dbe652f7d21d"}},"argument":{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}}]}}},{"tag":"apply","operator":{"tag":"variable","id":"p","type":{"typehash":"722930c7941ff97b85cc889fced6dbe652f7d21d"}},"argument":{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}}]}}},{"tag":"forall","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"variable","id":"p","type":{"typehash":"722930c7941ff97b85cc889fced6dbe652f7d21d"}},"argument":{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}}}]}}},"proof":[]},{"tag":"formula-decl","id":"well_founded_le","label":"lemma","definition":{"tag":"apply","operator":{"tag":"constant","id":"well_founded?","theory":"orders","actuals":[{"tag":"type-actual","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"type":{"typehash":"5c399d211bf86e3a4eed26fef789f41b186f56b7"}},"argument":{"tag":"lambda","bindings":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"ordinals","type":{"typehash":"97b72fe6a63242c5c26257eb7a926afdd41ecdf1"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"r","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}},{"tag":"variable","id":"s","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}}}},"proof":{"tag":"proof-info","script":"(\"\" (expand \"well_founded?\")\n ((\"\" (lemma \"ordinal_induction\")\n   ((\"\" (skosimp)\n     ((\"\" (skosimp)\n       ((\"\" (inst -1 \"LAMBDA (x:ordinal): NOT p!1(x)\")\n         ((\"\" (split)\n           ((\"1\" (inst -1 \"y!1\") nil nil)\n            (\"2\" (skosimp)\n             ((\"2\" (inst 1 \"r!1\")\n               ((\"2\" (skosimp)\n                 ((\"2\" (inst -1 \"x!1\") ((\"2\" (assert) nil nil)) nil))\n                 nil))\n               nil))\n             nil))\n           nil))\n         nil))\n       nil))\n     nil))\n   nil))\n nil)","status":"proved"}}]},"type-hash":{"tag":"typelist","entries":{"4382bfff3bdf2ad168cfacc26902ba9b3f38abfa":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"z","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}},{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}}}},"1c0618a3f8cbef8da2ccc1e140808fcd91d78e34":{"tag":"subtype","supertype":{"typehash":"7b1844b92f6bb3faf16a698d618d1b997c20feaa"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"z","type":{"typehash":"7b1844b92f6bb3faf16a698d618d1b997c20feaa"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":"<","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"project","argument":{"tag":"variable","id":"z","type":{"typehash":"7b1844b92f6bb3faf16a698d618d1b997c20feaa"}},"index":1}},{"tag":"apply","operator":{"tag":"constant","id":"size","theory":"ordinals","type":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"argument":{"tag":"variable","id":"x","type":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}}}]}}}},"a9b4557979b60d9f6bae59f5fdc78d5f282fac0d":{"tag":"functiontype","domain":{"typehash":"4886da1f5829fc9e7c211302e9675d3abbc18ea8"},"range":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},"120f814405b86d927919a8e6aaf145e82ed7a16c":{"tag":"subtype","supertype":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"i","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":">","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},{"tag":"integer","integer-value":0}]}}},"print-type":[{"tag":"typename","id":"posnat","theory":"integers","actuals":[]}]},"4e3be81a543afbe0f09ee80c11961b63e55349b6":{"tag":"functiontype","domain":{"typehash":"ca62fd3344b1d80296e612052e69da44288adb09"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},"print-type":[{"tag":"typename","id":"pred","theory":"defined_types","actuals":[{"tag":"type-actual","type":{"typehash":"ca62fd3344b1d80296e612052e69da44288adb09"}}]}]},"146a37095d79b99006383a517eb8738d36d01122":{"tag":"functiontype","domain":{"typehash":"11c15fe18e476f962d4d8a6529ffdee55c710026"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"255fc968a29595c401e05c55e3263dd5e336ff42":{"tag":"tupletype","types":[{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"}]},"717a9c25eb892eba350c91b4c9080187b6bc2aa4":{"tag":"subtype","supertype":{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},"predicate":{"tag":"constant","id":"rational_pred","theory":"rationals","type":{"typehash":"5f72d24643ab14e4b255c8b1ac6dd982887152d4"}},"print-type":[{"tag":"typename","id":"rational","theory":"rationals","actuals":[]}]},"97b72fe6a63242c5c26257eb7a926afdd41ecdf1":{"tag":"functiontype","domain":{"typehash":"7b1844b92f6bb3faf16a698d618d1b997c20feaa"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"f9dfc0c5daed68d735ec591f7efd16ec22075ef8":{"tag":"functiontype","domain":{"typehash":"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"d288fd11ae1e75ed5502a350466c5a64f3c1f435":{"tag":"typename","id":"number","theory":"numbers","actuals":[]},"93221ff72587a9838098b479191ce1deaed91516":{"tag":"typename","id":"ordstruct","theory":"ordstruct_adt","actuals":[]},"7b1844b92f6bb3faf16a698d618d1b997c20feaa":{"tag":"tupletype","types":[{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}]},"34012ce34c4ce7e8874dfceb61781aace60c5d79":{"tag":"functiontype","domain":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"c17ba2e71b34900d42af21eeb134844cf4e9e162":{"tag":"functiontype","domain":{"typehash":"4382bfff3bdf2ad168cfacc26902ba9b3f38abfa"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03":{"tag":"subtype","supertype":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},"predicate":{"tag":"constant","id":"real_pred","theory":"reals","type":{"typehash":"34012ce34c4ce7e8874dfceb61781aace60c5d79"}},"print-type":[{"tag":"typename","id":"real","theory":"reals","actuals":[]}]},"5f72d24643ab14e4b255c8b1ac6dd982887152d4":{"tag":"functiontype","domain":{"typehash":"1b6a2d4bf6f8c1d87f74b700909c1f85c75ffe03"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"f4f200a0d337e4a60b30dfe136d073c7265be3e1":{"tag":"subtype","supertype":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},"predicate":{"tag":"constant","id":"number_field_pred","theory":"number_fields","type":{"typehash":"a56a4a9403ce4ae14abf07cdf6b328b8f111f42b"}},"print-type":[{"tag":"typename","id":"number_field","theory":"number_fields","actuals":[]}]},"aece8f38c7b6554bf39a6677488f47877026313a":{"tag":"subtype","supertype":{"typehash":"717a9c25eb892eba350c91b4c9080187b6bc2aa4"},"predicate":{"tag":"constant","id":"integer_pred","theory":"integers","type":{"typehash":"4e480c5400c53df5b58cca7d1bbe3ee6c2f584cc"}},"print-type":[{"tag":"typename","id":"int","theory":"integers","actuals":[]}]},"11c15fe18e476f962d4d8a6529ffdee55c710026":{"tag":"tupletype","types":[{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"}]},"378315377a9dd6a80396ca81e308b3cf7020c45c":{"tag":"functiontype","domain":{"typehash":"b039e315d9311c6b8771305f05cf599327cf74cd"},"range":{"typehash":"2734b1570a07f23e2bdaff1fa645679555de37e8"}},"5c399d211bf86e3a4eed26fef789f41b186f56b7":{"tag":"functiontype","domain":{"typehash":"4e3be81a543afbe0f09ee80c11961b63e55349b6"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"350b58e8264ad023a2d621d5506d89de8beb16e3":{"tag":"functiontype","domain":{"typehash":"39d6637d76121441a824031ab58b03e07adec56e"},"range":{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"}},"4e480c5400c53df5b58cca7d1bbe3ee6c2f584cc":{"tag":"functiontype","domain":{"typehash":"717a9c25eb892eba350c91b4c9080187b6bc2aa4"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"31a8a4adf80e30b9921d831a931d1e3c4c1b3ddb":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"constant","id":"zero?","theory":"ordstruct_adt","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"}},"print-type":[{"tag":"subtype","supertype":[[]],"predicate":[]}]},"ca62fd3344b1d80296e612052e69da44288adb09":{"tag":"tupletype","types":[{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"},{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}]},"e8dd3a6340bb66d6cf377c6b1c977761c9204292":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"constant","id":"ordinal?","theory":"ordinals","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"}}},"2dd224b393847a08c08146f380310f3a3e311e59":{"tag":"functiontype","domain":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"b039e315d9311c6b8771305f05cf599327cf74cd":{"tag":"tupletype","types":[{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"},{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},{"typehash":"93221ff72587a9838098b479191ce1deaed91516"}]},"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9":{"tag":"subtype","supertype":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"},"predicate":{"tag":"lambda","bindings":[{"tag":"variable","id":"i","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}}],"expression":{"tag":"apply","operator":{"tag":"constant","id":">=","theory":"reals","type":{"typehash":"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf"}},"argument":{"tag":"tuple","exprs":[{"tag":"variable","id":"i","type":{"typehash":"aece8f38c7b6554bf39a6677488f47877026313a"}},{"tag":"integer","integer-value":0}]}}},"print-type":[{"tag":"typename","id":"nonneg_int","theory":"integers","actuals":[]}]},"4f19419082f24e96423f3b076548a2c3de11ecd9":{"tag":"typename","id":"boolean","theory":"booleans","actuals":[]},"4309ab331cdffefc5584f370d6ac2d3e12576b59":{"tag":"functiontype","domain":{"typehash":"1c0618a3f8cbef8da2ccc1e140808fcd91d78e34"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"817877d88dd5550e2967b691a585976a23f03bd6":{"tag":"functiontype","domain":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"1f3fdfef8b210c6b1ef9639b18c845136f682290":{"tag":"tupletype","types":[{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"},{"typehash":"a9b4557979b60d9f6bae59f5fdc78d5f282fac0d"}]},"a56a4a9403ce4ae14abf07cdf6b328b8f111f42b":{"tag":"functiontype","domain":{"typehash":"d288fd11ae1e75ed5502a350466c5a64f3c1f435"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"39d6637d76121441a824031ab58b03e07adec56e":{"tag":"tupletype","types":[{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"},{"typehash":"f4f200a0d337e4a60b30dfe136d073c7265be3e1"}]},"38b8cdca688534ef010fac2e68af5bdf4c2fe439":{"tag":"functiontype","domain":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"range":{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}},"2734b1570a07f23e2bdaff1fa645679555de37e8":{"tag":"subtype","supertype":{"typehash":"93221ff72587a9838098b479191ce1deaed91516"},"predicate":{"tag":"constant","id":"nonzero?","theory":"ordstruct_adt","type":{"typehash":"817877d88dd5550e2967b691a585976a23f03bd6"}},"print-type":[{"tag":"subtype","supertype":[[]],"predicate":[]}]},"e82fb70ca2174d284e3c0dc69979ae0796a1bdf1":{"tag":"tupletype","types":[{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}]},"4886da1f5829fc9e7c211302e9675d3abbc18ea8":{"tag":"tupletype","types":[{"typehash":"120f814405b86d927919a8e6aaf145e82ed7a16c"},{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"},{"typehash":"856a0db181f9502265b9418d0cd5ac1ccd5ac0d9"}]},"88447f07490be2a2670c50b24136dbecf9e63048":{"tag":"functiontype","domain":{"typehash":"1f3fdfef8b210c6b1ef9639b18c845136f682290"},"range":{"typehash":"38b8cdca688534ef010fac2e68af5bdf4c2fe439"}},"b773d4e9bd9e0f2359c9655b38ff40e5cb62a3cf":{"tag":"functiontype","domain":{"typehash":"255fc968a29595c401e05c55e3263dd5e336ff42"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"}},"722930c7941ff97b85cc889fced6dbe652f7d21d":{"tag":"functiontype","domain":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"},"range":{"typehash":"4f19419082f24e96423f3b076548a2c3de11ecd9"},"print-type":[{"tag":"typename","id":"pred","theory":"defined_types","actuals":[{"tag":"type-actual","type":{"typehash":"e8dd3a6340bb66d6cf377c6b1c977761c9204292"}}]}]}}}}